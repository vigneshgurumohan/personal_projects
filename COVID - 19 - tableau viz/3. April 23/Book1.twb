<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0119.2058                               -->
<workbook original-version='18.1' source-build='2019.4.2 (20194.20.0119.2058)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
        <calculation class='tableau' formula='206' />
        <range max='206' min='1' />
      </column>
    </datasource>
    <datasource caption='owid-covid-data (source)' inline='true' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='source' name='excel-direct.1wwxz4b0s0hb3j1brdka71nhggir'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/My Files/My Desk/COVID - 19/April 23/source.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1wwxz4b0s0hb3j1brdka71nhggir' name='owid-covid-data' table='[&apos;owid-covid-data$&apos;]' type='table'>
          <columns gridOrigin='A1:Q10001:no:A1:Q2147483647:0' header='yes' outcome='2'>
            <column datatype='string' name='iso_code' ordinal='0' />
            <column datatype='integer' name='#' ordinal='1' />
            <column datatype='string' name='location' ordinal='2' />
            <column datatype='date' name='date' ordinal='3' />
            <column datatype='integer' name='total_cases' ordinal='4' />
            <column datatype='integer' name='new_cases' ordinal='5' />
            <column datatype='integer' name='total_deaths' ordinal='6' />
            <column datatype='integer' name='new_deaths' ordinal='7' />
            <column datatype='real' name='total_cases_per_million' ordinal='8' />
            <column datatype='real' name='new_cases_per_million' ordinal='9' />
            <column datatype='real' name='total_deaths_per_million' ordinal='10' />
            <column datatype='real' name='new_deaths_per_million' ordinal='11' />
            <column datatype='integer' name='total_tests' ordinal='12' />
            <column datatype='integer' name='new_tests' ordinal='13' />
            <column datatype='real' name='total_tests_per_thousand' ordinal='14' />
            <column datatype='real' name='new_tests_per_thousand' ordinal='15' />
            <column datatype='string' name='tests_units' ordinal='16' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#</remote-name>
            <remote-type>20</remote-type>
            <local-name>[#]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>#</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q10001:no:A1:Q2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Index' datatype='integer' name='[Calculation_6217430435213434880]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Death Rate' datatype='real' name='[Calculation_6217430435230199809]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_deaths]/[total_cases]' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
          <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='Attribute' name='[attr:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='Max' name='[max:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
      <group caption='Action (location)' hidden='true' name='[Action (location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.205082' measure-ordering='alphabetic' measure-percentage='0.740472' parameter-percentage='0.0544465' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Angola&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Bahrain&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Cameroon&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Dominica&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Falkland Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Gibraltar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Haiti&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Isle of Man&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Japan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Macedonia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Moldova&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;New Zealand&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Palestine&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Romania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Serbia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;South Sudan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Spain&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;United Arab Emirates&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Zambia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Afghanistan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Australia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Bulgaria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Costa Rica&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Czech Republic&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Eritrea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Gambia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Guernsey&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Indonesia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Iran&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Libya&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Malta&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Mozambique&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Northern Mariana Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Saint Lucia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Slovenia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Thailand&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;United States Virgin Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Vatican&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Algeria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Azerbaijan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Bhutan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Colombia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Denmark&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Ethiopia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Guam&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Guinea-Bissau&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Iraq&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Israel&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Lithuania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Mauritius&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Namibia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Oman&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Puerto Rico&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Saudi Arabia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Singapore&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Somalia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Syria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Uganda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Vietnam&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76b7b2'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Antigua and Barbuda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Barbados&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Botswana&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Cape Verde&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Chile&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Croatia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Finland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Greenland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Hong Kong&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Kosovo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Laos&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Malawi&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Mongolia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Netherlands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Papua New Guinea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Rwanda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Sierra Leone&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Sri Lanka&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Switzerland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Uzbekistan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Angola&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Bahrain&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Cameroon&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Dominica&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Falkland Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Gibraltar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Haiti&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Isle of Man&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Japan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Macedonia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Moldova&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;New Zealand&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Palestine&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Romania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Serbia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;South Sudan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Spain&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;United Arab Emirates&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Zambia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Algeria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Azerbaijan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Belgium&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Bhutan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Colombia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Denmark&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Ethiopia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Guam&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Guinea-Bissau&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Iraq&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Israel&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Lithuania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Mauritius&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Namibia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Oman&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Puerto Rico&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Singapore&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Somalia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Syria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Uganda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Vietnam&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Aruba&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Belize&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Brunei&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Chad&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Cyprus&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Equatorial Guinea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Gabon&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Guatemala&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Jersey&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Liberia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Mali&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Morocco&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Nigeria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Peru&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Philippines&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Portugal&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Slovakia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Swaziland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Tunisia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Afghanistan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Australia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Austria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Bulgaria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Costa Rica&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Czech Republic&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Eritrea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Gambia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Guernsey&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Indonesia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Iran&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Libya&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Malta&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Mozambique&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Northern Mariana Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Saint Lucia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Slovenia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Thailand&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;United States Virgin Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Vatican&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Armenia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Bermuda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;British Virgin Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Central African Republic&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Curacao&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Ecuador&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;El Salvador&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;French Polynesia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Iceland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Kuwait&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Lebanon&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Maldives&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Montserrat&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Niger&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Poland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Suriname&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Trinidad and Tobago&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Andorra&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Bahamas&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Belgium&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Bolivia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Cambodia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Djibouti&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Faeroe Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Ghana&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Guyana&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Kazakhstan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Luxembourg&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Monaco&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Nepal&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Pakistan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Qatar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Senegal&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;South Korea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Taiwan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Ukraine&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Yemen&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Antigua and Barbuda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Barbados&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Botswana&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Cape Verde&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Chile&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Croatia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Finland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Greenland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Hong Kong&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Kosovo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Laos&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Malawi&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Mongolia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Netherlands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Papua New Guinea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Rwanda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Sierra Leone&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Sri Lanka&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Switzerland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Uzbekistan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Argentina&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Belarus&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Burundi&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Cayman Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Cuba&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Egypt&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Grenada&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Hungary&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Jamaica&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Latvia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Malaysia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Montenegro&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Nicaragua&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Paraguay&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;South Africa&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Sudan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Togo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Turkey&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Armenia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Bermuda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;British Virgin Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Central African Republic&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Curacao&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Ecuador&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;El Salvador&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;French Polynesia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Iceland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Kuwait&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Lebanon&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Maldives&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Montserrat&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Niger&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Poland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Suriname&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Trinidad and Tobago&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Aruba&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Belize&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Brunei&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Chad&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Cyprus&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Equatorial Guinea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Gabon&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Guatemala&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Jersey&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Liberia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Mali&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Morocco&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Nigeria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Peru&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Philippines&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Portugal&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Slovakia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Swaziland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Tunisia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Anguilla&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Bangladesh&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Congo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Dominican Republic&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Fiji&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Greece&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Honduras&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Kenya&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Kyrgyzstan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Madagascar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;New Caledonia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Panama&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;San Marino&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Seychelles&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Sweden&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Tanzania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Uruguay&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Zimbabwe&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#edc948'>
              <multibucket>
                <bucket>&quot;Saudi Arabia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Andorra&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Bahamas&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Bolivia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Cambodia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Djibouti&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Faeroe Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Ghana&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Guyana&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Kazakhstan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Luxembourg&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Monaco&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Nepal&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Pakistan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Qatar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Senegal&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;South Korea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Taiwan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Ukraine&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Yemen&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Albania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Benin&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Burkina Faso&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Estonia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Georgia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Guinea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Ireland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Jordan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Liechtenstein&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Mauritania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Myanmar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Norway&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Sao Tome and Principe&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Timor&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Venezuela&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Argentina&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Belarus&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Burundi&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Cayman Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Cuba&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Egypt&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Grenada&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Hungary&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Jamaica&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Latvia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Malaysia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Montenegro&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Nicaragua&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Paraguay&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;South Africa&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Sudan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Togo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Turkey&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Anguilla&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Bangladesh&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Congo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Dominican Republic&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Fiji&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Greece&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Honduras&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Kenya&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Kyrgyzstan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Madagascar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;New Caledonia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Panama&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;San Marino&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Seychelles&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Sweden&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Tanzania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Uruguay&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Zimbabwe&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Albania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Austria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Benin&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Burkina Faso&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Estonia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Georgia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Guinea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Ireland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Jordan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Liechtenstein&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Mauritania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Myanmar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Norway&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Sao Tome and Principe&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Timor&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Venezuela&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Country Analysis' type='sheet' worksheet='total cases heat map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Country Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Current World Scenario' type='sheet' worksheet='total cases heat map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Card - total cases,Card - total deaths,Card - total countries' />
        <param name='special-fields' value='all' />
        <param name='target' value='Current World Scenario' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Current World Scenario' type='sheet' worksheet='total cases crosstab' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Current World Scenario' />
      </command>
    </action>
    <action caption='Filter 4 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Insights World Scenario' type='sheet' worksheet='total cases heat map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Insights World Scenario' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Insights World Scenario' type='sheet' worksheet='Total tests heat map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Insights World Scenario' />
      </command>
    </action>
    <action caption='Filter 6 (generated)' name='[Action6]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Insights World Scenario' type='sheet' worksheet='Testpk vs Casespm' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Insights World Scenario' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Animated total cases and deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases - Worldwide</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:ok]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>#2020-01-02 00:00:00#</bucket>
              <bucket>#2020-01-01 00:00:00#</bucket>
              <bucket>#2019-12-31 00:00:00#</bucket>
              <bucket>#2020-01-04 00:00:00#</bucket>
              <bucket>#2020-01-03 00:00:00#</bucket>
              <bucket>#2020-01-16 00:00:00#</bucket>
              <bucket>#2020-01-15 00:00:00#</bucket>
              <bucket>#2020-01-14 00:00:00#</bucket>
              <bucket>#2020-01-13 00:00:00#</bucket>
              <bucket>#2020-01-12 00:00:00#</bucket>
              <bucket>#2020-01-11 00:00:00#</bucket>
              <bucket>#2020-01-10 00:00:00#</bucket>
              <bucket>#2020-01-09 00:00:00#</bucket>
              <bucket>#2020-01-08 00:00:00#</bucket>
              <bucket>#2020-01-07 00:00:00#</bucket>
              <bucket>#2020-01-06 00:00:00#</bucket>
              <bucket>#2020-01-05 00:00:00#</bucket>
              <bucket>#2020-01-17 00:00:00#</bucket>
              <bucket>#2020-01-18 00:00:00#</bucket>
              <bucket>#2020-01-19 00:00:00#</bucket>
              <bucket>#2020-01-20 00:00:00#</bucket>
              <bucket>#2020-01-21 00:00:00#</bucket>
              <bucket>#2020-01-22 00:00:00#</bucket>
              <bucket>#2020-01-23 00:00:00#</bucket>
              <bucket>#2020-01-24 00:00:00#</bucket>
              <bucket>#2020-01-25 00:00:00#</bucket>
              <bucket>#2020-01-26 00:00:00#</bucket>
              <bucket>#2020-01-27 00:00:00#</bucket>
              <bucket>#2020-01-28 00:00:00#</bucket>
              <bucket>#2020-01-29 00:00:00#</bucket>
              <bucket>#2020-01-30 00:00:00#</bucket>
              <bucket>#2020-01-31 00:00:00#</bucket>
              <bucket>#2020-02-01 00:00:00#</bucket>
              <bucket>#2020-02-02 00:00:00#</bucket>
              <bucket>#2020-02-03 00:00:00#</bucket>
              <bucket>#2020-02-04 00:00:00#</bucket>
              <bucket>#2020-02-05 00:00:00#</bucket>
              <bucket>#2020-02-06 00:00:00#</bucket>
              <bucket>#2020-02-07 00:00:00#</bucket>
              <bucket>#2020-02-08 00:00:00#</bucket>
              <bucket>#2020-02-09 00:00:00#</bucket>
              <bucket>#2020-02-10 00:00:00#</bucket>
              <bucket>#2020-02-11 00:00:00#</bucket>
              <bucket>#2020-02-12 00:00:00#</bucket>
              <bucket>#2020-02-13 00:00:00#</bucket>
              <bucket>#2020-02-14 00:00:00#</bucket>
              <bucket>#2020-02-15 00:00:00#</bucket>
              <bucket>#2020-02-16 00:00:00#</bucket>
              <bucket>#2020-02-17 00:00:00#</bucket>
              <bucket>#2020-02-18 00:00:00#</bucket>
              <bucket>#2020-02-19 00:00:00#</bucket>
              <bucket>#2020-02-20 00:00:00#</bucket>
              <bucket>#2020-02-21 00:00:00#</bucket>
              <bucket>#2020-02-22 00:00:00#</bucket>
              <bucket>#2020-02-23 00:00:00#</bucket>
              <bucket>#2020-02-24 00:00:00#</bucket>
              <bucket>#2020-02-25 00:00:00#</bucket>
              <bucket>#2020-02-26 00:00:00#</bucket>
              <bucket>#2020-02-27 00:00:00#</bucket>
              <bucket>#2020-02-28 00:00:00#</bucket>
              <bucket>#2020-02-29 00:00:00#</bucket>
              <bucket>#2020-03-01 00:00:00#</bucket>
              <bucket>#2020-03-02 00:00:00#</bucket>
              <bucket>#2020-03-03 00:00:00#</bucket>
              <bucket>#2020-03-04 00:00:00#</bucket>
              <bucket>#2020-03-05 00:00:00#</bucket>
              <bucket>#2020-03-06 00:00:00#</bucket>
              <bucket>#2020-03-07 00:00:00#</bucket>
              <bucket>#2020-03-08 00:00:00#</bucket>
              <bucket>#2020-03-09 00:00:00#</bucket>
              <bucket>#2020-03-10 00:00:00#</bucket>
              <bucket>#2020-03-11 00:00:00#</bucket>
              <bucket>#2020-03-12 00:00:00#</bucket>
              <bucket>#2020-03-13 00:00:00#</bucket>
              <bucket>#2020-03-14 00:00:00#</bucket>
              <bucket>#2020-03-15 00:00:00#</bucket>
              <bucket>#2020-03-16 00:00:00#</bucket>
              <bucket>#2020-03-17 00:00:00#</bucket>
              <bucket>#2020-03-18 00:00:00#</bucket>
              <bucket>#2020-03-19 00:00:00#</bucket>
              <bucket>#2020-03-20 00:00:00#</bucket>
              <bucket>#2020-03-21 00:00:00#</bucket>
              <bucket>#2020-03-22 00:00:00#</bucket>
              <bucket>#2020-03-23 00:00:00#</bucket>
              <bucket>#2020-03-24 00:00:00#</bucket>
              <bucket>#2020-03-25 00:00:00#</bucket>
              <bucket>#2020-03-26 00:00:00#</bucket>
              <bucket>#2020-03-27 00:00:00#</bucket>
              <bucket>#2020-03-28 00:00:00#</bucket>
              <bucket>#2020-03-29 00:00:00#</bucket>
              <bucket>#2020-03-30 00:00:00#</bucket>
              <bucket>#2020-03-31 00:00:00#</bucket>
              <bucket>#2020-04-01 00:00:00#</bucket>
              <bucket>#2020-04-02 00:00:00#</bucket>
              <bucket>#2020-04-03 00:00:00#</bucket>
              <bucket>#2020-04-04 00:00:00#</bucket>
              <bucket>#2020-04-05 00:00:00#</bucket>
              <bucket>#2020-04-06 00:00:00#</bucket>
              <bucket>#2020-04-07 00:00:00#</bucket>
              <bucket>#2020-04-08 00:00:00#</bucket>
              <bucket>#2020-04-09 00:00:00#</bucket>
              <bucket>#2020-04-10 00:00:00#</bucket>
              <bucket>#2020-04-11 00:00:00#</bucket>
              <bucket>#2020-04-12 00:00:00#</bucket>
              <bucket>#2020-04-13 00:00:00#</bucket>
              <bucket>#2020-04-14 00:00:00#</bucket>
              <bucket>#2020-04-15 00:00:00#</bucket>
              <bucket>#2020-04-16 00:00:00#</bucket>
              <bucket>#2020-04-17 00:00:00#</bucket>
              <bucket>#2020-04-18 00:00:00#</bucket>
              <bucket>#2020-04-19 00:00:00#</bucket>
              <bucket>#2020-04-20 00:00:00#</bucket>
              <bucket>#2020-04-21 00:00:00#</bucket>
              <bucket>#2020-04-22 00:00:00#</bucket>
              <bucket>#2020-04-23 00:00:00#</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' max='150000' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</rows>
        <cols>([federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk] + [federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk])</cols>
        <pages>
          <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{A8CAB065-CD15-4031-BDD1-640276F2B459}' />
    </worksheet>
    <worksheet name='Card - total cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10' italic='true'>Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
          </datasources>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' value='#e15759' />
            <format attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='#e10019' />
            <format attr='font-size' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='12' />
            <format attr='font-weight' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='bold' />
            <format attr='text-align' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='left' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' value='#e15759' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#fd5d6a' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F2171D5A-3858-463E-BAF1-1A9BB167EDBD}' />
    </worksheet>
    <worksheet name='Card - total countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10' italic='true'>Affected Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column-instance column='[location]' derivation='CountD' name='[ctd:location:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[ctd:location:qk]' value='#e10019' />
            <format attr='font-size' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[ctd:location:qk]' value='12' />
            <format attr='font-weight' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[ctd:location:qk]' value='bold' />
            <format attr='text-align' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[ctd:location:qk]' value='left' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='background-color' value='#fd5d6a' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[ctd:location:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{93D1A52A-87A3-47AE-BD71-603342D6238E}' />
    </worksheet>
    <worksheet name='Card - total deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10' italic='true'>Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
          </datasources>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='21' />
            <format attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_deaths:qk]' value='#e10019' />
            <format attr='font-weight' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_deaths:qk]' value='bold' />
            <format attr='font-size' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_deaths:qk]' value='12' />
            <format attr='text-align' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_deaths:qk]' value='left' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#fd5d6a' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{40C9C528-775E-44E5-A83A-B12F07C2D65C}' />
    </worksheet>
    <worksheet name='Log trend - total cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{B5FCEA75-351A-4552-B466-EF68CF9E6F21}' />
    </worksheet>
    <worksheet name='Testpk vs Casespm'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Tests per thousand vs Cases per million</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases_per_million]' derivation='Max' name='[max:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_tests_per_thousand]' derivation='Max' name='[max:total_tests_per_thousand:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action5]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:qk]' included-values='in-range'>
            <min>#2019-12-31#</min>
            <max>#2020-04-23#</max>
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:qk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]' scope='cols' value='Tests per thousand' />
            <format attr='title' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]' scope='rows' value='Cases per million' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <size column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' />
              <text column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5052486658096313' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</cols>
      </table>
      <simple-id uuid='{B2A02FE6-CAB0-4666-A2BC-89169DF2EDAD}' />
    </worksheet>
    <worksheet name='Tests per thousand population'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column-instance column='[total_tests_per_thousand]' derivation='Avg' name='[avg:total_tests_per_thousand:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-16#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-17#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-18#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-19#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-20#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-21#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-22#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-23#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:ok]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' scope='cols' value='Tests per thousand' />
            <format attr='display' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' max='20.0' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d7e7dd</color>
                <color>#c0decb</color>
                <color>#a9d4b9</color>
                <color>#94cba9</color>
                <color>#80c199</color>
                <color>#6db889</color>
                <color>#5cae7b</color>
                <color>#4ca56d</color>
                <color>#3d9b61</color>
                <color>#309255</color>
              </color-palette>
            </encoding>
            <encoding attr='size-bar' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]</cols>
      </table>
      <simple-id uuid='{4EE5588A-0D32-425C-A077-8BE07E74379A}' />
    </worksheet>
    <worksheet name='Total tests heat map'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_tests]' derivation='Max' name='[max:total_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='union' user:ui-action-filter='[Action4]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[location]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]' field-type='quantitative' max='28291134.826906607' min='-16273124.501735499' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]' field-type='quantitative' max='12718585.506073151' min='-8520234.090090245' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests:qk]' min='0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d8e0e8</color>
                <color>#c1d0e0</color>
                <color>#aac1d8</color>
                <color>#95b2cf</color>
                <color>#82a4c7</color>
                <color>#6f97bf</color>
                <color>#5d8ab6</color>
                <color>#4d7dae</color>
                <color>#3e72a6</color>
                <color>#30679e</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests:qk]' />
              <geometry column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3D43AEBE-B383-4C83-BE7A-2AEDA437183B}' />
    </worksheet>
    <worksheet name='Trend - Daily Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_deaths:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{1D153AF5-23D0-466A-AEA8-E17E9F3C99F8}' />
    </worksheet>
    <worksheet name='Trend - Daily New cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{48FE41AD-661E-4793-A3A2-D2780BD2D934}' />
    </worksheet>
    <worksheet name='Trend - Daily New tests'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]' field-type='quantitative' range-type='uniform' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{18875D8A-2BFC-4E80-9865-C68FF1DC5090}' />
    </worksheet>
    <worksheet name='Trend - Death Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column caption='Death Rate' datatype='real' name='[Calculation_6217430435230199809]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_deaths]/[total_cases]' />
            </column>
            <column-instance column='[Calculation_6217430435230199809]' derivation='Avg' name='[avg:Calculation_6217430435230199809:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Calculation_6217430435230199809:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Calculation_6217430435230199809:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Calculation_6217430435230199809:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Calculation_6217430435230199809:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[twk:date:qk]</cols>
      </table>
      <simple-id uuid='{E1E4FFEC-3175-47F1-978F-039F6BAF9DDA}' />
    </worksheet>
    <worksheet name='Trend - Total Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_deaths:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{E4EE1708-02D9-46F6-82F4-49C9D9D49962}' />
    </worksheet>
    <worksheet name='Virus density heat map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; - Cases per mn population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:ok]'>
            <groupfilter function='member' level='[none:date:ok]' member='#2020-04-22#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:ok]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]' field-type='quantitative' max='28291134.826906607' min='-16273124.501735499' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]' field-type='quantitative' max='12718585.506073151' min='-8520234.090090245' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases_per_million:qk]' max='2500.0' min='-100.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d4d3ea</color>
                <color>#b8b6e4</color>
                <color>#9e9bdd</color>
                <color>#8581d7</color>
                <color>#6d68d0</color>
                <color>#5650ca</color>
                <color>#413ac3</color>
                <color>#2d25bd</color>
                <color>#1a12b6</color>
                <color>#0900b0</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases_per_million:qk]' />
              <lod column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <geometry column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B99C3BC8-6096-4D74-990B-DDA4F17CABB0}' />
    </worksheet>
    <worksheet name='total cases crosstab'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column caption='Index' datatype='integer' name='[Calculation_6217430435213434880]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6217430435213434880]' derivation='User' name='[usr:Calculation_6217430435213434880:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:vtsum:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:vtsum:qk]' scope='cols' value='Cases' />
            <format attr='title' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:vtsum:qk]' scope='cols' value='Deaths' />
            <format attr='display' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:vtsum:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[usr:Calculation_6217430435213434880:ok:2]' value='24' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:vtsum:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:vtsum:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true'>([federated.0x8qzcj0uos0i21c7unqd0liuvhl].[usr:Calculation_6217430435213434880:ok:2] / [federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk])</rows>
        <cols>([federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:vtsum:qk] + [federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:vtsum:qk])</cols>
      </table>
      <simple-id uuid='{D7034ED7-0690-407B-800B-D4DB345681D9}' />
    </worksheet>
    <worksheet name='total cases heat map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases - Worldwide</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='union' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[location]' member='&quot;Argentina&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Bolivia&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Colombia&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Costa Rica&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Cuba&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;El Salvador&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Ethiopia&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Ghana&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Indonesia&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Kenya&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Malaysia&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Nigeria&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Paraguay&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Senegal&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;South Africa&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Tunisia&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Uganda&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Uruguay&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Vietnam&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]' field-type='quantitative' max='28291134.826906607' min='-16273124.501735499' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]' field-type='quantitative' max='12718585.506073151' min='-8520234.090090245' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' max='150000' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' />
              <lod column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <geometry column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B593E308-D141-4B5D-88C4-F65F5BA27B97}' />
    </worksheet>
    <worksheet name='total deaths heat map'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
              <calculation class='tableau' formula='206' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='4'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]' field-type='quantitative' max='32347879.825245474' min='-30129428.97001015' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]' field-type='quantitative' max='22554729.676050708' min='-17402508.43885117' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk]' max='15000' min='-1500' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e8d1d1</color>
                <color>#dfb2b3</color>
                <color>#d69697</color>
                <color>#ce7b7c</color>
                <color>#c56264</color>
                <color>#bc4b4c</color>
                <color>#b43637</color>
                <color>#ab2224</color>
                <color>#a21012</color>
                <color>#9a0002</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk]' />
              <lod column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <geometry column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BD384FA5-8BF8-440A-B5D1-97D80FDC280E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Country Analysis'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
          <calculation class='tableau' formula='206' />
          <range max='206' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97682' id='7' param='horz' type='layout-flow' w='98698' x='651' y='1159'>
            <zone h='97682' id='5' type='layout-basic' w='98698' x='651' y='1159'>
              <zone h='48828' id='3' name='total cases heat map' w='33685' x='651' y='1159'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48854' id='9' name='Trend - Daily New cases' w='33672' x='651' y='49987'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48828' id='11' name='Trend - Total Deaths' w='32506' x='34336' y='1159'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48854' id='16' name='Trend - Daily New tests' w='32507' x='34323' y='49987'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48854' id='17' name='Trend - Daily Deaths' w='32519' x='66830' y='49987'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48828' id='25' name='Trend - Death Rate' w='32507' x='66842' y='1159'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='11884' id='6' param='vert' type='layout-flow' w='13670' x='83645' y='4783'>
          <zone h='3188' id='10' name='Trend - Daily New cases' pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' w='13670' x='83645' y='4783'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='6377' id='8' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='13019' x='20586' y='1159' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='49' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97682' id='48' param='vert' type='layout-flow' w='98698' x='651' y='1159'>
                <zone fixed-size='280' h='48828' id='3' is-fixed='true' name='total cases heat map' w='33685' x='651' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6377' id='8' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='13019' x='20586' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48828' id='11' is-fixed='true' name='Trend - Total Deaths' w='32506' x='34336' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48828' id='25' is-fixed='true' name='Trend - Death Rate' w='32507' x='66842' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48854' id='9' is-fixed='true' name='Trend - Daily New cases' w='33672' x='651' y='49987'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3188' id='10' name='Trend - Daily New cases' pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' w='13670' x='83645' y='4783'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48854' id='16' is-fixed='true' name='Trend - Daily New tests' w='32507' x='34323' y='49987'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48854' id='17' is-fixed='true' name='Trend - Daily Deaths' w='32519' x='66830' y='49987'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9BD503E3-69B5-4DBB-BCF2-4259A70D41D5}' />
    </dashboard>
    <dashboard name='Current World Scenario'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
          <calculation class='tableau' formula='206' />
          <range max='206' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97682' id='20' param='horz' type='layout-flow' w='98698' x='651' y='1159'>
            <zone h='97682' id='11' param='horz' type='layout-flow' w='98698' x='651' y='1159'>
              <zone h='97682' id='8' param='horz' type='layout-flow' w='98698' x='651' y='1159'>
                <zone h='97682' id='6' type='layout-basic' w='98698' x='651' y='1159'>
                  <zone h='45806' id='9' name='Log trend - total cases' show-title='false' w='87516' x='651' y='53035'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='51876' id='13' name='total cases heat map' w='56127' x='651' y='1159'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='45806' id='12' name='Log trend - total cases' pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' w='11182' x='88167' y='53035'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone custom-title='true' h='11296' id='14' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='12537' x='86812' y='1159'>
                    <formatted-text>
                      <run bold='true' fontalignment='1' italic='true'>Top &apos;n&apos; Infected Countries</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='51876' id='21' name='total cases crosstab' show-title='false' w='30034' x='56778' y='1159'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='15591' id='28' name='Card - total countries' w='12537' x='86812' y='37444'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='11948' id='29' name='Card - total cases' w='12537' x='86812' y='12455'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='13041' id='30' name='Card - total deaths' w='12537' x='86812' y='24403'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1350' minheight='1350' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='62' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97682' id='61' param='vert' type='layout-flow' w='98698' x='651' y='1159'>
                <zone fixed-size='280' h='51876' id='13' is-fixed='true' name='total cases heat map' w='56127' x='651' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51876' id='21' is-fixed='true' name='total cases crosstab' show-title='false' w='30034' x='56778' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='11296' id='14' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='12537' x='86812' y='1159'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' italic='true'>Top &apos;n&apos; Infected Countries</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='87' h='11948' id='29' is-fixed='true' name='Card - total cases' w='12537' x='86812' y='12455'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='97' h='13041' id='30' is-fixed='true' name='Card - total deaths' w='12537' x='86812' y='24403'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='116' h='15591' id='28' is-fixed='true' name='Card - total countries' w='12537' x='86812' y='37444'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45806' id='9' is-fixed='true' name='Log trend - total cases' show-title='false' w='87516' x='651' y='53035'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='45806' id='12' name='Log trend - total cases' pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' w='11182' x='88167' y='53035'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{12BAB023-7FF3-47CF-B744-389ADCADC178}' />
    </dashboard>
    <dashboard name='Insights World Scenario'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='206'>
          <calculation class='tableau' formula='206' />
          <range max='206' min='1' />
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
        <column datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='None' name='[none:date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97682' id='7' param='horz' type='layout-flow' w='98698' x='651' y='1159'>
            <zone h='97682' id='5' type='layout-basic' w='98698' x='651' y='1159'>
              <zone h='48841' id='3' name='total cases heat map' w='49349' x='651' y='1159'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48841' id='10' name='Total tests heat map' w='49349' x='651' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='97682' id='40' name='Testpk vs Casespm' w='49349' x='50000' y='1159'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='160' h='7391' id='6' is-fixed='true' param='vert' type='layout-flow' w='14159' x='23186' y='725'>
          <zone h='2463' id='8' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='14159' x='23186' y='725'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='2463' id='41' name='Testpk vs Casespm' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='14159' x='23186' y='3188'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone h='2465' id='42' name='Testpk vs Casespm' pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' w='14159' x='23186' y='5651'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='50' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97682' id='49' param='vert' type='layout-flow' w='98698' x='651' y='1159'>
                <zone h='2463' id='8' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='14159' x='23186' y='725'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48841' id='3' is-fixed='true' name='total cases heat map' w='49349' x='651' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2463' id='41' name='Testpk vs Casespm' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' w='14159' x='23186' y='3188'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97682' id='40' is-fixed='true' name='Testpk vs Casespm' w='49349' x='50000' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2465' id='42' name='Testpk vs Casespm' pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' w='14159' x='23186' y='5651'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48841' id='10' is-fixed='true' name='Total tests heat map' w='49349' x='651' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{630C156D-E0FD-47E0-842F-B592CBD50CED}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='total cases heat map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2FA0EEB8-53C2-4EAD-B761-41C02CC36C9F}' />
    </window>
    <window class='worksheet' name='Animated total cases and deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-04-23 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8BCFDC49-14E5-4075-924A-659010DDC69C}' />
    </window>
    <window class='worksheet' name='total cases crosstab'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[usr:Calculation_6217430435213434880:ok:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C1F64EB-B6B9-43B5-90E4-BF9746461AD9}' />
    </window>
    <window class='worksheet' name='total deaths heat map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{22244511-CA84-4FD1-844C-F40384F7826A}' />
    </window>
    <window class='worksheet' name='Virus density heat map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:ok]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases_per_million:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B033E709-E2DA-4C7B-BE56-0FA4CC42F285}' />
    </window>
    <window class='worksheet' name='Tests per thousand population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]</field>
                  <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>11.406000000000001</value>
                <value>&quot;United States&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:ok]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases_per_million:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3C07C714-01C0-421C-A342-0474618778F0}' />
    </window>
    <window class='worksheet' name='Total tests heat map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0B281312-EED9-4193-9C9B-EF7FBD22D00D}' />
    </window>
    <window class='worksheet' name='Log trend - total cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1E08530-04EA-4D3D-AF58-C454BEE4E9A5}' />
    </window>
    <window class='worksheet' name='Trend - Daily New cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]&#10;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D11F5D7F-E624-43B8-9461-E55D52AD43A1}' />
    </window>
    <window class='worksheet' name='Trend - Daily New tests'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]&#10;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1EC5D4C-1837-4931-A512-514C2A5651F6}' />
    </window>
    <window class='worksheet' name='Trend - Total Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1D4DB97-1001-4A1E-8B44-82D2828083FD}' />
    </window>
    <window class='worksheet' name='Trend - Daily Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4BBB412-AC97-42F4-90BF-5F77D93B2A1E}' />
    </window>
    <window class='worksheet' name='Testpk vs Casespm'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D037E651-36ED-472B-AD7C-A725C300844D}' />
    </window>
    <window class='worksheet' name='Card - total cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{5EC9A529-83C5-45BC-B853-C6906A8936AB}' />
    </window>
    <window class='worksheet' name='Card - total deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{BBE73661-6614-40C4-8BA9-B1557B5EB8FA}' />
    </window>
    <window class='worksheet' name='Card - total countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='40'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{836E0013-45EB-437D-8899-73EAFFC15A2C}' />
    </window>
    <window class='dashboard' name='Current World Scenario'>
      <viewpoints>
        <viewpoint name='Card - total cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Card - total countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Card - total deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Log trend - total cases'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;Belgium&quot;</value>
                  <value>31119</value>
                  <value>#2020-04-15 00:00:00#</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='total cases crosstab'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='total cases heat map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{98FBB429-079B-48BD-B5F3-17F83C39C092}' />
    </window>
    <window class='dashboard' maximized='true' name='Insights World Scenario'>
      <viewpoints>
        <viewpoint name='Testpk vs Casespm'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>268</value>
                  <value>2.7530000000000001</value>
                  <value>1.831</value>
                  <value>&quot;Vietnam&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>549</value>
                  <value>158.04400000000001</value>
                  <value>3.984</value>
                  <value>&quot;Uruguay&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>61</value>
                  <value>1.3340000000000001</value>
                  <value>0.313</value>
                  <value>&quot;Uganda&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>901</value>
                  <value>76.236000000000004</value>
                  <value>1.5489999999999999</value>
                  <value>&quot;Tunisia&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>2839</value>
                  <value>40.673000000000002</value>
                  <value>0.60899999999999999</value>
                  <value>&quot;Thailand&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>426</value>
                  <value>17.887</value>
                  <value>2.387</value>
                  <value>&quot;Taiwan&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>3635</value>
                  <value>61.289999999999999</value>
                  <value>2.278</value>
                  <value>&quot;South Africa&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>442</value>
                  <value>26.398</value>
                  <value>0.33000000000000002</value>
                  <value>&quot;Senegal&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>6710</value>
                  <value>61.232999999999997</value>
                  <value>0.55600000000000005</value>
                  <value>&quot;Philippines&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>213</value>
                  <value>29.863</value>
                  <value>0.88800000000000001</value>
                  <value>&quot;Paraguay&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>9749</value>
                  <value>44.134999999999998</value>
                  <value>0.56599999999999995</value>
                  <value>&quot;Pakistan&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>873</value>
                  <value>4.2350000000000003</value>
                  <value>0.035000000000000003</value>
                  <value>&quot;Nigeria&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>45</value>
                  <value>1.544</value>
                  <value>0.28999999999999998</value>
                  <value>&quot;Nepal&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>10544</value>
                  <value>81.778999999999996</value>
                  <value>0.29499999999999998</value>
                  <value>&quot;Mexico&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>5532</value>
                  <value>170.91999999999999</value>
                  <value>3.4609999999999999</value>
                  <value>&quot;Malaysia&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>303</value>
                  <value>5.6349999999999998</value>
                  <value>0.27500000000000002</value>
                  <value>&quot;Kenya&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>11772</value>
                  <value>93.076999999999998</value>
                  <value>1.032</value>
                  <value>&quot;Japan&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>7418</value>
                  <value>27.120000000000001</value>
                  <value>0.17399999999999999</value>
                  <value>&quot;Indonesia&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>21393</value>
                  <value>15.502000000000001</value>
                  <value>0.33400000000000002</value>
                  <value>&quot;India&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>1154</value>
                  <value>37.137999999999998</value>
                  <value>2.2320000000000002</value>
                  <value>&quot;Ghana&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>116</value>
                  <value>1.0089999999999999</value>
                  <value>0.076999999999999999</value>
                  <value>&quot;Ethiopia&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>237</value>
                  <value>36.539000000000001</value>
                  <value>2.2189999999999999</value>
                  <value>&quot;El Salvador&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>1189</value>
                  <value>104.974</value>
                  <value>2.8079999999999998</value>
                  <value>&quot;Cuba&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>681</value>
                  <value>133.684</value>
                  <value>1.6639999999999999</value>
                  <value>&quot;Costa Rica&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>4356</value>
                  <value>85.608000000000004</value>
                  <value>1.3620000000000001</value>
                  <value>&quot;Colombia&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>672</value>
                  <value>57.569000000000003</value>
                  <value>0.38300000000000001</value>
                  <value>&quot;Bolivia&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>3772</value>
                  <value>22.904</value>
                  <value>0.192</value>
                  <value>&quot;Bangladesh&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases_per_million:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests_per_thousand:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>3276</value>
                  <value>72.484999999999999</value>
                  <value>0.86199999999999999</value>
                  <value>&quot;Argentina&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total tests heat map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='total cases heat map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='40' />
      <simple-id uuid='{1DACED09-C65A-4587-A0BA-2C7499D75936}' />
    </window>
    <window class='dashboard' name='Country Analysis'>
      <viewpoints>
        <viewpoint name='Trend - Daily Deaths'>
          <zoom type='entire-view' />
          <highlight field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Trend - Daily New cases'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Trend - Daily New tests'>
          <zoom type='entire-view' />
          <highlight field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]&#10;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Trend - Death Rate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trend - Total Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='total cases heat map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='8' />
      <simple-id uuid='{607517E5-83DA-444A-87D0-DC14231ECFF4}' />
    </window>
    <window class='worksheet' name='Trend - Death Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{813FC8BA-2E8F-4DFD-A813-DE6127CBD8F1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Animated total cases and deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Card - total cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEkUlEQVR4nO3ZS4iVZRzH8d87c+aijONkGVQILiLoRga6cRFB4cKFi6IgMFoI0iKEMkgX
      UlJJBSFRFAQF7gRpEZgEYUZUVlgkQTcpyyGIvNQ4x5k5t/dpMaGlU1DECH2/n9VznvNyeP9w
      vrzn4VSllBIJqu9i34B0MRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjN
      AIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwCh
      GYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYg
      NAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0A
      hGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZ
      gNAMQGgGIDQDEJoBCG3OAEopKaXMrtuds+vf3/zTXul0z61LSWm1kz9ef/7ndnvnXtf1fzKE
      9G815tpsPv9K6onJDK68KdP79qf/siUZ3fZgqr6+nNn9etqHDqcaaGTh+jszufPl9C+9NKOP
      bs7EtmeSUrLooY1pXHVFpvftz/SbB9L9+tuM7dia5qu7U082s3jLA2l//mVa7xzMkpeemu+Z
      pbMueAJ0j46nnmimPnEq03vfyuLHNqf30/GUqZkkyYJ1azKy4Z7Up5uZ2rM3o1s3JVWV1tvv
      JaVk4R1r03/50tlr196WsSceSWP5sjSuXp6xJ7dkaPXKdL8fT2PZlSnd7vxOK53nggAmdjyX
      unkmrUOHM7Lx3rQ//iz1L78myezPl6pK6XSSXi9ptVINNJJGI2VqOn2LR9M58l2mXnsjpdtL
      KSXNF3dlZOP6ZGAgp59+IYM3Xpvh22/J0OpVqRpzPoCkeXPBN/CSndtTWu1MDg+lPn4yMwfe
      z+Cqm9P7YTytDz9NmZ5Jd/zHVAuGs/DudZl4fGf6loxleM2tmXn3o3SPHsuiTRsysf3ZjD58
      f+ozUxlYcUO6Xx1J54tvZs8PdZ32wU/SPXoszV17MnLfXRdjdilVKX9xYs3soTUzrWR4KO0P
      DmXgumtSjY2e3auqKqXdSRr9qfr6Zg+13W56P59MfeJUBldcP5+zSP/Y3wYg/d/5P4DQDEBo
      BiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEI
      zQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMA
      oRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgG
      IDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjN
      AIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaL8BjOsJtRlBG7kAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Card - total countries' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADTUlEQVR4nO3XO4seZRyH4f9uDhtXIukEBT9BGmMREAOCgq3YiZ29HyBgHbGwsLSwVrGK
      VlYWKnjAKEGwsRA8BGOaGN3Nvm7esXdBm00Wcl9X+TDFr5ibeWZjWZZlIGrzqAfAURIAaQIg
      TQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIE
      QJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCk
      CYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoA
      SBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0
      AZAmANIEQJoASBMAaQIgTQCkCYA0AZB2IIBl9/asvvlu9n+5Nst6Paur38/+z9dmZubO9Ruz
      9/mVWe/s3vOhcDcc//fBzvsfzvrWn7P3yRez/eLzs/fpV3Pnt9/nzKWLc/PV12frmafm2CMP
      z+Zjjx7FXjhUB74A2y+9MFsXzs/GQ6dn9eW3c/qVl+fk42dn7+PPZn3z1uz/8OPMMTcn7g8H
      3uTV11fnr7ffmTOvXZyNB7dn2VvNrFYzJ07MyXNnZ+vJJ2bn3ctHsRUO3YEAdi9/NMvtvbn1
      xltz6tkL88elN2f/p1/ngeeenjvXb8zOex/M1vlzR7EVDt3GsizLfz2wrFYzx4/PxubmLOv1
      zOrv2Ti1da/2wV31vwHA/czfLGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIO0fRWVubtIAwZIAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Card - total deaths' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEVElEQVR4nO3Zz4tWVQCH8e/7a2YQkxFJjEpEGqL+gtrMrpZFiwgKCjcGtVBXlWVCYEVE
      qygXLUQhKAgKoiQJyYq0moUbY9SpVVQ0zEz2TjPvr3tajGjMO7WJZqDn+ezuuYfLOXAf7oFb
      K6WUSFD1jV6AtJEMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwCh
      GYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYg
      NAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0A
      hGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZ
      gNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0
      AxCaAQjNAIS2ZgCl308p5fp1KSndXnJ1rFTVtfur5yZJ6fWuj5Uy9Kysmi9tlKEAFt/5IPP7
      n8/CU0dSqipJcuWF1zK/71CWPvksvemZzD64N4Mff07ny28yv/9wFg4cTlnuJEmWPjyVuScO
      pv3GsZRSsvTRp5nbcyApJb3LP+TX+x7LYHZufXcp/Y2hAMYm7874Swcz+OmXpKpWXtyL32f8
      leey9P7HSX+Q5u6dSb+f3vTljN07ufJF6FwN4NSZbH31UHoXLqWanUvni69TG2mllJLFE++l
      uevWpD9Y941KaxkKoHdxJu2jJzJ+5OmkXk8pJTc8uSedz88lVUnzzok0btyWJKl+X0xtdDS1
      VitluZPSH6wcbxqNpF5P+83jqdqL6Z6/kPbR4+lPz6T33aV0zk6t+0altdTKqgP8wjMvpmr/
      kfrWLWndfluaE7vT/erb9KZnsunhB1IWfkv72Ltp3nJTRifvSufMuZTOcjY//mg6Z6fS2LE9
      yydPp3nHRDbvfSTp9XPl5dez5dl9yWCQ9ltvZ9ND96d5846N2rN0zVAAf7V08nTG7plMSpJq
      kNrIyNCc0ukmzWa6U+fT3LUzje3bUrrdpNVKrVb7L9cu/Wv/GID0f+d/AKEZgNAMQGgGIDQD
      EJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRm
      AEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQ
      DEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQ
      mgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYA
      QjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQ/gTXGAMe5ahIQAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Country Analysis' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Current World Scenario' width='192'>
      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
      wCPN/w+eDkXGPG+HPQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Insights World Scenario' width='192'>
      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
      uVy7PdynHv8fdew18kmISAoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Log trend - total cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Testpk vs Casespm' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tests per thousand population' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dSW/c2PnuH85DFWseVJKswbIt222rkzQQZEAQIKuss8gqyz+yv7v7DfIp
      LrK7y6zuJkCySYIgCXpId9vdmq25SjUPZHEm70LN07Is2ZbMUrFU/AFB3CXp6JDiy3Pe57wD
      5fu+j5iYKYUe9wRiYsZJbAAxU01sADFTTWwAMVNNbAAxU01sADFTTWwAMVNNbAAxU81UGIDn
      eRMx5qjG9X1/Yu6B53kYxdnsVXNlQ/9NEUQzhjBcK9QxXdcFwzChjjmqcX3fh+/7oOlw33ej
      mKvneaAoChRFhTruVXOdCANwHAeapiGdTr/2ea1WQ7lcvvRm9Xo9sCyLRCKBgaGhrrZva7ox
      E8REGIBt2zg9PcXx8TF4nsdgMABN02AYBgzDYGtrC6urq9jY2EAmk4EgCDg4OMDa2hoSicS4
      px8TYSbGB3AcB77vY2FhAbVaDYPBAACgaRpomkatVsPMzAxc10W/38ejR4/GPOOYSWAiDIBh
      GGQyGVAUhaOjI5TLZRQKBaRSKfi+D47jkEqlkEgkkE6nwfM8jo6OwPP8uKceE3GoSQqHvjhV
      iqLIZ+f9gIuftQYd9A011Ll4ng+aDtdRG9W4Z7fDD92xHM1cfQAUQp7qlXOdKAO4KY7jgGXD
      dXds2wbHcaGOOapxPc+D53kTcQ9c1wVFUaErVlfNdSKc4A9lYGgYmMNQx/R9DxQV/g5yNOOe
      yaBhjzuKuZ7NEwDefwmYz5VB33AeYzeAo6MjzM/Pv/f37+3tYWlp6Vq/Q7cMtLXuNWcWMynM
      ZUuwHRuDwQCSJME0TdA0DUVR4DgOBoMBWJaN5grQarUwPz+Pra0tAIBlWXBdF6IoolarYX5+
      HoeHh3AcB8lkErZtY39/H6urq9jd3SVOL8/zGA6H6Ha7kCQJmqbh2bNnb5wdxNxNbNuG7/tg
      GAamaSKZTAI421LZtn3lSXBkVCDDMDAcDiEIAjqdDur1OpLJJAzDwMrKCmZmZiDLMjKZDB4/
      fozt7W08ffoUtm3DMAzoug7btrG2tgbLslCpVOC67rgvK+aWEAQBqVQKvV4PuVwOhmHAcRzY
      tg1FUa78ubEbgOu6ODk5AQBwHAdJkrC6uoqHDx+CYRgUi0WkUimUSiWUy2XIsoxGo4Ef//jH
      2N/fR6lUgiRJMAwDlUoFPM8jm81ia2srdKcvJrp4nofBYIBEIoHhcAiWZeH7Pnieh2EYEATh
      0p+7kypQs9mE67oolUqgKAo9bYChbYT6OzzPBU2HHws0inF9+MAInOCRzNX3cCaDvr8TXE7n
      3+kEX6UC3UkDuEgsg8Yy6J2SQd8WMXgmo73+eUfroaP3Q53DZb8nquN+dw4W+uHSSOZ6dg4G
      CsBifg4Cx5/72usHnJcdgl6XyBvA4eEh6vU6FEXB0tISPM9Ds9mEJEnIZDIkftxxHAiCgFar
      hWw2C8dxIIoiKIqC7ToYWuFugWJGj+d7cF0X7XYbsizD887+O5PJwHVd9Ho9AEA2m72xEUTe
      AAzDQKvVguu6qNVqWF9fx9LSEur1Omq1GnZ3d/GDH/wAzWYTDMOAZVns7OyAYRg8fvwYqVRq
      3JcQ8wEED73v+0gkEuj3z1ZyhmEgyzKGww874By7CvQuWJbFj370IwDAyckJaJqG67p4+PAh
      fN/H0tISWYoNw4DrulAUBfPz87Bte8yzj/lQaJpGoVCAruskscfzPHLAlclkPmj8yK8AhUIB
      R0dHePjwIQzDgKZpKJfLkCQJCwsLAABRFGEYBu7du0ccHZ7nQ3ekYm4fiqKgqioURYFhGKBp
      moTG8zwPXdchy/LNx58GFUgzhrA9J9Qx45TIEaZEggJFU1DEBJiQZNY7pQJdF4HlkWBv/pa4
      jFgGnSwZ9CrunAFcJs01Bu3wc4K/k+tCZxTjBms8BeQSadzLVV5bFc7LiWFIi5PERBjA3/72
      NxSLRczPz6Pb7YKmabRaLTx48ACtVgvlchmNRgPpdBrdbhepVAr9fh9zc3PkjzqSnd6oNo8j
      HDe4F6qqYjgcIpVKodvtkuICmqZB13USZHjXmQgv0bZtOI6Dzc1NkhDP8zzW19dh2zZevHiB
      4XCInZ0ddDodaJqGjY0NdDqdcU89klAUBZ7nYVkWeJ6HJEnkaxzHkXDiaWAirlIUReRyOczN
      zeH09BQ0TRP91zRNUBSFfD5P/mhHR0eQJCmOBr0C3/fhui5kWYau6zBNE5ZlwTRN8vm0SMgT
      sQVaW1uD67rgeR4ff/wxstkseJ6HLMtQVRXpdBoURZEYcMdxYFnWW8Ngpx2O48jBYfDvwPlk
      GGYqtj/AlMigpmXCD9mncx0XDDsCGXQE4/q+D9/zQTM0GJoBx4Tz3pskFWiqZVAAoEYg2Yxi
      zA8Zl2e5S9WbUcmgd4GJuyNB4Nu73jy6roPjOLAsi5banYrSiB/NPQRLM7Asizzs5++VaZpg
      WXYkB3iTysQZgGVZePXqFURRhCAIoGkanueh3+8jlUqRo3OGYVAoFKbODwhyYIOgMVmWwXEc
      DMOAaZoAgHw+P84pRoqJUIEu4vs+Dg4OAAAvXrxAJpOBaZp4+fIlvvzyS+zv739wlOCkEiSF
      JxIJOI6D4XBI9tXTouxch4lbAYCzCMFSqYSdnR1UKhUwDINOpwNBEIgadFUO6F1nOBzCtm2I
      oki2QZZljSx0Y9KZWBXoolrgui7598XAr2qnjvpgGnyAB2DPKTznT8A9zwNN06HW3r8LKtDE
      GsB1iHOC42C4qZZBTceCaoXrE7iuC8YeUTj0NcdNS8rUBK+FTeQNoN/vk4C2m6Y39oaDOy2D
      Pp9fBeX7GAwGEEURjuPA8zwkk0n4vo9+v/9BSSN3mcgbQKPRwPHxMTKZDJaWlrC5uYnFxUVU
      q1X4vo/79++j1WqB53lomgbLspBKpZDL5WCaJnK53Lgv4VbwPA+yLKPX68HzPHLdgVH0+30U
      CoUxzzJ6RF4GpWka+Xwe9Xode3t7WFtbw/HxMTRNw8zMDD777DN0Oh20Wi0YhoFarQbDMPDt
      t99O1cknRVHodrvIZDJIJpNotVrwPA+SJKHf78cS6BVE3gBEUcTCwgJ830epVCK6f6VSQalU
      IqHRMzMzJD/03r176HQ6U3UIZhgGKQxgmiYYhiFFYRmGmap7cR0mSgV6V25rcCmtVgu+76NY
      LAIAGr3WnS6M9aC0+No9uZjhFVRSiFWgWAYNjVgGvRsGMBWbZM3UMVTDLo7rjSRr6jrjihyP
      bCLuf/AhjN0A2u02Tk5OsLi4+No+tdPpkMYXV71ljo6OSN7vRTqdDjiOQzKZhGYO76QMmpYU
      ZBNpDIdDGIZBSoOLokiahFiWhWQyGZ8TXMHYDeD4+Bjp9NkfUdd17O/vI5/Pg2VZ1Go1EtW5
      u7uLYrGIXq+HcrmMbrdLIkI3Njbw6NEjbG5uIpVKQRRFHB8fY21tjWSJ3WUEQYBlWdA0jeT7
      Bp8HjSLiOKDLGbsK9OTJEziOg2aziS+++AK+76Pb7ULTNBSLRdy/fx88z2N5eRnHx8dgGAbN
      ZhNra2sAzg7KWJZFo9HA7OwsCYeepkbZw+EQDMMgnU5DkiS0223iCAfh4jGXM/YVoF6vo9vt
      YmFhAZ7noVwuwzRN0i3m+PiYhPfev38fhmGQkh25XI70EwvyhEVRhKqqqFarePLkybgv71Zw
      nLOqd6ZpwjAMyLJM3vxxJtjbmQoVqKP2MDC1UMeMQqNsmRdRUN590h2rQFOuAiliAtlkuGrJ
      JMmgMVcTaQMIq0xfTx+gb6hhTIng+T7oESgr1xm3mMojKchX3qcpWNw/mMgaQLVaxenpKWZm
      ZjAzM/NBY5m2hZ4ergFEgYychs/76HQ6pFy44zhQFIVkycmyPDU1fm5CZA2gVqthbm4OjuPg
      H//4B3zfhyiK4DgOqqqSmvELCwuo1WpIJpOo1WpE+5+ZmYHv+6hUKuO+lJGTSqXQ6XRgWRZo
      mib7Z1mW4+p472DsMuhVuK6LdDqN4+NjDAYD8ib7+OOPkU6nMTc3h2fPnuHg4AAsy2IwGKBY
      LKJcLiObzeLFixdTUf2Aoii0223k83mk02kIgoDhcDiyWKW7RmRXgMePH2NjYwMLCwvI5/Nw
      HAeFQgEURWFubg6+70OSJDx48ADNZpM0yQ5K+ymKMhVLv+/75AXAsiwpCRnU+gxWzpjLuZMy
      qKqqJIwCAAZDFYZrhfo7otAhRhETELl3V7+IZdApk0Evhj9IvAiFDTckIpZB7wYTbQCO45Cq
      xhcJjv9pmkZL7aI17Ib6u/0RNJ5+27hL+TnIgvSGtBlm0+hpZGIMYGNjA8vLy7Btmzh4h4eH
      WF5ehqqqyGQyGAwG4DgOHMdhd3eXOMSu58JyJjsl0MNZUku324XneeB5HoZhkCbRnU4HNE0j
      l8vFRnANJsYATNPEP//5TywuLuLVq1cAgFKphMFggJcvX2J+fh71eh08z5PiT3ctCIyiKEiS
      BF3XkUgkSNtQ4Kz6W7x1uj6RlUEvI5/PY35+HpZlkXTH4+NjEvxVLpfB8zxs276TZUCCIsCK
      oqDdbpMyMYZhQFGUqWlrFCYTswKsrKwA+L5zvOu6SKVS8P2zk9CgRZLrurAsi1SLvktQFEWK
      3iaTSbiuC5ZlIQgCTNOEosQFsq7LnZRBL6KbOhw/3O3QbcugMi/euGl0LINOmQx6EZZhwYfU
      cTxgFIn2bxt3FIF3MRNsAOcXrvPLvmEYb5x8NvojaJR9yzwoLyLBS6/JnecT6ANlLN4CXY+J
      NoAXL16g1Wrh+fPn6Ha7yGazJMFelmVYlnWnnGHf99Hr9ch16bqOTCZDqsIFtZBiI3h/Jlo2
      oCgK6XQa2WwWpmni888/B3BWLWJnZ+fOdYmhKAoMw0CSJIiiCN/3wXEcaJqGZVlx/P8NmGgD
      CGg0Gmg2myT2Z2FhAdvb23euMK7ruhgMBqBpGo1GA6IowrZtUgollkGvz8SqQEG5v6D0X+A8
      0jSNbreLbrdLpNOT9umd8QE8z3st/OFih5zLjCBWgaasNGLwkAQPimXbod9Qx7HBsuGfvF41
      LvNde6ObEBvAlMmgF2+e67mwvXBjgRzHhYvwQy0ujssxHPgRGFrMGZE0gCC17/zbIJA33/UW
      U1X1jXDojtab2C1QKZXHbKYEy7LgOA6p9iaKIimB7rou6ZAZcz0iaQDVahWpVIokdm9ubqJY
      LMJxHNy/f5/s+xmGwd7eHpaWlnB0dIRCoQDXdTEcDlGr1fD06dM7URTK931yXcCZGtTr9ZDL
      5UgLKY7j4g7wNyDST0fQ9GF+fh4syyKbzaJarYKiKLiui3w+j8FgQNom1et1Io22Wi10u907
      0RYoOPRiGAaCIKDVahGFK3j4g6/HXI9I6mY0TWNrawu6rkMQBPT7fbLMC4IAVVXRaDTQbrch
      SRIpiSgIAjiOQ7vdhiiKd2ZLEDS6Cw68GIYhXeB934eu6/HDf0MmQgW6qOpcJQUGXOwkU+s2
      0NLCzgi7nQ4xhWQW5fTVq9j7ZILFKtCUyaAXiTvExAYwVTLoRXTbhKkPQh3T81zQIUeYBuMq
      UhISH5cyuQ0mwgB838fOzg5WVlbeWOotywLDMGQP3Gw233B8B7o6UTJohQJEToCmaXBdF4lE
      AoPBgChjqqrCcRxkMplxT3XimQgD0HUdBwcHyGaz0HUdwJmjXKvVQFEUbNtGqVRCv99HJpPB
      yckJjo6OsLa2NtFFoQIBoNPpIJPJQFVVpFIpDIfDOxfnNC4iqQJd5OjoCDRNY39/H51Oh1RG
      sG0b6XQajx49QrvdxurqKnq9HnRdh2maGAzC3fbcJkGnm+DA6/yeOJ1Oo16v37mk/3EwEQbA
      six++ctfIp0+q/HfbrfBsizR/Pf29pDP58FxHBRFgeM4EEVxoksjBgF+tm1DEAR0Oh2Ioghd
      1zEcDkn1i5gPY+JUoLdN96oiUc1+Bz0j3NVglDJoQckiI6de+wy4eRGsWAW6QyrQ+/zRL35P
      RlZQSGVDncdtyqAXryd+84fHxBnATRgYGjRLD3XMUTXKVsQE0nGBq1sj0gawv78PTdMwOzsL
      0zRRLpff+TOXyaC6ZaCpdkY1zVDhWY6EPriuSyrBKYpCyqB7nhdLoCERaQNoNBoolUok+vHV
      q1cQBAGyLEMQznTyZrOJe/fu4fT0lLRPtSwLOzs7+NGPfoREIjHuy7gRyWQSnU4HmqYhk8lA
      0zQoikKy4Ea1Ak0bkb6Dz549w2AwQKPRgGEYpOKBZVlot9totVpIpVLo9XpYXV2F67rQdR3t
      9tmh16QmxQdBb6lUCjRNE4c7iHGKCY9IrwDVahW2bePevXuwLIu85UulEk5PTzE/P4+TkxPM
      zMxAFEWUSiX4vg/TNOG67sSWRAkecl3XIcsyKfNo2zZYlo3f/iEycTLoTehqfQwtI9QxR/UQ
      JgUZKTncZh6xDHqHZNCbkBRkZBLhFsodpQwac3vcOQO47ICqOxygF3Y0aIiNsiVBxGym9Npn
      5w+74u4vo2OiDMA0TTQaDczNzcGyLLAsS3wAhmHg+z5arRby+Txc1wXHcWfBcq4d+jlAmFD0
      2YOt6zpUVUU6nSZdH9PpNJFEE4kEBOHdTfFi3p+JMoAgMdz3fWxubkLXdbRaLeL4GoYBhmHg
      ui62t7extrZG4ocmAVEUoWkauZ7gje+6LgzDmFinPspMnJSwv7+Pvb09tNttWJaFUqkEWZZx
      cnJCqkIcHh6SepmTRBDoFuRCe56H4XAIz/MgiiIcxxn3FO8cE6sCBY0kzmvjF3uDBUpCtVNH
      I8InwUlRxv3iPQDfO9fn86Av5jhfl1gFuoMqUJABdllN/Is3r6jkMJMphvr7bccBN8KaQ+ev
      Ia77Pzom1gCug+XacB0z1DFd1wXj3jwnmGVYSO/R5T1mtIzNAHzfR6PRQD6fh2VZkCTp0u9r
      t9ukwNXFpnftdpv0yb2IpmlgGAaiKKKvq2ho0doCpSUFC7kKPM8jec1BITCO42CaJul2GZ/6
      jo6xGsBf//pX/PrXv0aj0YCqqiiXy2BZFr1eD8ViEaIoIplMYn9/H8lkEtvb26hUKuh2uxAE
      gcT67O7uYnV1Fdvb20ilUpAkCVtbW3j27Fnkc4JN08RwOEQ2mwXHceSaBoNB3PXxFhjrFujx
      48dYX1+HbdugKApHR0dgWRadTgftdhuffPIJSf+zbRuDwYCsFtVqFaVSieT/Hh4eIplMQtM0
      9Ho90hsg6kiSRBpeB7E/wFk06GAwQDKZjLwRTzJjXVsVRUEymSRRnkG8/+PHjwEAHMcRAwmK
      4RaLRQyHQ8iyDFEUMRgMSMlEWZbJA3R4eDgR5QI1TYNhGLAsi7RAGg6HRMKNtz+jJTIy6PuW
      +AtkwfPdES9KhBc/a/Tb6Oj90Of7IdsTRUygkn5TmQrkujDDH2IZdAJk0Pf5Qwc35fz3XiYR
      XvwsK6dQTIVbR2dUwXAB8d7/doiMAYwS3TJg6OGeCn9oOLTA8khJ4YY9x1yfyBqA53l4+fIl
      kskklpaW3miG/a6GEK1WC4lE4iy+xtLRjKAMmpKSsG0bpmmC53lomgaKopDJZOD7fqwE3QKR
      NYAg71VVVWxsbKDf72NxcREbGxuwbRvZbBaFQgGKosCyLBwcHCCRSECWZZyeniKfz5O+AVHG
      931YlkXaOgUyqK7r0DQNyWQyNoAREmmJ4fT0FDzPwzRNPHv2DNVqFblcDvfv38fDhw/R6/Vg
      GAZ2dnbw6NEjOI6DwWBApNFJ4HyFN1VVIUkS6Qjvuu7EBfRNGpFdASiKwtOnTzE/P4+joyOs
      r6/j3r178H0fsixjd3cXyWQSh4eHWFlZwebmJmzbRiaTgaIoSKfTE9EfTNM02LYNy7LA8zw5
      D6hUKuQMJGZ0REYG/RB0XcfOzg7m5+cvrZfTUXtQrXArRHyoEyzzIvLJN6vVxQ0y4g4xoRN3
      iIkNIPLnAKNENTSoYZdG9D3Q1PX/SAlBQjYxOVlqd53IGkC1WoVhGFheXn7ja0He70V2d3eR
      SqXeKI1oOFboSfE3haIoZBNpDIdD2LaNRCKBfr9PQjt830ez2UQ+n4/Vn1sgsgbQaDTgui5q
      tRoEQcDp6SlarRbm5ubw1Vdf4Sc/+Qn+9a9/4ZNPPsHJyQlSqRQsyyIO5dbWFj755JM3usZH
      BVEUSROP87tQVVVJ+cPYAEZPJGVQ27bJA9/r9eA4DizLQjabhaqqWFpaQqFQwOLiIoCzoLl+
      /yzWx7IsNBoNoqZEleDhpigKiqJA0zR4ngfTNIkhx4yeSK4AlmXhpz/9KSiKgqZpOD4+Rj6f
      JyVDgLNkmLm5OYiiiE6ng1KpRJwc0zRB03RkC+P6vk8e+ODhTyQSME0ThUIBnufF8uctMRUq
      0GCownBDjgVyPdDM9RdQkROgiFcbZqwCxSpQ6Ei8CIUN1xcYdTRozO1wJw3AdV3QNE322d1h
      H92Qe4TB94EbOKmzmRJkXnpr6cPYAb49ImsAX3zxBQBgdnYW6XSaZISZpolEIgFN08gyGSSR
      y7IMx3Gwv7+PxcVFsCwLhmHgeC5MJxoxNYHC02g0kE6nYVkWHMch1xg487lcLjaCWyCyBkDT
      NNbW1vD5559jfX2dOIyCICCdTmNnZ4fUy1xcXMQ333yD5eVl7O/vI5vN4sWLF3j8+HFkHeGg
      24uqqqTmf7BHd113zLObHiIpgwJnb8pWqwWGYaDrOnK5HARBwPLyMgzDwMzMDMrlMtLpNI6P
      j8FxHCzLwrNnz0gvrSgHw7muS9SeRCIBwzBIGZSY2yOyT8js7Cw0TcPz588xMzNDzgFEUcTc
      3ByA73OELctCt9tFqVQiD9TDhw/hOE5kqykH+/5UKgVd15FIJEgR3DgH4PaYChl0aOpwfS/U
      MV3XAcNc//0hcSLYt2SyxTJoLIOGDs9wE/HHj7l9btUA3lXl2PM80tjiOgTJJJZlkZ89v4Vo
      ql20ht2bTzwksnIKs5nSa7LnZVWgY26PWzWAL7/8EhzHoVwuo9frYWZmBicnJ1hZWcHJyQl4
      nserV6+wsrKCQqGAv//97xAEAQsLCzAMA6VSCd1uFxRFIZ1OQ5ZlaJqGf//73/j4449JLnAy
      mUSz2US5XI5kTnBQDCuRSJBqcKIokp4HxWIx0g78XeLW7nLwpvvoo49g2zY2NjZQr9fBcRz+
      /ve/Y3Z2FpIkged5HB4ekpgYXdfR6XRwenqKw8NDyLIMz/PQbDbx/Plz7O7uIpFIYGtrizxQ
      p6enyGazka2qlkgkYNs2SYA3TROiKJL4pVEk8MRczq09IRRFwbZtvHr1Cvv7+wAAlmVBURTJ
      f7Vt+7Vc3lQqRapHA2fKUBApyTAM9vb2iHLCMAzZRgQyaBT1dN/3YRgGTNMEy7LgOI5cQ9Do
      exJKOt4VblUFchwHmqZBEAQiUQ6HQ6KDB7V+fN8Hx3GkMbRlWeSB2d3dxcrKCnieh6qqkGWZ
      tBQ63zRD0zTIsgyWZVHrNiPjA1TSRbiuS062g7d98GewLAuiKIYqg8Yq0B3JCb5pqyDLtm4U
      t/M2biKDMjQNhn772z2WQWMZ9Epu2irI9334CNfOPc8HRb/9bIGmKPBsHNcfZSbCADzPQ7vd
      fq9a+UFN/fOG0tNVtIe9UU/zDXiGw/3SWS0jx3FI87tA6g0ywARBiKzDfteZiLu+s7MDVVVh
      WRY2NjZwfHyM/f19fP3119A0DV9++SWGwyH29vbwn//8B/V6HS9fvoxMW1HLstBut0nFtyDi
      07ZtuK6LXu/2jTPmjIkwAE3TsLi4SNIG19fX0Ww2QdM0qaz2zTffoN/vo1QqwTAMnJ6eotsd
      v+MLAIIgkC43wUMPnKlgw+EQiqKMeYbTy0RsgYrFIj777DOUy2X0+32IoghZlsFxHBqNBmkq
      3W63QVEUTNO8suneODAMg5Q5DNo4BQ2xWZaNdf8xMjEq0GXdYQKCptlBJhiA1zvE9MLvEAP4
      AN7ukPMsi6XC/LVGjVWgWAW6lMu6wwQE+v/5A6TXOsQkUiimJ6tDTMztMDEG8CFYjo2hbYQ6
      puu6YJyrNX2B5SFwsQQadSJtAI7jYGtrC7IskyJYruui2+2S0ojtdhuZTOatS6ZqDkewBXo7
      hWQWAnfm+Hre2XlB4PCyLAvTNKHrOtLpdJz8MkYibQCmacL3fRwdHUGWZWxvb+PBgwdotVpo
      NBro9/u4d+8eOp0OZFlGp9NBvV6HruvgOA4fffTR2J1hwzDg+z4SiQQJ/VAUBb1eD6lU6t0D
      xIyUyMugtVoNtm1jfX0doiiiXq/D8zwYhkEe+l6vB9M0SQ6xoiiYnZ2Fqqrjnj4xQIqiMBwO
      yds+SIiPYsDeNBFpA6BpGrIsQ1EULC8vw3VdFAoFUvD24OAAsiwjk8lge3sbwFmH9WQyCUEQ
      xu6kBiUQDcMgZVwoioJhGOREOz4BHi8TI4MC3xeM8n0fGxsbYFkWKysrlxaXOk9H7WFgaiOZ
      y1WkZQVpSXnt+8/P76r5xjJoHA0aOnGHmNgAJv4c4EMYR6PsbCIN9h2hzzHjZ2IMwHEcvHz5
      EoIgYHV19crtR7PZfKNDjG6bty6DpiUFHij0+31SAt11XdLEr91uQxTFyFaumxYmxgACtaTf
      7+Pg4ADlchnVahXVahWLi4s4PDzE3Nwc6RDz6tUr/PCHP4xEpTXXdUkfg6ABuOM4cQ+ACDBR
      EkSj0YCqqiSiMkiJPP//mqah2+3C8zxoWriO73WhaZrsuymKIimQNE0jk8kQg4gZHxOzAjAM
      g+fPnxOHbnNzE9lsFoPBABzHkYSTdDoN0zShKMrYD8Fc14VpmmT1CrZtwSmwLMvxKfCYmQoV
      qD8cQHfMUMf0PB80ffXDm09mb+QExypQrAKFzvb6Fj799NNQx7yoAv3iF7/AkydPQv0dMaMn
      MgbwtoOs8wdgV33P2/jzn/+MP+//C/mF8odP9BJONw8BAE+ePLlyrjede8xoGYgjQ8kAAAeN
      SURBVIsB7O3tYWFhAYeHh1hYWAAAkhfLsiwSicRrJ61bW1tYWVnBixcvIAgCstksSqUSGS/o
      BXB+zx/8fDDG7NMlzD5dGs0FffdMf/vtt9jc3MSvfvUr/OlPf8JvfvMbKIoC13Xxxz/+Eb/7
      3e8iWapxmhmLAQRJ4f1+H3/5y18gSRIqlQoGgwGJlmy1Wrh37x7q9Tp838fKygpUVUU2m8XL
      ly+hqioYhsHW1hZKpRJM0yQFsfL5PEzTxPPnz2+1P8Djx4+xs7ODZDKJBw8ekF6/n376KSiK
      ikySfsz3jEUGDbqhOI6DSqWCXC4Hx3GQzWaxvLyMbreLVCqFfr+P5eVlJBIJUBSFTz75BIeH
      hygWi1haWkKtVoPrusjlclheXkan04GiKMQggtqbt8X55tfBvw3DwP7+Pmq1Gg4ODm51PjHv
      ZiwrwMrKCr7++ms8f/6chAhTFAVJkvDq1St89NFHODo6wtLSEvb29kjyy97eHmZmZlCpVLC3
      t4fZ2VmkUinMzMxgZ2cHa2traDabpHr0bZ+yvnjxAp7n4ZtvvkG73cb29jZyuRx++9vfolqt
      olgs3up8Yt7NVMigf/jDH/B//t//RSITbq/ggEGji//9P/8Lv//97z94rFgGjaNBQ6ff78M0
      wz0HuHhDk8lkKAdvsQHE5wBXclFKdByHlEW/yPkb6VAeNCrkPsGcD+u7MSVOIA//22TQWAKN
      HhNhAN988w0cx8H8/Dw8zwPDMKBpGicnJ1heXkav10OhUEC32wXP8+B5Htvb28TB9nwPrjeC
      1MPv1s6gAd9wOISmacjlcmg0GigUCqQHcLVaxczMTFz7P2JMhAFYlkVq6LdaLbRaLXAcB0mS
      oKoq1tfXMTc3h1arRZpunK+5f1tIkgTTNEmnl4B+vw+e5+PAtwgyEdGgLMtiaWkJgiDA933k
      83lyoBRUjDBNE8VikTTLG0epQdd1SaRqUAfUtm3SHSc4F4iJDhOxAqysrEAURXieh6WlJQDf
      +wOe56HX65GeYJ7nwbIsqKqKdDp9q/P0PA/JZBKe55GeXwCQTqeRTCbjBPgIMhUqkGmZ8EP2
      P8/nGdMUDZ4NRw2JVaBYBQodmqJBM+HeUMoHWIYFhfD/WDG3x9gNwHEc0jDvokwYLE6GYRCZ
      MagAHahB70NfH6BnjKZIlsxLmMkUSf8yiqJIteqgEXYw11gGjR5jN4DPPvsM2WwWCwsL2N3d
      xf3794mzuL6+jmw2i1arhWw2i4cPH2JjYwPpdBqapkGSJHAch0QigcFgQB5AURTRbDbx4MGD
      W3s767oOVVWhKAp0XQdFUchms2i326BpmvQ0iIkWY1+7Z2ZmcHp6iq2tLczOzmJ9fR17e3vY
      29tDMplEpVIBTdOgaRqDwQCe5+HTTz/FysoKms0mqtUqvvrqK9A0jS+++AJff/01VFXF/v4+
      2u32rV1H0LDDcZzXOr4EleBi/T+ajN0ALMsi24aDgwNwHEeK3AqCgGq1SjrIB00vfvazn+HF
      ixdQVRWGYSCdThMJdH5+HicnJ0gmk7equw+HQxJ9GuQ26LoO3/chimIcCh1Rxq4Cua5LFArL
      ssDzPKmcQNP0lVXdfN8n/kCwzfE877VQhGDf3eq3b8UHCLiYLhn89/v4ALEKFAfDhY7tOGBC
      VoEc2wHLnalAYTq3sQHEMmjouJ4Lxwt3C0L5FGhq7DvImA9krAbgeR7J4qIoilho0FXFcZxL
      k1o6nQ6y2eylY6qqSgLiAjRjiH7I1aFzcgridw0vWJYFz/NwXZfU+4nPBiaDsRqA4zj4y1/+
      gp///OegKAqnp6col8v4+uuv8ejRIxwfH2NhYYHU2Q8iPi3Lgud52Nvbw+PHj7G5uYlcLgeW
      ZbGxsYGHDx+i2+1idXV1pOUHLcuCZVnQdR25XI60cO33+6QGaEy0GfsW6P79+9je3gbHcWBZ
      FicnJ6hUKqTvV6/Xw8nJCURRRK/Xw5MnT3B0dARd16FpGg4PD5FMJtHr9eA4DpaXl0kCzKjd
      m8BxtyyLqD1R6EoT8/6MdZ2mKAr5fB48z6NYLMJ1XVQqFdI+SJIkiKKIXC6HbDZL/icIArrd
      LpFHZVkmUuPx8TESiQRs2x55UjxN0+B5nnSwDxSpoINNTPSJlAoUNMMOOJ9NdbFB9ts+C0IQ
      gsOnjtqDaoZrDGlRQSqRfC3zK4ziV7EKNMUq0FUXfb7MyPt+dv7kVRETyCbDDY0OwjUuM9iY
      ySFSBjAqwm6ULfFxdbe7QuQNQFVVUkrxbX11q9UqKpXKpV/TbTPUJnklhgVHMSQHWZIk2LYN
      TdOQSCTixhcTROQN4ODgAJlMBr7v4+TkBKenp8jlcrAsC/V6HU+fPsXOzg583yeKkOM4pDTi
      qGpx2rYNmqah6zokSSJnAbquxwYwQUT+tGZ1dZXInXt7e2g2m+h2u9jf3wdFUfj222/xgx/8
      ALZto9vtYjAYgKIozM7OjrRDTBD5aRjfb63inN/JI/IrQL1eh6qqqFQqME0Tjx49QqfTwcLC
      AnRdR6FQwH//+18Ui0WwLItcLgdBEEiuwCihKAqKosAwDNL7K377Txb/H8S3XwqX+gioAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total tests heat map' width='192'>
      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
      8dMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trend - Daily Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trend - Daily New cases' width='192'>
      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
      ak8zMTFh3bp1y17u4uKide7cOWtyctKeZmRkxBofH7enmZyctM6dO2ctLi5almVZiUTCOnfu
      nDU2NmbPMzc3Zw0ODtrzrK2tWX//+9+te/fu7dhmXdetoaEh69KlS/Zystms/bcLFy5Yly5d
      srchEolYn3/+uaVp2o7lpNNp67PPPrOuXbtm74+vvvrKOnfunLW5uWlZlmVpmmadP3/e2tjY
      sOd7+PChNTo6arczmUzuaMP2snRdt3RdtwqFgpXL5ezpn/9bsVi08vm8ZZqmdfPmzR37Y3l5
      2bpw4YKlaZqlaZr1+eefW9evX7dM07RM07QymYy9jdvL/qn2VBBjWRYzMzM0NTVhGAYulwtJ
      kn7Sr0TeunWLcDjM73//e1FML+yJYZooskwyU8CrulDdO/tTrlBkejlGfaWf87enaa4N7u0y
      6OzsLFVVVUxNTQGl0/rp06d/9PymabKxsUF/fz9zc3OMPsuzGk9TG/IzubDBu8ebufMkzKmu
      Br6ainDiaC3RWIYyb+kL4Vo8w4mOOh5MRzl9rIEb44u8/1orD2ZX6WioZDWWBglqQ37C60m6
      mqq493SFd0+0MPokzOtdR3iyuEFdyE/RMCkWDeqr/DyaX+et3kZGJ8O80dPIg5kova01LK0l
      CPhUfB43kc0Ux5qruft0hTP9TYw8DvPLEy3cmQzT3hAiV9DRDZPyMg8Lq1u81lnPvacrvNXb
      yMjjMAOd9cyvxKmvDJAtFEllCxxrrmZsbpVT3Q3cerTEL0+08HB2ld7WambCcSr8HvxeN2tb
      WVrqyhmfWyvto8kwb/c28dVUhK7mKuKpPJIE5WUenkW3ONlZz73pKG/3ldZ9srOe2Uicuko/
      BU0nldNoratganGD08cauPpwgV+dbGN0KsKJo3XMR+KEAl5Ut8JGMkdbXQUPZqL84kQLd56E
      OX2sgXtPV+huqmIrU0CRJco8bp5Ft+hqquL2xDLvn2zj/vQKb/c2Mb28SW2ln3gqTyavcfRI
      iLxmoOkG8VSOrqYqJhfWeb3rCLcnlnmrr4knCxu01JezuJrApcgMdNR/0/ENk0xeY+j+An3t
      Ndx/GiVYphIKeDHMb97fk5kCK7EUAZ9KOqvRXFe+twDkcjmOHj3K0tISW1tbqKqKy+Wyi+I1
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trend - Daily New tests' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trend - Death Rate' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO292XNb95n3+TkLNpLgBm4AV1GkKFGLbVGWF3nRYjmr3XZ64qRnOv1OpWvm
      vZiquZiai7nsmn+hp2vmrXorXZPpSWecOOk4tpPYsiVHlrWb4i6SkkhiIUiQALEvB2eZC5Aw
      KYuSSJESaZ5PFQrAAc45Dw5+3/Pbnuf5CYZhGJiY7FDEJ22AicmTZFMEYFYqJtuFTRGApmmb
      cVgTkw3HbAKZfOsxDKP4UFUVKNykDcNAfsK2mZhsOv/2b/9GT08Pfr+fUChET08Pvb29lJWV
      mTWAybefl156CV3XyWaznDx5kosXL/LCCy8AIGzGMKiqqsiyWbmYPHl0XefLL78km80Si8Vw
      Op1YLBYURSEWi5lNIJNvP3V1dQiCQG1tLTMzM3R2dnLnzh1cLtf6aoBIJEImk6GxsRHDMBga
      GqKmpoaGhgbArAFMtg/rKqW6rhONRmlsbCQUClFdXU0wGKS+vh4o9Lp1Xd9QQ01MNoN1CaCy
      spJQKFQcVrJYLAiCsGK4yRSAyXZgzQIwDAOv10s8HicYDFJVVcXQ0BAulwtRFIvfMZtAJtsB
      cxTIZEdjzgOY7GhMAZjsaEwBmOxoTAGY7GhMAZjsaEwBmOxoTAGY7GhMAZjsaEwBmOxoTAGY
      7GjWJYAlh7cldF03M0GYbEvWLIAl//8rV66gaRrxeJze3l5GR0c3wz4Tk01lzR5rS3f7pqYm
      IpEI+XweQRCYnp5mz5496LqOruvk8/nNsNfEZENZswAEQSCfzxOLxfB4PFRVVWGxWIpCkGXZ
      9AY12TasuQkkiiItLS04HA4kSUJRFEKhEPv370cQhM2w0cRk0zDjAUx2NOYwqMmOxhSAyY7G
      FIDJjsYUgMmOxhSAyY7GFIDJjsYUgMmOxhSAyY7GFIDJjsYUgMmOZl0CmJ6eZnR0FMMw0DSN
      gYEBAoGAGRNgsu1Ylzt0KBTC6XQSj8cRBIFMJoPP58Pj8RRFYIrBZDuwruzQoihisVhQVRVN
      0ygpKSGTyZip0U22HWsWgCRJ2Gw2Zmdn2b17N7Isk81mKS0tRRAERFE006ObbBtMd2iTHY05
      CmSyozEFYLKjMQVgsqMxBWCyozEFYLKjMQVgsqMxBWCyozEFYLKjMQVgsqMxBWCyo9mQ9Ogm
      JtuVdaVHHxkZ4erVq+i6TiqVYnBwkIsXL5qiMNl2rCseQNM0GhsbCYfD1NbW0trait/vBwqO
      cGZ6dJPtwrrToyeTSerr69F1nbGxMZ5++mkzPbrJtmNd6dGbmpqQJKkohl27diFJ0mbYZ2Ky
      qZjxACY7GnMY1GRHYwrAZEdjCsBkR2MKwGRHYwrAZEdjCsBkR2MKwGRHYwrAZEdjCsBkR2MK
      wGRHsy4BzMzMMD4+XowLuH37Nj6fb6NtMzHZdO7rsLOU6Xkp6S0U3KFnZmYoKysjkUgU06Xv
      379/RTyAGRtgsh24rwDOnj1LKBSioaGB48ePA1+nR7fZbCiKgqIoOJ1OhoaGOHr0aFE0pgBM
      tgP3FYDD4WBubo5du3YVty2tDRAMBtm9ezeVlZX4/X7Ky8sRRRFBEExvUJNtw6ru0Lquc/Hi
      RQ4ePEhfXx8vv/xy8bOlXQRBuOd7UwAm24VVS2kikeDmzZskk0m6u7tXfLZU0Fd7b/Lt46uv
      viIQCPDKK68wOTmJpmkcPnyYgYEBxsbGeO655+jv7ycWi9HQ0IDD4cBut3Pw4MEtHSy16ihQ
      RUUFra2tjI+Pc/Pmzcdpk8kWZHJyErvdjqqqDA4OkkwmAbh9+zavvvoqExMTvPrqq5SWljIz
      M0N/f39RNFuZ+w6DlpaW0tHRgaZpj8seky3KiRMnqK6u5t133yWdTjMwMICiKOi6Ti6XQ5Zl
      zp07x/Hjx/nud7+Ly+XC6XTy1VdfPWnT78t9m0DJZJKOjg6i0ejjtMlkC+Lz+ZienuZnP/sZ
      siwzNzfH5OQkhw8f5vr165w+fZqpqSnKy8vJ5/M8/fTTzM7O4nK5nrTp92XVTvClS5ew2Wyc
      OXOGf/zHf6S6uvqhD2p2gk22C6s2gerq6vB6vbS1tTEzM/M4bTLZTqgqjAxBOPykLVkX980K
      oaoqiqIgyzJWq/WhD2rWADuI2Rn48I/QtgtOvvakrVkz9y2lH330ETabjba2Nrq6uh6XTSbb
      CVcNtLRCadmTtmRdrNoEunnzJl6vl0wmY6Y5NFkdWYauvTAfgm3o/rJqDbBnzx4ymQzd3d0M
      DQ09TptMthu1tRCPQy4HdvuTtmZNrFoDJBIJzp8/zyeffILD4VjxmZke3WQFVhtUVMBc6Elb
      smbuOxPc09NDMBhkfn6+uN0wDG7evMm1a9eKXp9ffPGFGQ+wkxFFqHdDcPpJW7Jm7tsJLikp
      4bnnnlvRB9B1HVVVcbvdRCIRnE4nlZWVWK1WDMNAEAQMwzD7DTsMoa4e6foV1G32v99XALlc
      jmAwiMfjKW4TRZF0Ok00GqWrq4tUKoUkSUxMTFBXVwcUnOO2sgOUySZQXw+ZDHJeAUfJk7bm
      obmvADKZDF6vl6qqquI2QRA4cuQIqqpisViAgs+QLMsrvEJND9EdhsUC1S6YnYVd7U/amodm
      1T5APp9HVVWampo4fPjwis8kScJmsyGKYjE6zLzj73AEAdxumN5e/YBVBTAwMEBTUxOvvPIK
      X3755eO0yWS74m6EYGBbzQes2gSyWCz09vZisVjW5AhnsnksH3rWdb1Y66qquuK1LMvoul5M
      ZPDYmqNVVQXfoGQCnOWP55yPiLlCzDbiww8/pLS0lHw+j9fr5Z133iESiXDhwgXKysqw2WwY
      hkFFRQVDQ0M888wzeDwe3G734zHQMOCzM9DSAp3bw3XmgXmBcrkcAwMDj8MWk/vg9/tJpVLo
      us6hQ4ew2WzY7XZkWS66rAwODjIzM1N0X7l06RIXLlx4fAFNggBuT6EfsE2aQfe9Tff29hII
      BDAMg5aWFioqKh6XXSZ3kU6nEUWRO3fucPPmTU6fPk0ymWR8fJyTJ09y+/ZtWlpa8Hg8uFwu
      DMMgFouhKAq5XI6Sksc0NOnxQP+Nx3OuDeC+AggEAnR2dtLf38/o6ChHjx59XHaZ3MWePXto
      b28nk8kQDAbRNA1BEOjp6WFqaorTp08jSRKBQICuri7q6+uxWCzMzs5+w5VlUymvKNQEsShU
      Vj34+0+Y+/YBRkZG8Hq9HD58GJvNRnn5w3VszD7A40VRVQzAthWuuWHAX89BbR1073/S1jyQ
      +/YBnE4nsViMr7766qELv8njRdU1/r8b1/jltYtouv6kzfm6HxDcHv2A+wpgfn6e+vp6enp6
      Hpc9JmtEQCCvaUTSKfqm/VvDS9fjKUSKbQVBPoBVBRAOhwkEAvT19REKbT83152CYRhohs73
      9x3k0tQdrngnnrwIypxgtcJC5Mna8RCsKoD5+XnS6TS5XI7m5uYVn4VCIW7dulW80Ol0mtnZ
      2c211OSepJQcmbxCd72b//bwUW5M+/jrnfEnL4Kl4dAtzqq9pq6uLrq6ulhYWGB+fh6n0wkU
      ZiADgUAxPXp5eTkjIyNIkkR9ff1jM9ykgD8WxV1eiSSKVDpK+O8OP8+7N66Szec5vWdfcTb4
      seNphLFROHio0C/Yojxw2KCqqmqFN6hhGMiyjMPhQFEUpqenSSQS5HI5NE0rpkc34wEeD1OR
      eTzO8uL1tokiPz54mP8Y7uOPQ328vqcb+UmIoKYG+csvULPZQtzwFmXNli15gAYCATo6Oqis
      rOSll15icnLSTI/+mNF0ndlkgoOepqJrOhT8uN55+ln+MHiDD28O8sb+px7/EKksQ2kZluhC
      oTm0RVnzrUEQBLq7uzl69Cgul4uSkhJkWaajo8OMAXjMpPMKyVyOurJvDlHbZJm3Dz6DRZL4
      3cBXpBXl8RonCIXRoC3eD1hX3SgIglnYtwAz8RjVpaWr3t0tksQP9h2k0lHCe/3XSWSzj9dA
      twdmglt6ONRcJXIb44su0Fxxf3cDWZJ4fU83jRVV/Kb/Ogvp1GOyDqirK7hEPKD2yefz3Lhx
      g+npaSYmJhgYGCjGld+4cYNAIFAckk+n04yMjKAoCrFY7JFNNAWwTdENg0AsStND+NtIosjx
      jj101dbz2/6vCCUTj8FCwGYv+AY9IF2KYRhYrVbOnDmDKIp89dVXxGIxdF3Hbrdz5swZBEFg
      YmKCDz/8kBs3bvCnP/2Jubm5RzbRFMA2JZNXSOSy92z/3wtREHmhbTfPNDbz+4GvCMQeU8r7
      h+gHWCwWpqeni83qubm5Yqit3+9HkqSi2/eePXtQFAWv18uZM2ceuRYwBbBNmUsmcVislK4h
      abEoCPQ0tfJC627eH7rBZOQxZHR2eyA0A/rqMQnhcJhMJoNhGNy6dYvq6mpmZmbo6+sju9hv
      GR0dxeVy4XA46Ozs5Pnnn1+xfO96MSPCtinn74yTU1Ve27NvzfsahsHo3Cyfjd/k9J59dNTU
      bd6ghqLAe+/Cm29DaemqX1sK61yaR1oqP8vDPTVNQ5bl4iz38rDQ9WKW0m2IYRj4YwscbmxZ
      1/6CINBVW49NkvnTzUGimQx76upx2tae19MwDGYTcSodDuyWe9RGFgtCVTXMzmDcI12KruvM
      JOLUlTmRF0cXl9/Vl99Il14viXUjMpGYAtiGZNU8sUyG+kcIPBcEgV2uGr637wC/7r3Kl5O3
      qCpZ/Q69GrpuMJOI4bTZca6SGHevlsc12MeFyDc7w4qmMZdMcNDdyMnOvThky2MdYjcFsA1Z
      SKeRRJFy+6NHejVXVPFMYzNOm53myrVn/1B1nYGgn6aKKmrLnPf8jsNVh/P6NY63dcBdd+2s
      mmcwGCCVy/GLyxfYW9fA4aYWqhwlDy2EmZkZLl++zNGjRxkcHKShoYGDBw8SDAa5du0ax44d
      o7+/H5fLhc1mI51OU1dXR3V1tdkH2I5cnpognE7y/X0H17Tf3X/13QudL9++fNvy9w/z+m4E
      TSv0A773g8Kw6Cq2RdIpegNehmaCNFdWcaS5jabKKgTun9plYWGBaDTKtWvXyOVyGIbBz372
      M95//32qq6vx+/3U1tYSj8fJ5/PFZtZrr722vhpgqaOy1GlZKvDm7PDms9T+31O7Ns/b+fl5
      vvzySyoqKlBVlUgkwptvvkkymeTChQtUVFQgyzKTk5Ps3buX8fFxenp6KC8vp76+nr6+PsbH
      x9m3bx937tyhvLyc48eP09fXx507dzh48CAjIyPIsowsy9jtdux2Oz09PUiyDDW1MDOzqgAE
      QcBVWsZre7p5aVcnA8EAH44MYJdleppa2VfvRl70NbubRCLB5cuXeemll7h06RKKomAYBhaL
      BV3Xqa+vJxaLMTIywltvvcXly5dRFIU//elPax8GNQyDK1eucPHiRRRFQVEUxsbGuHjx4pP3
      Qd8BKJpGOJXEvUpBWo3q6mrS6XSx+vf7/YiiSGVlJdlsllQqhcfjYXJyklAoRDgc5vPPP2dw
      cBDDMGhsbGRycpKqqipyuRyJRGEyrampiYmJCex2Ow6Hg3A4TCgUor+/n97eXu7cuVMwwOOB
      6YdbNNtusfBsSxv/+YVXOLarg8GZaf6vLz/ni4lb93TnGB0dxel0EolEUFWVyspKhoeHcblc
      RCIRamtrsdlsPP/883R1dXHgwAE6Ojqoq6tbexNI0zRGRkZwuVxIkkRdXR29vb3kcjmee+45
      NE1bkZXMZGOZSyX5w1Af//2RF9bk5pzNZtF1nd/85je88847nDlzhiNHjlBeXo4oivz2t7/l
      b//2b7l06RJtbW34fD78fj8VFRWcOnUKXdeZmJggHA7z7LPP8t577/HOO++gqirBYJCJiQle
      fvllfv3rX/PTn/6UM2fOFIcw33jjDYhEkM5/jvaDH4JsebDByzAMg1AywXX/FHcWwux21fJM
      Ywv1pWXfqBGWUvTf/f7u7Uusyx06lUoRj8fp6OggHA7jdDpJpQo+JrIsrxi7NdlYgok47vIK
      bJa1FaJUKsWlS5d44YUXuHLlCk6nE6vVytzcHENDQzz//PP09/eTy+Vob2/HYrHQ3d3NrVu3
      KC0t5caNG/h8Pg4dOsTZs2d57rnnmJ6eJplM4vV6OXr0KGfPnuXpp5/GZrPR09PD7Ows1dXV
      hbLgcoGuIaXTULX2zransgpPZRUpJUfftJ8Phvsptdp4urEJiyjR7qrFso4yt65OcD6fJ5/P
      Y7PZgEJIpM1mKy6lanaCN4/3h/porKikp6n1SZuydj4/B7U10H3gkQ5jGAZ5TWN8PsQXE+NE
      0mne6D7EAXfjmo+1rnaKxWKhpKQESZKQJKl4NzHZXFRNYzYRp7Gi8kmbsj48G5M2URAErLLM
      /gYPf3PgaVwlpeQ0dV3HMhvq24jYYju+yrH2CastwUO6R6+FBmcFpzr30Rvwoa4jB6opgG3E
      TKIQAGPdrv0rZzkIImyAH/9yWqursUoS4/NrT99jCmAb4YtGaK6o3r7zLaIIDQ0bvpqkLEoc
      aW7jincS3Vhb9JkpgG3CWgJgtjSblDaxs6YOVdfW7OJtCmCbkMhmyWsa1etwWNtS1NYWVpDJ
      bWx8skWSONzUwuU1ZsYzBbBNmE3GcdrtONY4/r/lKC0rpE2MLGz4obvrPcQyGabjDx/tZgpg
      m+BfDIDftu3/JQQBGjZnVXmbLPO0p5nLUw9fC5gC2AYYhlHIALEOd+Utibtx09KnP9XYRCAW
      JfyQ2S9MAWwD0opCWslRW1b2pE3ZGFwuyGQgnd7wQ9tlCwc9jVzxTjzU900BbAPmUglKrDZK
      rLYnbcrG4HBASQmE5zf80IIgcKSpldHQLPGHSAS2LgHMz88zMVFQmK7rjI6OEgwG13Mok4fA
      F12gsaIScbu3/5dYSpu4Cf0AgFKrje4GN1d9D+4LrFkAuq7j8/lQFIVEIoGqqjQ1NTE5OWnG
      A2wS/ugCzdt9/P9u3B4IBjelHyAIAs+17GIgGCDzgCzla3bZXEqPXlpaSi6Xo6ysjOvXr7Nv
      XyE9h6qqZnr0DUTRVMLpFDUlpd+ua1rmRM7n0aILGKvEEj8KpbKFtioX13wTvNDyzWwUS6wr
      HkAQBPx+Px0dHczNzaEoCpFIpBhWZ7pDbxyz6SQlVisVJaVPJs//ZiHLUFGOvLCwrviAh+GF
      tt38pu8az7W2Y1slCGfNpVQQBPbv3198DVBXV/cIZprcj0A0SoOz/NtV+GHZqvIBaN+9Kaeo
      K3NSV1bOQDDAkea2e37HTI++xfHHIt+e8f+7cXtgdnbT0qcLgsDzrbu47veSX8VV+lt2W/l2
      oeoaM9s5AOZBlFcABsQ31j16Oc2V1ZRYrdwMzdzzc1MAW5hwKoVVkteVsnBbYLEU2v+hzVth
      dGlE6Jpv8hsBM4ZhmALYykzHo4Wcmd+29v8SxX7A5i6jtNtVi2EY3ImsnHgLxmOmALYyvuhC
      ITPat7m/VV4OPi8EHi5n0HqQRJFnW3Zx1TuJttjfUHWNc7fHTAFsVQzDIBB78BJI255cDlQV
      Rkc2dS2xvXUNpJQc/ljBDXt4Jkhe00wBbFUWMmlAoNJR8qRN2VzadsH3f1joCPff2JSZYVgK
      mGnlineSRC7Ll5O3Od6xxxTAViUYj1FTWrauZE9PAsMw6O/vJx6PMzg4yEcffVRMVPv5558z
      NjbG9PQ0H3/8MdFolE8++YRkMsn0zAzUN8Cp1+HWLRge2jQRHGjwMJ9K8NHIAE2VVbRUVpsC
      2Kr4ohGanmAAjGEYK3y7lt7f6wGFlJmTk5OEw2F6e3s5cuQIVqsVn89HSUkJg4ODXLp0iV27
      dvH++++TTqf5/e9/TzQaLRzD6YTTr8PQAIyPbYoI7BYL3fUegvEYL7d3FrJEb/hZTDYEX3SB
      5qon0/6/efMm77//Pr29vUAhE+AvfvELNE3jz3/+M6Ojo/z6179mbGyM69evA4WUmO3tBZ+b
      06dP88EHH+D3+8lkMpSVlRVXsi8rK6O1tZV8Pk8ymeTzzz8nFFpMZ1JRCa99B65fhcmJDReB
      puv4ohFUXS9OjK1LAIZhoC0bU737bmHyaCRzWTJ5hdrSjXcSexhSqRRer5eFhUKH8ezZszgc
      DgKBAKFQiEgkQiQS4cyZMwwPDxONRslmswwODjI0NMTIyAg2mw1ZlrHZbPT29lJSUkJrayuf
      fvophw4dor29nddffx2Hw4HTuex3VlXBa6/DxQvg922oCAZnptF0g0PuJq75JoF1eoMuLURw
      9OhRJEniL3/5CydOnMDhePQVS0xgOh6jptT5xNr/Xq+Xn//853z44Yfkcjn8fj9erxfDMEin
      00xPT/OjH/2I8+fPY7fbGRoa4tixY/z0pz8Fvl5wY6n51tr6dR7Tw4cPIwgClZWF2e329vaV
      zTxBKKwlcOIUnPsMjp8szBU8Imklx4WJW/yw+xDldju/+uoK0Uz60dOj19bWMj4+TnNzM3a7
      3UyPvgGcuzOOLAi8tKvjiZw/Eolw4cIFDh8+TCaToaOjA7/fj8fjIZVKoapqMTny1atXOXr0
      KOXl61+vbFV8XqTLFzGOn0KvqXmkQ316axRFVfnu3v0IwF9Gh3FYrWsXgGEYXL16FV3X2b17
      NyUlJfT29tLc3ExLSwuCIJjp0R+RX167yMvtneyqfrQ/fdtjGDBxB65dhVOvgWt912M6HuU/
      Bm7wsyPPF91K5pIJ3uv/an3u0E899RSKomC324vv777jf6tnLzeRnFoIgPGUV26La2hoGXIz
      HyCVdSGXdYBoRxC+Wfvrur5iWa2l33bf3ygIBVdpNV9oDr32OqwxMk7Xdc7eGuX51nacNnvx
      fLVlTpzJ9PrWCLPZbMW1AYCVnRiTRyIYj+IqKcO6DQKKDENDmTuDEvoLhM+DWMKVvhku3Qjx
      n37yMtU1bv7L//0xLzz3FKpRyvhkmKbWfUxO+Xjm8HO4Pc00NjWhZ2cRbbUI4j2CVgQB9uyF
      vAqffVoQwRqaWwOLHd+nPE3Fwq9rGhe/OI//8hVzmdSthn8xAH6r3/t1JUI28C66Mo+9+e+R
      SjsRJAfHd2cIqb+hYfcxkvF5bKV1ROYm2dXSwCejX9JS4SUxHeL89CfUuCp5+3QHRn4Oa913
      sbn/5p61B4IA+w9APg9nP4XXThcyzD2AtKLwxZ1x3jzwFPJik1zJ5fjzB3/EOzHBP/zj/2AK
      YKvhiy5wuKllyzZ/DENHjfWRm/4tcvlBHM3/gCB/7a4xPjrK3oOvkBZ3o5a08frfdHDx4kW6
      Gl/kyMln2NXdhdwwSSg0g5JLItQcRoydI79wBT0XwuZ+E8neAHffAgQBnnq60Bw6+xmcOl1I
      r0JhsW5R/OZaYV9MjNPmqqFp0Z8qEY/z3q9/hSiI/Kf/8T9T5nQi/dM//dM/bfRF2sqjQD6f
      j88++4yKigqcTifnz59nbGyMuro6Ll68iMfj4f3336exsRGfz0d19dqjsQzDIBQKkUqlKC0t
      RRAEEokEhmEUF6vLZDKkUqmCT7ooIooimq7zydgIJzr2Yrmrraxp2oprutqav1CYuPL5fFit
      ViwWC7FYjFAohN1uJxAIUFJSQigUwmazkclkHnp1H0NNkZ3+LfnwX7E1voO19hSCtHJfSZLY
      tWsX+Xweq9VKOBzm0KFDqKqK0+mko3MPVdU17Os+SFV1Aw3Nh7C6XsZS/Tx6LkRu+jcYagrJ
      0YwgWAoF/+sfWUirGAnD2CiKu5FPeqf4l/+4yvWxIJMzUSLxDJpmEFPSfDl1h7cPPINNlglO
      B/h///UXeJqaeeudn+CwyyhzZ3beQtmJRAKfz0c4HObYsWP867/+K6+99hpOp5PPPvuMZ599
      lvPnz6NpGrt27eLYsWNrHtHSdZ0rV64wNDTE3//93yPLMv/8z//M8ePHmZiYoLW1lcnJSXK5
      HE6nk9OnT2Oz2ZiORflwZICfHz3GB3/8I8lkkp/85CdMTk5y7do12traiMfjjI6O0tnZST6f
      p7q6mqNHjxZnWgGCwSB+v5/JyUl+/OMf09/fz/DwMIqisHv3boLBIMlkkpqaGkpKSjhx4sR9
      axzDMNBSt8n6f4Voa8De+A6ideOj1AzDQM/Nkgv+AT3jxVr/AyxVz36jb2CoKvFPzhCaXeCX
      mWreOH6AnKLiDcXxz8XxhqJUtRhk4wLllNFRkef2V5/TfvAI3//Oa5SKcyjBdwlPhnZeDeD1
      ehkfH+fUqVMYhoHb7eYPf/gDL774Il6vl56eHsLhMNPT06RSKaqrq4uTNg+LIAhMTk5SWVnJ
      7t27+eKLL1BVFYfDQXd3N9lsFofDgdfrZX5+nvn5efbu3ctwKIgsiuypraeiooKpqSkOHDjA
      jRs3OHXqFIODg7z88svEYjFyuRyBQICZmRlEUaSx8esF4hwOB+fOneOVV16hvLycdDpNMBik
      u7ub4eFhEokETqeTYDBIJBLB4XCsmtjA0BWU0J/ITf8eW/13sbnfRJQ3x0NVEAREuQy5sgfJ
      4SE3+xHqwhVEWz2CpeAXlcwovPv5CL8cCPM9j5Xvua3IjnJam1w81dHAS4daaWkrJUuO/+bp
      pwmM9eHvv4ittIPYtIIc/pTS/F/48oaTv44f3Hl9gOnpaURR5Pbt2xiGwcTEBB6PB5/PV8x4
      53a72bdvH2fPnl1XEyifz/Pxxx9z4sQJRkZGaGtrI5PJkMlkuHr1KrFYjJ/85CfEYjHi8Tj5
      fL6wAnz06xXg33//ff7u7/6OdDqNxWLB7/cjSRJXrlzh6NGjVFdX85e//IVsNsv0XRFV586d
      wzAMYrFY0fNy9+7dlJWVUV1djdvtLi6W3dfXd+98Q4aBlpsl6/slIFLS8b8sts3vga4tNlUW
      a5FH7L8IgoDs3Edp5/9GPvIlman/ilzaye3cMf7LnydorCnnf33nBcKjXozxfoSbXiYyEoLD
      jlzl5I5LoMdRzdSlz0nfGmSfrQN3pUFrVx8VTfVkKv5nqpx2GkPxndcE2iosXX9bxskAABGI
      SURBVPbll///uHCWfzjyAmUWKxcuXMDhcOB2u3G5XFy9epWenh4SiQRutxtVVVlYWCCRSCCK
      Im1tbQ91TkVRsNlsK7w47/6vDEMnH75ALvgfWGtPYa17HUGU7z4YKEkIDUGov7BNtIBkLTxk
      G0g2DMkGcuHZkO0g2VAlB4pgJydYUXSJnC6g6Qa6YaDphdVwNIPiNjWfJBPpI60ITGdbaGuo
      ZcEfRsnlcdglahIzKLYS8jYHuiihCyK6IGBIEggG7dJF3JavGNdfwc+z6MgYgoBurHOd4Aex
      3QSgaDq+aI6WShuyuIa7lyA8cLjSgAc6dOVUg+l4go9GrvM/Hbt/e/ye57jL92at++pG4aYt
      AIaaJOv7f9BzM9hbfo5UsnI9Yl1TURemyM8Oo0V95O0u1MoO8rKTnKKgKDly+Tw5VUfRBBRk
      FMGGIlhRBBt5wYYhSNgEFauRw6anseRTGKqOrhroqoGhGuiaiG7IZBWIp/I4JAGrquKqmaWm
      bo7ogB3ZF6d65g722AKGxYKgqWiCiCpb0GQZx+5Kyk7oCDNzxK5WoqiVGLoBBoiShMWm71wB
      KJpOOKUyl1KYWsgRSavYJAGrLCIIIC76ihdfLz4X3i9/XfhMoFDYCwUeDAwMY3Gbscp2CgUw
      ltFI5zUkMUtTRSWSKCCLIAkCkigsvheQvrGtcP7ZhIJuQGOFDX2xQK941r9+r921XdMN7kSy
      2C0iVQ6JXOIOqprFcHSgGhKqbqDqBtris6HryKKALEuF58WHRRKwygI2ScQmi1glofC8uO3r
      ZxHyKhHfHOGJWeYnZokG5hElCdlmKT7mElmmoykqZYFaSaGyAsrSYQiEKEuGsJbqWPaIiA1u
      1IomLJXl/NFvMHWlj1faHBx52olquUNqwYXmL0fPqeg5FUcugjU7hSTNIDhyO0MAumEQz2rM
      p/LMpfLMJfMkcxoVDomaUgtVDpmFtEq7y4FFEop3Rd1g2WsDffFYxuJnS4XKWNzGohCExZqh
      8LpgQ3HbXd9BgPlUnhuBGdpdDpoqqovVv1YsfIWCqy0rjMu/E06rGIaBq9RSFKcoFM4hLRew
      KKz4XFo0bnI+Rkl+lFq8CGXPY5EdSAJIWgY5NoEUGUPSMkjljYh13Ri2SigGxOiouSwWux2L
      zYFssSJbrEjWxWfZgqaoLPjnFwv8DLGZBZy1Fbha66lpr6e6tQ7ZKgMC6Vyedz8b4OzFIbq1
      FM9mE9TlFyhPz5NQ08yViCQbXCQtedz1GfZ1i8SiBpksZJCxSTp1lTplToFEwiCfzCPGY8ix
      KCW5OEgV5Byd5Ox7UKy71ieASCRCMpmkpaWlcAEnJ6mqqqKiogKAXC7HtWvX6O7upqqqirm5
      OW7fvs3hw4e5fv06XV1d+P1+mpqaUBSFhoZVOlfrJJvXiGRU5pOFAj+fUrFIAlUOmdpSC7Vl
      FqpKZGRR2BIpxzVd579e/oK3DjxNvfPhpvmX/23xnIZhQIX9ruFaQUAwDPK5FEo6hGgkyadm
      0bIhRD1GLjmNoC0gyToLUQeDAxL5nIGgJAEDQbIg2MpBFBGEwoPFmu/r1wKGrheGStU8mqqi
      KXm0rIRMBRaxColS8mqcvB7FsGQocdmxl5ZgsdmQrDZEQUTJpknHo0Rn53BGEzSkNWqyGpnq
      EkK1NmZqrQiuSsor6qgorafEUUmZ3YWqJJga+iN5QeXF/SI2LY6U90DYhx4aR0+kycm7Scvd
      JKW9pIxK8qrBQj5DTl1HDaDrOjdu3MDhcNDc3EwulyMajRKLxXjmmWcQBIH+/n6sVis3b97k
      rbfe4ne/+x3t7e0MDw+zf/9+bt68icViQVEUnE4n3/3e9xifz1Jhl6mwS8W7q2GAztJd9t7V
      umaAouqMhNJUOmTiWY2sqlNmlXCVytSWWqkts+CwiEjCvdvJhmGQzaVQ1fWtYJ5eiBCfuoW7
      rWNd7fCFbI4/3xzmx4d61jWAEg3NoGsaroZ6csk5tMwMIgmURABDXUCWFHStUEtouowgV2Ep
      a0QXypHtdcSjGaxWB6VKCCLjIMpQtx+hurPQsS3aJBSfFl3ZMAydkHccR1k12WiehakQ0UAY
      XTMQHCK2aju2Siv5fBpFyaLlc+iahqFpGLqKoWnk83mi81kaYzE8uQyCxcp8VQXzNdWkLRI5
      TUVRFDRVR1N1DEMvOtdhQFklHOtcoD4bwIgkyWsWUrjJyt3k5HZ0bICOIOggGEgiiJKBKK4z
      IMZiseB0Oslms2QyGSorK0kmk8VIMUEQqKioQNf1YmB0RUUFs7OzvPrqq4iiWJyNnJ+f53cf
      fkza/QyyCA6L9M2mgsCybcvb4YXqXNcNEjmN6hILzzTYqHTIWKTlHVQVLQ/3zg5Z+E1/+D//
      d5TU+pbssSkKR/wp5gVxXT48OgInDZnwex+t6/xqXgHDYFa69/lzgIGw2AcBiJLl6yWEdF0j
      i4AiLq9Bbj7UuQ0MBE0lJ4pIgkQNsBanZVUU+GX9U8zITnAt2ieKhef4fXYUgEVzxbTBtb6v
      f7kuSHyd801dfKxymPXEAwwMDJBKpejs7MRmszEwMEBlZSX79u0rpk7//PPP2bVrFxUVFczN
      zREIBDh8+DBXr15l9+7ddHV1EQgE6Ovro7t7P2Ut+6hyyFQ65GKBh2WFf/FHL9++3KZMXscm
      i0hrGcVZtn82k8RYZ16aVDTCwp1Rdh18FmEdE4DhVJJIOktnTe26zj87dQtdU2nY1bXmfQ3D
      YHp8CIezgmp385r313UN73AvrsY2nFXr89fPiRLaIzVFhXXPPayrD7AUA7w026vr+oqM0aqq
      Fmb1FtcSMAyj6At+L5+WtcwaZ7NZbt++zZ49e5BlmUAgQCqVYs+ePczMzOByubhz5w4dHR0k
      Egmq1hlYvtzmpd8IhRppaab7fn7tS79z+TWRZXnFcTZz/9VYftzlv3H58Zcf6352rWf/rca6
      hmruTo9+rwK83H9GEITi+7v9atZ6gc6ePUt9fT2XL1/mxRdfJB6Pc/78eZqbm/mXf/kX3n77
      bQYHBxkbG8Pj8dDT07OuP+Gzzz4jGAzyne98h/Lycn73u99hsViKnfqWlhZ6e3t59dVXkWWZ
      vXv3FvfVdZ1///d/x26386Mf/Yhbt25x/fp1Wlpa8Pl8iKKI0+kkk8ngcrl48cUXV/jy6LrO
      r371K0pKSnj77bcZGxvjxo0btLS0MDU1tWKFnurq6m/svxrBYJBz585RX1/PyZMnOXfuHLOz
      s+zdu5fBwUHq6+uZm5vD7Xaj6zonT55csX8gEOD8+fPU19dz4sQJzp49SygU+sb+jY2NqKr6
      jf23IlvTYec+5PN59u7dSyaTQRAE0uk0bW1tfPDBB7S2thZrnqmpKS5duvQNN4GHJZVKceLE
      CaampgiFQnR1dVFaWsrCwgInT55kamqKXC7H+fPnuXz5cvHODBCNRmlra6OqqopMJoPP5+ON
      N95gaGiI9vZ2ysvLyWQyzM7OMjAwwKVLl1ace2Fhofi9bDaL3+/nzTffpL+/n87OzqJ4gsEg
      AwMDXLly5aF+k9/v5/jx4ySTSaDgGPj666/zySef8Prrr5NKpdA0jb6+PsbHxxkbG1uxv8/n
      48SJEyQSCQCSySSnTp3i008/5Tvf+Q7JZBJVVblx4wbj4+OMj4+v69o/TradM1w0GuXixYvs
      2rWLhYUFzpw5g8vl4tlnnyWVSuHxeKiursbj8TA9Pc2+ffvWFbE2NDREOp2moqKCkpISRkdH
      SSaTxeq+ubmZxsZGUqkUoijS0dFRdCuWJImrV6+SzWZxu93E43Gi0SiZTIZ0Ok0ymeStt95i
      fn4eu91OJpMprrG2fP9cLofb7SYWixGLxchms8X93377bcLhMDabjXQ6vWL/1YjFYkxPTxc9
      Qaemporx26lUinQ6zZtvvkkmk0HXdZLJJHv27Flx7WdmZkgkEtTU1DA5Obli/0wmww9/+ENy
      uRy6rhebpluZbTcRtjTSdL/jL/2k5W34tbKwsIDP56O9vR1d15mdncXhcFBWVsbU1BQHDx4k
      EongdDoZGxvj4MGDK/a/desWNputuM/w8DB79+4lGAxisVhobGwkHo+TyWQA8Hg839jfbrdj
      s9lwOp0MDw+zb98+AoEANpsNt9tNIpEgnU4jiiJut/uBv0nXdQYGBmhtbSWXy2G325mYmODA
      gQMMDQ3R2tpaFLHP58Pj8ay4eWiaxuDgIG1tbWSz2fvu7/V6aWpqomyLL+697QRgYrKRbEo7
      ZT2dTn2dQ5Absf/SaMZ23f9JXrsnvf+jZiXcFAGsp9nxqMNlj/onbOfz7+Tf/qg3jy3TTnnU
      P+FROt0bMVb9KInAnuRv3+7nf9QVSzelD2Bisl3YlGHQzSCZTNLf348kSZSVlaEoCqFQ6J5D
      nPPz84yOjqKqKj6fj9nZWerq6tZ9p5iensbv9yOKIiMjIwiCgNPpRFVVZmZmHmiD1+tlbm6O
      2traddmgqipDQ0MEg0Hq6+sZGxsjFApRXl6OLMsoikIgECh6446OjnL79m0sFgs3b97Ebrev
      O3FxPB6nv78fj8fD6Ogo4XAYl8vF6OjoChtyuRzBYHDDbUin0/T29tLQ0IBhGFy5coXGxkau
      XbtGTU3NNwZb4vE4w8PDpNNpAoHAA6/7lmkCPYhkMkkulysOs2maRiwWIxwOFx3xstksx44d
      o7q6mlQqRTweR5IkZFkmnU5TWlq6rnPX19czPz9PKBSisrKyGDesaRrRaLToHr5kw0svvbTC
      BovFgiiKZDIZSkrWHlAuSRLt7e0MDAwAhT+5sbERv99PIBCgsbGR0dFRpqenef7559m9ezeX
      L19menqap556iuHh4XXFNkMhn7/NZkNRFCYnJ2lpacEwDBKJxAobPB4PY2NjBAKBDbXBbrdT
      WlpadLFY+h/C4TCxWIzbt28X5yT2799PQ0MDbrebcDi8wv1mtVHJbTMTXFVVxTPPPFOcXczl
      ckBhvH5pEYbm5mY0TSMUCpHNZoupQxRFeaQ2+tK+nZ2dSJJUTAupLbryLrehqakJVVWZnZ0t
      2qAoCvl8ft026LrO4OBgMbW4KIpYrVbm5uaK4+zLJ+L6+vo4dOgQFouFXC73SG30pZxFoihS
      V1eHKIqkUikEQcBqtRIKhSgrK0MQBDo7O+9pg6Io67Zh6dxLNDQ0MDg4SENDA5FIBFEUSSQS
      eDwePB4P8Xic2dlZ9u3bh6ZpK9axuBfbpgZQFIU7d+7Q3t5OJpNhYmKC7u5udF3HarVSVVWF
      JElYLBYMwyCXy7GwsIDT6cQwjBW5TNeKz+dDVVXm5+eJx+N0dXWRz+eL+Xm8Xu+qNkSj0WIh
      fdgEVHejqio2m43JyUk6OjpobW2lpqYGh8PBrVu3qKqqwuv1FifTlr7b0tLCrVu3Hmk2NhKJ
      kM/ni02fbDZLaWkpbW1t1NTUYLfbuX37NlVVVcXJs7ttGB8fp6tr7Z6qUKjtstkss7OzeDwe
      2tvbSSQSRXf7fD5PXV1d8dqqasH1ORgMUllZucIP7V6YnWCTHc22aQKZmGwGpgBMdjSmAEx2
      NKYATDaUfD7PyMgI169fJ51OMzQ09I3vDA8Pk0qlVmxLpVK89957xfdXr15dkT0vEAhsir3b
      ZhTIZHsgiiJXr14llUoRjUZJpVJcv369mHx3fn6eqqoqZmdn6erqIpVK8fHHH1NeXs7c3Fwh
      QcEf/sCVK1coLy/n/PnzHD16lF/96le88cYbDA4O8oMf/ICmpqaNsXdDjmJissjSmH1jYyPn
      zp2jpqaGQCBAOBzm2rVrqKpKJBLhr3/9K3V1dQwMDPD973+fmZkZXnzxRVRVJR6Pc+DAAebn
      54HCnM9TTz2F1+vFbrczMzOzYfaaNYDJhiIIArt376a+vp50Os3hw4cJBAI0NDTQ2NhIMpnE
      7XZz4MCBYqaQc+fO8eqrr1JTU1N0dUkkElitVsrLy6mtrS0mUpuYmKC+vn7j7DXnAUx2MmYT
      yGRH8/8DxsuUpCWuYycAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trend - Total Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Virus density heat map' width='192'>
      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
      eH6xh/4froeBfZCdZ3sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='total cases crosstab' width='192'>
      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
      QRBQFMVnyADe3YzKulM3i8sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='total cases heat map' width='192'>
      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
      ksrm2Lh9F9t37ynVDIyOks/lGR3sZ9uu3Ywm08yMjZVO1HLwAqmqSnxulv/6J/83W+trOFAX
      we90oBWL2Gw2bs7G6RoeY3fASZNn7T0WSU0ntnkfLQeOWJ2UNU17bIulUCgwPT1NIpGwjN7F
      c3RXQtM04vE4kUhkWV5VOp0mFAqtmERWrhiGwdT4GJlLZ2nyOrliONj37OeAhVSabLY0b3pw
      gGQiwc69+xAEge/95/+Xlk0ddF2+xG/+/h/gdru5NTCA0+NBliTm5ucIBIIM3OiB+NzjCYTd
      Scloy9GSmaUt6CGw0C5cEASuT0YJZuLsDXsIyJ/OgnQINjyxCQZOf0jc4aGyrv6xJt2Jooii
      KJbTYHG79NUw/20lQ1mW5bLU++9GKR3EQKyq4Xz3DWbSWWyCgN8fsAJ8hUKB6ppaGpubLZdw
      X18/W3bvIZ0rVZFFKioIL+QQud1uIpEKotEogmjH5vaWxwkAJYnv77qCr++S1f5aNwxO9fRz
      OPDo8nyuB+rY9/XfeCS/626YTbYWJ6wJgmAVya+UYmxmf5qBr8VNBEKh0Jrk+jwO0ukUp976
      GfXFPAlEXF4fgqowlNOobW2jqqqKlpYWoNSSfmJy0iqZ1XWd2dmURy+kAAASxklEQVRZS4WM
      RqMUFIVQOMzc3Fz5CACUXvqld37GNvV2h4VTvYMc8NqtNjH3EoSHTevtrmxl76tf/0SfXWvi
      8bjVbiWfz6NpGm6320p0W3yPiw1n09dvYqZl3y0vv9zRdZ2ZmRkS8Xky8/MYqTjz6Sx9Y+PU
      19ai6TpziSQ11dUU8nkEScLn9xMMBnE5HMhOZykJUVFobGqyNoOyEgCAyfExCh+8Ra2v9LJG
      4yluDI9CUeOZ6gCaYdCj2ZG1Ap3u5SpR19gk6bxCWikg2Gwc72gjkctz4dYoaaVAlc9LtlBg
      a30N18enyBZUfmVvqT3LKBIVr/xjwtU1j/SeVyOfzzM3N7fs7zOZjFUptvjvzNJKsyrNTIMw
      ff9mSsZnCTOKnkwkcDid/PD73+Op556nvr6e1//qL9lz5AjtmztX3RDLprpkYmKC73//+3j9
      Af7mQhenunsByGXSpDNpYnmV/3TuOt9Pi2Q79/LG9UFmkukl35EtFLgxOUNBKzIxnyjpzoJA
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='total deaths heat map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
