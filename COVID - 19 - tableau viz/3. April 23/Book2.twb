<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20194.20.0119.2058                               -->
<workbook original-version='18.1' source-build='2019.4.2 (20194.20.0119.2058)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
        <calculation class='tableau' formula='56' />
        <range max='206' min='1' />
      </column>
    </datasource>
    <datasource caption='owid-covid-data (source)' inline='true' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='source' name='excel-direct.1wwxz4b0s0hb3j1brdka71nhggir'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/My Files/My Desk/COVID - 19/April 23/source.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='integer' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[1000 to 2000]' />
            <value name='[128000 to 256000]' />
            <value name='[16000 to 32000]' />
            <value name='[2000 to 4000]' />
            <value name='[256000 to 512000]' />
            <value name='[32000 to 64000]' />
            <value name='[4000 to 8000]' />
            <value name='[500 to 1000]' />
            <value name='[64000 to 128000]' />
            <value name='[8000 to 16000]' />
            <value name='[100 to 200]' />
            <value name='[12800 to 25600]' />
            <value name='[1600 to 3200]' />
            <value name='[200 to 400]' />
            <value name='[3200 to 6400]' />
            <value name='[400 to 800]' />
            <value name='[50 to 100]' />
            <value name='[6400 to 12800]' />
            <value name='[800 to 1600]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Cases].[1000 to 2000]' />
              <field name='[Cases].[128000 to 256000]' />
              <field name='[Cases].[16000 to 32000]' />
              <field name='[Cases].[2000 to 4000]' />
              <field name='[Cases].[256000 to 512000]' />
              <field name='[Cases].[32000 to 64000]' />
              <field name='[Cases].[4000 to 8000]' />
              <field name='[Cases].[500 to 1000]' />
              <field name='[Cases].[64000 to 128000]' />
              <field name='[Cases].[8000 to 16000]' />
              <field name='[Deaths].[100 to 200]' />
              <field name='[Deaths].[12800 to 25600]' />
              <field name='[Deaths].[1600 to 3200]' />
              <field name='[Deaths].[200 to 400]' />
              <field name='[Deaths].[3200 to 6400]' />
              <field name='[Deaths].[400 to 800]' />
              <field name='[Deaths].[50 to 100]' />
              <field name='[Deaths].[6400 to 12800]' />
              <field name='[Deaths].[800 to 1600]' />
            </group>
          </groups>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[owid-covid-data].[location]' />
                <expression op='[Deaths].[Deaths]' />
              </expression>
            </clause>
            <relation join='full' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[owid-covid-data].[location]' />
                  <expression op='[Cases].[Cases]' />
                </expression>
              </clause>
              <relation connection='excel-direct.1wwxz4b0s0hb3j1brdka71nhggir' name='owid-covid-data' table='[&apos;owid-covid-data$&apos;]' type='table'>
                <columns gridOrigin='A1:Q10001:no:A1:Q2147483647:0' header='yes' outcome='2'>
                  <column datatype='string' name='iso_code' ordinal='0' />
                  <column datatype='integer' name='#' ordinal='1' />
                  <column datatype='string' name='location' ordinal='2' />
                  <column datatype='date' name='date' ordinal='3' />
                  <column datatype='integer' name='total_cases' ordinal='4' />
                  <column datatype='integer' name='new_cases' ordinal='5' />
                  <column datatype='integer' name='total_deaths' ordinal='6' />
                  <column datatype='integer' name='new_deaths' ordinal='7' />
                  <column datatype='real' name='total_cases_per_million' ordinal='8' />
                  <column datatype='real' name='new_cases_per_million' ordinal='9' />
                  <column datatype='real' name='total_deaths_per_million' ordinal='10' />
                  <column datatype='real' name='new_deaths_per_million' ordinal='11' />
                  <column datatype='integer' name='total_tests' ordinal='12' />
                  <column datatype='integer' name='new_tests' ordinal='13' />
                  <column datatype='real' name='total_tests_per_thousand' ordinal='14' />
                  <column datatype='real' name='new_tests_per_thousand' ordinal='15' />
                  <column datatype='string' name='tests_units' ordinal='16' />
                </columns>
              </relation>
              <relation connection='excel-direct.1wwxz4b0s0hb3j1brdka71nhggir' name='Cases' table='[Cases$]' type='table'>
                <columns gridOrigin='A1:K21:no:A1:K21:0' header='yes' outcome='6'>
                  <column datatype='string' name='Cases' ordinal='0' />
                  <column datatype='integer' name='500 to 1000' ordinal='1' />
                  <column datatype='integer' name='1000 to 2000' ordinal='2' />
                  <column datatype='integer' name='2000 to 4000' ordinal='3' />
                  <column datatype='integer' name='4000 to 8000' ordinal='4' />
                  <column datatype='integer' name='8000 to 16000' ordinal='5' />
                  <column datatype='integer' name='16000 to 32000' ordinal='6' />
                  <column datatype='integer' name='32000 to 64000' ordinal='7' />
                  <column datatype='integer' name='64000 to 128000' ordinal='8' />
                  <column datatype='integer' name='128000 to 256000' ordinal='9' />
                  <column datatype='integer' name='256000 to 512000' ordinal='10' />
                </columns>
              </relation>
            </relation>
            <relation connection='excel-direct.1wwxz4b0s0hb3j1brdka71nhggir' name='Deaths' table='[Deaths$]' type='table'>
              <columns gridOrigin='A1:J21:no:A1:J21:0' header='yes' outcome='6'>
                <column datatype='string' name='Deaths' ordinal='0' />
                <column datatype='integer' name='50 to 100' ordinal='1' />
                <column datatype='integer' name='100 to 200' ordinal='2' />
                <column datatype='integer' name='200 to 400' ordinal='3' />
                <column datatype='integer' name='400 to 800' ordinal='4' />
                <column datatype='integer' name='800 to 1600' ordinal='5' />
                <column datatype='integer' name='1600 to 3200' ordinal='6' />
                <column datatype='integer' name='3200 to 6400' ordinal='7' />
                <column datatype='integer' name='6400 to 12800' ordinal='8' />
                <column datatype='integer' name='12800 to 25600' ordinal='9' />
              </columns>
            </relation>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>iso_code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[iso_code]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>iso_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#</remote-name>
            <remote-type>20</remote-type>
            <local-name>[#]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>#</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_deaths]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_deaths</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_cases_per_million</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_cases_per_million</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_deaths_per_million</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_per_million</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_deaths_per_million]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_deaths_per_million</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_tests]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_tests</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>total_tests_per_thousand</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_tests_per_thousand</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_tests_per_thousand]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>new_tests_per_thousand</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tests_units</remote-name>
            <remote-type>130</remote-type>
            <local-name>[tests_units]</local-name>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias>tests_units</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[owid-covid-data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>1</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q10001:no:A1:Q2147483647:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cases</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Cases]</local-name>
            <parent-name>[Cases]</parent-name>
            <remote-alias>Cases</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Cases]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:K21:no:A1:K21:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[Deaths]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>18</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Deaths]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:J21:no:A1:J21:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Index' datatype='integer' name='[Calculation_6217430435213434880]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Death Rate' datatype='real' name='[Calculation_6217430435230199809]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[total_deaths]/[total_cases]' />
      </column>
      <column datatype='string' name='[Deaths]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
          <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
        </semantic-values>
      </column>
      <column datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
      <column datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='Attribute' name='[attr:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='Max' name='[max:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Deaths]' derivation='None' name='[none:Deaths:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
      <group caption='Action (location)' hidden='true' name='[Action (location)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[location]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.37931' measure-ordering='alphabetic' measure-percentage='0.578947' parameter-percentage='0.0417423' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[attr:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[max:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Angola&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Bahrain&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Cameroon&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Dominica&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Falkland Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Gibraltar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Haiti&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Isle of Man&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Japan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Macedonia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Moldova&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;New Zealand&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Palestine&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Romania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Serbia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;South Sudan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Spain&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;United Arab Emirates&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#499894'>
              <multibucket>
                <bucket>&quot;Zambia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Afghanistan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Australia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Bulgaria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Costa Rica&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Czech Republic&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Eritrea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Gambia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Guernsey&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Indonesia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Iran&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Libya&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Malta&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Mozambique&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Northern Mariana Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Saint Lucia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Slovenia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Thailand&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;United States Virgin Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>&quot;Vatican&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Algeria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Azerbaijan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Bhutan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Colombia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Denmark&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Ethiopia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Guam&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Guinea-Bissau&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Iraq&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Israel&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Lithuania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Mauritius&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Namibia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Oman&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Puerto Rico&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Saudi Arabia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Singapore&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Somalia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Syria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Uganda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#59a14f'>
              <multibucket>
                <bucket>&quot;Vietnam&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#76b7b2'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Antigua and Barbuda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Barbados&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Botswana&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Cape Verde&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Chile&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Croatia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Finland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Greenland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Hong Kong&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Kosovo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Laos&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Malawi&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Mongolia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Netherlands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Papua New Guinea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Rwanda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Sierra Leone&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Sri Lanka&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Switzerland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#79706e'>
              <multibucket>
                <bucket>&quot;Uzbekistan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Angola&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Bahrain&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Cameroon&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Dominica&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Falkland Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Gibraltar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Haiti&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Isle of Man&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Japan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Macedonia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Moldova&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;New Zealand&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Palestine&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Romania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Serbia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;South Sudan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Spain&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;United Arab Emirates&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#86bcb6'>
              <multibucket>
                <bucket>&quot;Zambia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Algeria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Azerbaijan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Belgium&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Bhutan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Colombia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Denmark&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Ethiopia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Guam&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Guinea-Bissau&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Iraq&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Israel&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Lithuania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Mauritius&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Namibia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Oman&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Puerto Rico&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Singapore&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Somalia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Syria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Uganda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#8cd17d'>
              <multibucket>
                <bucket>&quot;Vietnam&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Aruba&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Belize&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Brunei&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Chad&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Cyprus&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Equatorial Guinea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Gabon&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Guatemala&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Jersey&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Liberia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Mali&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Morocco&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Nigeria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Peru&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Philippines&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Portugal&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Slovakia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Swaziland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#9d7660'>
              <multibucket>
                <bucket>&quot;Tunisia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Afghanistan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Australia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Austria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Bulgaria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Costa Rica&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Czech Republic&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Eritrea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Gambia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Guernsey&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Indonesia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Iran&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Libya&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Malta&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Mozambique&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Northern Mariana Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Saint Lucia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Slovenia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Thailand&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;United Kingdom&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;United States Virgin Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#a0cbe8'>
              <multibucket>
                <bucket>&quot;Vatican&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Armenia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Bermuda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;British Virgin Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Central African Republic&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Curacao&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Ecuador&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;El Salvador&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;French Polynesia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Iceland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Kuwait&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Lebanon&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Maldives&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Montserrat&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Niger&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Poland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Suriname&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b07aa1'>
              <multibucket>
                <bucket>&quot;Trinidad and Tobago&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Andorra&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Bahamas&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Belgium&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Bolivia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Cambodia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Djibouti&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Faeroe Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Ghana&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Guyana&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Kazakhstan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Luxembourg&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Monaco&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Nepal&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Pakistan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Qatar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Senegal&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;South Korea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Taiwan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Ukraine&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#b6992d'>
              <multibucket>
                <bucket>&quot;Yemen&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Antigua and Barbuda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Barbados&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Botswana&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Cape Verde&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Chile&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Croatia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Finland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Greenland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Hong Kong&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Kosovo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Laos&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Malawi&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Mongolia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Netherlands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Papua New Guinea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Rwanda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Sierra Leone&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Sri Lanka&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Switzerland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#bab0ac'>
              <multibucket>
                <bucket>&quot;Uzbekistan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Argentina&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Belarus&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Burundi&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Cayman Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Cuba&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Egypt&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Grenada&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Hungary&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Jamaica&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Latvia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Malaysia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Montenegro&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Nicaragua&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Paraguay&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;South Africa&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Sudan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Togo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d37295'>
              <multibucket>
                <bucket>&quot;Turkey&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Armenia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Bermuda&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;British Virgin Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Central African Republic&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Curacao&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Ecuador&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;El Salvador&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;French Polynesia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Iceland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Kuwait&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Lebanon&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Maldives&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Montserrat&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Niger&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Poland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Suriname&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d4a6c8'>
              <multibucket>
                <bucket>&quot;Trinidad and Tobago&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Aruba&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Belize&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Brunei&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Chad&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Cyprus&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Equatorial Guinea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Gabon&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Guatemala&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Jersey&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Liberia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Mali&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Morocco&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Nigeria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Peru&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Philippines&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Portugal&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Slovakia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Swaziland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#d7b5a6'>
              <multibucket>
                <bucket>&quot;Tunisia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Anguilla&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Bangladesh&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Congo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Dominican Republic&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Fiji&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Greece&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Honduras&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;India&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Kenya&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Kyrgyzstan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Madagascar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;New Caledonia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Panama&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;San Marino&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Seychelles&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Sweden&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Tanzania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Uruguay&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>&quot;Zimbabwe&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#edc948'>
              <multibucket>
                <bucket>&quot;Saudi Arabia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Andorra&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Bahamas&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Bolivia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Brazil&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Cambodia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Djibouti&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Faeroe Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Ghana&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Guyana&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Kazakhstan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Luxembourg&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Monaco&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Nepal&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Pakistan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Qatar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Senegal&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;South Korea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Taiwan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Ukraine&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f1ce63'>
              <multibucket>
                <bucket>&quot;Yemen&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Albania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Benin&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Burkina Faso&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Estonia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Georgia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Guinea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Ireland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Jordan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Liechtenstein&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Mauritania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Myanmar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Norway&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Russia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Sao Tome and Principe&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Timor&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>&quot;Venezuela&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Argentina&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Belarus&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Burundi&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Cayman Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;China&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Cuba&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Egypt&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Grenada&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Hungary&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Jamaica&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Latvia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Malaysia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Montenegro&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Nicaragua&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Paraguay&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;South Africa&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Sudan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Togo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#fabfd2'>
              <multibucket>
                <bucket>&quot;Turkey&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Anguilla&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Bangladesh&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Canada&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Congo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Dominican Republic&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Fiji&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Greece&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Honduras&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Kenya&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Kyrgyzstan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Madagascar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Mexico&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;New Caledonia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Panama&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;San Marino&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Seychelles&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Sweden&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Tanzania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Uruguay&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ff9d9a'>
              <multibucket>
                <bucket>&quot;Zimbabwe&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Albania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Austria&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Benin&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Burkina Faso&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Estonia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Georgia&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Guinea&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Ireland&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Jordan&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Liechtenstein&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Mauritania&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Myanmar&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Norway&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Sao Tome and Principe&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Timor&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;United States&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#ffbe7d'>
              <multibucket>
                <bucket>&quot;Venezuela&quot;</bucket>
                <bucket>&quot;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Deaths:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ae123a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Country Analysis' type='sheet' worksheet='total cases heat map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Country Analysis' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Current World Scenario' type='sheet' worksheet='total cases heat map' />
      <command command='tsc:tsl-filter'>
        <param name='exclude' value='Card - total cases,Card - total deaths,Card - total countries' />
        <param name='special-fields' value='all' />
        <param name='target' value='Current World Scenario' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Current World Scenario' type='sheet' worksheet='total cases crosstab' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Current World Scenario' />
      </command>
    </action>
    <action caption='Filter 5 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Insights World Scenario' type='sheet' worksheet='Total tests heat map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Insights World Scenario' />
      </command>
    </action>
    <action caption='Filter 7 (generated)' name='[Action7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Infection Rates' type='sheet' worksheet='total cases cross tab' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Infection Rates' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Animated total cases and deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases - Worldwide</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <manual-sort column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:ok]' direction='ASC'>
            <dictionary>
              <bucket>%all%</bucket>
              <bucket>#2020-01-02 00:00:00#</bucket>
              <bucket>#2020-01-01 00:00:00#</bucket>
              <bucket>#2019-12-31 00:00:00#</bucket>
              <bucket>#2020-01-04 00:00:00#</bucket>
              <bucket>#2020-01-03 00:00:00#</bucket>
              <bucket>#2020-01-16 00:00:00#</bucket>
              <bucket>#2020-01-15 00:00:00#</bucket>
              <bucket>#2020-01-14 00:00:00#</bucket>
              <bucket>#2020-01-13 00:00:00#</bucket>
              <bucket>#2020-01-12 00:00:00#</bucket>
              <bucket>#2020-01-11 00:00:00#</bucket>
              <bucket>#2020-01-10 00:00:00#</bucket>
              <bucket>#2020-01-09 00:00:00#</bucket>
              <bucket>#2020-01-08 00:00:00#</bucket>
              <bucket>#2020-01-07 00:00:00#</bucket>
              <bucket>#2020-01-06 00:00:00#</bucket>
              <bucket>#2020-01-05 00:00:00#</bucket>
              <bucket>#2020-01-17 00:00:00#</bucket>
              <bucket>#2020-01-18 00:00:00#</bucket>
              <bucket>#2020-01-19 00:00:00#</bucket>
              <bucket>#2020-01-20 00:00:00#</bucket>
              <bucket>#2020-01-21 00:00:00#</bucket>
              <bucket>#2020-01-22 00:00:00#</bucket>
              <bucket>#2020-01-23 00:00:00#</bucket>
              <bucket>#2020-01-24 00:00:00#</bucket>
              <bucket>#2020-01-25 00:00:00#</bucket>
              <bucket>#2020-01-26 00:00:00#</bucket>
              <bucket>#2020-01-27 00:00:00#</bucket>
              <bucket>#2020-01-28 00:00:00#</bucket>
              <bucket>#2020-01-29 00:00:00#</bucket>
              <bucket>#2020-01-30 00:00:00#</bucket>
              <bucket>#2020-01-31 00:00:00#</bucket>
              <bucket>#2020-02-01 00:00:00#</bucket>
              <bucket>#2020-02-02 00:00:00#</bucket>
              <bucket>#2020-02-03 00:00:00#</bucket>
              <bucket>#2020-02-04 00:00:00#</bucket>
              <bucket>#2020-02-05 00:00:00#</bucket>
              <bucket>#2020-02-06 00:00:00#</bucket>
              <bucket>#2020-02-07 00:00:00#</bucket>
              <bucket>#2020-02-08 00:00:00#</bucket>
              <bucket>#2020-02-09 00:00:00#</bucket>
              <bucket>#2020-02-10 00:00:00#</bucket>
              <bucket>#2020-02-11 00:00:00#</bucket>
              <bucket>#2020-02-12 00:00:00#</bucket>
              <bucket>#2020-02-13 00:00:00#</bucket>
              <bucket>#2020-02-14 00:00:00#</bucket>
              <bucket>#2020-02-15 00:00:00#</bucket>
              <bucket>#2020-02-16 00:00:00#</bucket>
              <bucket>#2020-02-17 00:00:00#</bucket>
              <bucket>#2020-02-18 00:00:00#</bucket>
              <bucket>#2020-02-19 00:00:00#</bucket>
              <bucket>#2020-02-20 00:00:00#</bucket>
              <bucket>#2020-02-21 00:00:00#</bucket>
              <bucket>#2020-02-22 00:00:00#</bucket>
              <bucket>#2020-02-23 00:00:00#</bucket>
              <bucket>#2020-02-24 00:00:00#</bucket>
              <bucket>#2020-02-25 00:00:00#</bucket>
              <bucket>#2020-02-26 00:00:00#</bucket>
              <bucket>#2020-02-27 00:00:00#</bucket>
              <bucket>#2020-02-28 00:00:00#</bucket>
              <bucket>#2020-02-29 00:00:00#</bucket>
              <bucket>#2020-03-01 00:00:00#</bucket>
              <bucket>#2020-03-02 00:00:00#</bucket>
              <bucket>#2020-03-03 00:00:00#</bucket>
              <bucket>#2020-03-04 00:00:00#</bucket>
              <bucket>#2020-03-05 00:00:00#</bucket>
              <bucket>#2020-03-06 00:00:00#</bucket>
              <bucket>#2020-03-07 00:00:00#</bucket>
              <bucket>#2020-03-08 00:00:00#</bucket>
              <bucket>#2020-03-09 00:00:00#</bucket>
              <bucket>#2020-03-10 00:00:00#</bucket>
              <bucket>#2020-03-11 00:00:00#</bucket>
              <bucket>#2020-03-12 00:00:00#</bucket>
              <bucket>#2020-03-13 00:00:00#</bucket>
              <bucket>#2020-03-14 00:00:00#</bucket>
              <bucket>#2020-03-15 00:00:00#</bucket>
              <bucket>#2020-03-16 00:00:00#</bucket>
              <bucket>#2020-03-17 00:00:00#</bucket>
              <bucket>#2020-03-18 00:00:00#</bucket>
              <bucket>#2020-03-19 00:00:00#</bucket>
              <bucket>#2020-03-20 00:00:00#</bucket>
              <bucket>#2020-03-21 00:00:00#</bucket>
              <bucket>#2020-03-22 00:00:00#</bucket>
              <bucket>#2020-03-23 00:00:00#</bucket>
              <bucket>#2020-03-24 00:00:00#</bucket>
              <bucket>#2020-03-25 00:00:00#</bucket>
              <bucket>#2020-03-26 00:00:00#</bucket>
              <bucket>#2020-03-27 00:00:00#</bucket>
              <bucket>#2020-03-28 00:00:00#</bucket>
              <bucket>#2020-03-29 00:00:00#</bucket>
              <bucket>#2020-03-30 00:00:00#</bucket>
              <bucket>#2020-03-31 00:00:00#</bucket>
              <bucket>#2020-04-01 00:00:00#</bucket>
              <bucket>#2020-04-02 00:00:00#</bucket>
              <bucket>#2020-04-03 00:00:00#</bucket>
              <bucket>#2020-04-04 00:00:00#</bucket>
              <bucket>#2020-04-05 00:00:00#</bucket>
              <bucket>#2020-04-06 00:00:00#</bucket>
              <bucket>#2020-04-07 00:00:00#</bucket>
              <bucket>#2020-04-08 00:00:00#</bucket>
              <bucket>#2020-04-09 00:00:00#</bucket>
              <bucket>#2020-04-10 00:00:00#</bucket>
              <bucket>#2020-04-11 00:00:00#</bucket>
              <bucket>#2020-04-12 00:00:00#</bucket>
              <bucket>#2020-04-13 00:00:00#</bucket>
              <bucket>#2020-04-14 00:00:00#</bucket>
              <bucket>#2020-04-15 00:00:00#</bucket>
              <bucket>#2020-04-16 00:00:00#</bucket>
              <bucket>#2020-04-17 00:00:00#</bucket>
              <bucket>#2020-04-18 00:00:00#</bucket>
              <bucket>#2020-04-19 00:00:00#</bucket>
              <bucket>#2020-04-20 00:00:00#</bucket>
              <bucket>#2020-04-21 00:00:00#</bucket>
              <bucket>#2020-04-22 00:00:00#</bucket>
              <bucket>#2020-04-23 00:00:00#</bucket>
            </dictionary>
          </manual-sort>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' max='150000' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</rows>
        <cols>([federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk] + [federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk])</cols>
        <pages>
          <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{A8CAB065-CD15-4031-BDD1-640276F2B459}' />
    </worksheet>
    <worksheet name='Card - total cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10' italic='true'>Total Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
          </datasources>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' data-class='subtotal' value='#e15759' />
            <format attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='#e10019' />
            <format attr='font-size' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='12' />
            <format attr='font-weight' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='bold' />
            <format attr='text-align' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='left' />
          </style-rule>
          <style-rule element='header'>
            <format attr='color' data-class='subtotal' value='#e15759' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#fd5d6a' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F2171D5A-3858-463E-BAF1-1A9BB167EDBD}' />
    </worksheet>
    <worksheet name='Card - total countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10' italic='true'>Affected Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column-instance column='[location]' derivation='CountD' name='[ctd:location:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[ctd:location:qk]' value='#e10019' />
            <format attr='font-size' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[ctd:location:qk]' value='12' />
            <format attr='font-weight' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[ctd:location:qk]' value='bold' />
            <format attr='text-align' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[ctd:location:qk]' value='left' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#ffffff' />
            <format attr='border-color' value='#ffffff' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='background-color' value='#fd5d6a' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[ctd:location:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{93D1A52A-87A3-47AE-BD71-603342D6238E}' />
    </worksheet>
    <worksheet name='Card - total deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='10' italic='true'>Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
          </datasources>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' value='21' />
            <format attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_deaths:qk]' value='#e10019' />
            <format attr='font-weight' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_deaths:qk]' value='bold' />
            <format attr='font-size' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_deaths:qk]' value='12' />
            <format attr='text-align' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_deaths:qk]' value='left' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#fd5d6a' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{40C9C528-775E-44E5-A83A-B12F07C2D65C}' />
    </worksheet>
    <worksheet name='Case Count Doubling'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
          </datasources>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='string' name='[Cases]' role='dimension' type='nominal' />
            <column datatype='string' name='[Deaths]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Cases]' derivation='None' name='[none:Cases:nk]' pivot='key' type='nominal' />
            <column-instance column='[Deaths]' derivation='None' name='[none:Deaths:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='union' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[location]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Pivot Field Names:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;1000 to 2000&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;128000 to 256000&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;16000 to 32000&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;2000 to 4000&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;256000 to 512000&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;32000 to 64000&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;4000 to 8000&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;500 to 1000&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;64000 to 128000&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;8000 to 16000&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Pivot Field Names:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Pivot Field Values:qk]' value='N' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Pivot Field Values:qk]' value='n#,##0;-#,##0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Deaths:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.98850828409194946' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Pivot Field Values:qk]</rows>
        <cols>([federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Pivot Field Names:nk] / [federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Cases:nk])</cols>
      </table>
      <simple-id uuid='{A959AC43-4BEE-43A7-B763-9BD9E9016B63}' />
    </worksheet>
    <worksheet name='Death Count Doubling'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
          </datasources>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='string' name='[Deaths]' role='dimension' type='nominal' />
            <column datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[Deaths]' derivation='None' name='[none:Deaths:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='union' user:ui-action-filter='[Action6]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[location]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Pivot Field Names:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;100 to 200&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;12800 to 25600&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;1600 to 3200&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;200 to 400&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;3200 to 6400&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;400 to 800&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;50 to 100&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;6400 to 12800&quot;' />
              <groupfilter function='member' level='[none:Pivot Field Names:nk]' member='&quot;800 to 1600&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Pivot Field Names:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Pivot Field Values:qk]' value='N' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Pivot Field Values:qk]' value='N' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Deaths:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.98850828409194946' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Pivot Field Values:qk]</rows>
        <cols>([federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Pivot Field Names:nk] / [federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Deaths:nk])</cols>
      </table>
      <simple-id uuid='{237246C6-140E-4C6A-9432-D0D3FF8F0E4C}' />
    </worksheet>
    <worksheet name='Log trend - total cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
              <calculation class='tableau' formula='56' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='3'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{B5FCEA75-351A-4552-B466-EF68CF9E6F21}' />
    </worksheet>
    <worksheet name='Tests per thousand population'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
              <calculation class='tableau' formula='56' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column-instance column='[total_tests_per_thousand]' derivation='Avg' name='[avg:total_tests_per_thousand:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_tests_per_thousand]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-16#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-17#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-18#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-19#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-20#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-21#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-22#' />
              <groupfilter function='member' level='[none:date:ok]' member='#2020-04-23#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='3'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:ok]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' scope='cols' value='Tests per thousand' />
            <format attr='display' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' max='20.0' min='0.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d7e7dd</color>
                <color>#c0decb</color>
                <color>#a9d4b9</color>
                <color>#94cba9</color>
                <color>#80c199</color>
                <color>#6db889</color>
                <color>#5cae7b</color>
                <color>#4ca56d</color>
                <color>#3d9b61</color>
                <color>#309255</color>
              </color-palette>
            </encoding>
            <encoding attr='size-bar' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' value='false' />
            <format attr='break-on-special' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]</cols>
      </table>
      <simple-id uuid='{4EE5588A-0D32-425C-A077-8BE07E74379A}' />
    </worksheet>
    <worksheet name='Total tests heat map'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
              <calculation class='tableau' formula='56' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_tests]' derivation='Max' name='[max:total_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_tests]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='3'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]' field-type='quantitative' max='28181952.839479379' min='-15331468.60575611' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]' field-type='quantitative' max='15816409.893121507' min='-4921592.3088628948' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests:qk]' min='0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d8e0e8</color>
                <color>#c1d0e0</color>
                <color>#aac1d8</color>
                <color>#95b2cf</color>
                <color>#82a4c7</color>
                <color>#6f97bf</color>
                <color>#5d8ab6</color>
                <color>#4d7dae</color>
                <color>#3e72a6</color>
                <color>#30679e</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests:qk]' />
              <geometry column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{3D43AEBE-B383-4C83-BE7A-2AEDA437183B}' />
    </worksheet>
    <worksheet name='Trend - Daily Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
              <calculation class='tableau' formula='56' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[new_deaths]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_deaths]' derivation='Sum' name='[sum:new_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='3'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_deaths:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{1D153AF5-23D0-466A-AEA8-E17E9F3C99F8}' />
    </worksheet>
    <worksheet name='Trend - Daily New cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
              <calculation class='tableau' formula='56' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='3'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{48FE41AD-661E-4793-A3A2-D2780BD2D934}' />
    </worksheet>
    <worksheet name='Trend - Daily New tests'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
              <calculation class='tableau' formula='56' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[new_tests]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_tests]' derivation='Sum' name='[sum:new_tests:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='3'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]' field-type='quantitative' range-type='uniform' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_tests:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{18875D8A-2BFC-4E80-9865-C68FF1DC5090}' />
    </worksheet>
    <worksheet name='Trend - Death Rate'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
          </datasources>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column caption='Death Rate' datatype='real' name='[Calculation_6217430435230199809]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[total_deaths]/[total_cases]' />
            </column>
            <column-instance column='[Calculation_6217430435230199809]' derivation='Avg' name='[avg:Calculation_6217430435230199809:qk]' pivot='key' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[date]' derivation='Week-Trunc' name='[twk:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='union' user:ui-action-filter='[Action1]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[location]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Calculation_6217430435230199809:qk]' value='p0.00%' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Calculation_6217430435230199809:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Calculation_6217430435230199809:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='has-stroke' value='false' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:Calculation_6217430435230199809:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[twk:date:qk]</cols>
      </table>
      <simple-id uuid='{E1E4FFEC-3175-47F1-978F-039F6BAF9DDA}' />
    </worksheet>
    <worksheet name='Trend - Total Deaths'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
              <calculation class='tableau' formula='56' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action1]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='3'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_deaths:qk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{E4EE1708-02D9-46F6-82F4-49C9D9D49962}' />
    </worksheet>
    <worksheet name='Virus density heat map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;Sheet Name&gt; - Cases per mn population</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
              <calculation class='tableau' formula='56' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[date]' derivation='None' name='[none:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_cases_per_million]' derivation='Sum' name='[sum:total_cases_per_million:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='real' name='[total_cases_per_million]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:ok]'>
            <groupfilter function='member' level='[none:date:ok]' member='#2020-04-22#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='3'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:ok]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]' field-type='quantitative' max='28291134.826906607' min='-16273124.501735499' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]' field-type='quantitative' max='12718585.506073151' min='-8520234.090090245' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases_per_million:qk]' max='2500.0' min='-100.0' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#d4d3ea</color>
                <color>#b8b6e4</color>
                <color>#9e9bdd</color>
                <color>#8581d7</color>
                <color>#6d68d0</color>
                <color>#5650ca</color>
                <color>#413ac3</color>
                <color>#2d25bd</color>
                <color>#1a12b6</color>
                <color>#0900b0</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:total_cases_per_million:qk]' />
              <lod column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <geometry column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{B99C3BC8-6096-4D74-990B-DDA4F17CABB0}' />
    </worksheet>
    <worksheet name='total cases cross tab'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases - Worldwide</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
              <calculation class='tableau' formula='56' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='3'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' max='150000' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</cols>
      </table>
      <simple-id uuid='{1971163B-B64B-4C18-AA8E-9BFC9CAFC891}' />
    </worksheet>
    <worksheet name='total cases crosstab'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
              <calculation class='tableau' formula='56' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column caption='Index' datatype='integer' name='[Calculation_6217430435213434880]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:vtsum:qk]' pivot='key' type='quantitative' visual-totals='Sum' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_6217430435213434880]' derivation='User' name='[usr:Calculation_6217430435213434880:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-type='Columns' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='level-members' level='[location]' user:ui-action-filter='[Action2]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='3'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:vtsum:qk]' scope='cols' value='false' />
            <format attr='title' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:vtsum:qk]' scope='cols' value='Cases' />
            <format attr='title' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:vtsum:qk]' scope='cols' value='Deaths' />
            <format attr='display' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:vtsum:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[usr:Calculation_6217430435213434880:ok:2]' value='24' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:vtsum:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:vtsum:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows onTop='true'>([federated.0x8qzcj0uos0i21c7unqd0liuvhl].[usr:Calculation_6217430435213434880:ok:2] / [federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk])</rows>
        <cols>([federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:vtsum:qk] + [federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:vtsum:qk])</cols>
      </table>
      <simple-id uuid='{D7034ED7-0690-407B-800B-D4DB345681D9}' />
    </worksheet>
    <worksheet name='total cases heat map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Cases - Worldwide</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
              <calculation class='tableau' formula='56' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]'>
            <groupfilter function='union' user:ui-action-filter='[Action7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[location]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;Spain&quot;' />
              <groupfilter function='member' level='[location]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='3'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Action (location)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' max='150000' min='0' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]' />
              <lod column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <geometry column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                  <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Geometry (generated)]</field>
                  <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]</field>
                  <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>21393</value>
                <value>&quot;India&quot;</value>
                <value>&quotquot;</value>
                <value>22.741</value>
                <value>78.236000000000004</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{B593E308-D141-4B5D-88C4-F65F5BA27B97}' />
    </worksheet>
    <worksheet name='total deaths heat map'>
      <table>
        <view>
          <datasources>
            <datasource caption='owid-covid-data (source)' name='federated.0x8qzcj0uos0i21c7unqd0liuvhl' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
              <calculation class='tableau' formula='56' />
              <range max='206' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x8qzcj0uos0i21c7unqd0liuvhl'>
            <column aggregation='None' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[total_deaths]' derivation='Max' name='[max:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' filter-group='3'>
            <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='MAX([total_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]' field-type='quantitative' max='32347879.825245474' min='-30129428.97001015' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]' field-type='quantitative' max='22554729.676050708' min='-17402508.43885117' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk]' max='15000' min='-1500' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#e8d1d1</color>
                <color>#dfb2b3</color>
                <color>#d69697</color>
                <color>#ce7b7c</color>
                <color>#c56264</color>
                <color>#bc4b4c</color>
                <color>#b43637</color>
                <color>#ab2224</color>
                <color>#a21012</color>
                <color>#9a0002</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk]' />
              <lod column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' />
              <geometry column='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Latitude (generated)]</rows>
        <cols>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{BD384FA5-8BF8-440A-B5D1-97D80FDC280E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Country Analysis'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
          <calculation class='tableau' formula='56' />
          <range max='206' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97682' id='7' param='horz' type='layout-flow' w='98698' x='651' y='1159'>
            <zone h='97682' id='5' type='layout-basic' w='98698' x='651' y='1159'>
              <zone h='48828' id='3' name='total cases heat map' w='51017' x='651' y='1159'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48854' id='9' name='Trend - Daily New cases' w='33672' x='651' y='49987'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48828' id='11' name='Trend - Total Deaths' w='47681' x='51668' y='1159'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48854' id='16' name='Trend - Daily New tests' w='32507' x='34323' y='49987'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48854' id='17' name='Trend - Daily Deaths' w='32519' x='66830' y='49987'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='11884' id='6' param='vert' type='layout-flow' w='13670' x='83645' y='4783'>
          <zone h='3188' id='10' name='Trend - Daily New cases' pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' w='13670' x='83645' y='4783'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='6377' id='8' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='13019' x='20586' y='1159' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='42' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='48828' id='3' is-fixed='true' name='total cases heat map' w='51017' x='651' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6377' id='8' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='13019' x='20586' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48828' id='11' is-fixed='true' name='Trend - Total Deaths' w='47681' x='51668' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48854' id='9' is-fixed='true' name='Trend - Daily New cases' w='33672' x='651' y='49987'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='3188' id='10' name='Trend - Daily New cases' pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' w='13670' x='83645' y='4783'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48854' id='16' is-fixed='true' name='Trend - Daily New tests' w='32507' x='34323' y='49987'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48854' id='17' is-fixed='true' name='Trend - Daily Deaths' w='32519' x='66830' y='49987'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9BD503E3-69B5-4DBB-BCF2-4259A70D41D5}' />
    </dashboard>
    <dashboard name='Current World Scenario'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
          <calculation class='tableau' formula='56' />
          <range max='206' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97682' id='20' param='horz' type='layout-flow' w='98698' x='651' y='1159'>
            <zone h='97682' id='11' param='horz' type='layout-flow' w='98698' x='651' y='1159'>
              <zone h='97682' id='8' param='horz' type='layout-flow' w='98698' x='651' y='1159'>
                <zone h='97682' id='6' type='layout-basic' w='98698' x='651' y='1159'>
                  <zone h='42320' id='9' name='Log trend - total cases' show-title='false' w='86168' x='651' y='56521'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='55362' id='13' name='total cases heat map' w='56126' x='651' y='1159'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='42320' id='12' name='Log trend - total cases' pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' w='12530' x='86819' y='56521'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone custom-title='true' h='11295' id='14' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='12538' x='86811' y='1159'>
                    <formatted-text>
                      <run bold='true' fontalignment='1' italic='true'>Top &apos;n&apos; Infected Countries</run>
                    </formatted-text>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='55362' id='21' name='total cases crosstab' show-title='false' w='30034' x='56777' y='1159'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='19078' id='28' name='Card - total countries' w='12538' x='86811' y='37443'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='11948' id='29' name='Card - total cases' w='12538' x='86811' y='12454'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='13041' id='30' name='Card - total deaths' w='12538' x='86811' y='24402'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='56' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97682' id='55' param='vert' type='layout-flow' w='98698' x='651' y='1159'>
                <zone fixed-size='280' h='55362' id='13' is-fixed='true' name='total cases heat map' w='56126' x='651' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='55362' id='21' is-fixed='true' name='total cases crosstab' show-title='false' w='30034' x='56777' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='11295' id='14' mode='slider' param='[Parameters].[Parameter 1]' type='paramctrl' w='12538' x='86811' y='1159'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' italic='true'>Top &apos;n&apos; Infected Countries</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='87' h='11948' id='29' is-fixed='true' name='Card - total cases' w='12538' x='86811' y='12454'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='97' h='13041' id='30' is-fixed='true' name='Card - total deaths' w='12538' x='86811' y='24402'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='144' h='19078' id='28' is-fixed='true' name='Card - total countries' w='12538' x='86811' y='37443'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='42320' id='9' is-fixed='true' name='Log trend - total cases' show-title='false' w='86168' x='651' y='56521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='42320' id='12' name='Log trend - total cases' pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' w='12530' x='86819' y='56521'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{12BAB023-7FF3-47CF-B744-389ADCADC178}' />
    </dashboard>
    <dashboard name='Infection Rates'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
          <calculation class='tableau' formula='56' />
          <range max='206' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97682' id='19' param='horz' type='layout-flow' w='98698' x='651' y='1159'>
            <zone h='97682' id='7' param='horz' type='layout-flow' w='98698' x='651' y='1159'>
              <zone h='97682' id='5' type='layout-basic' w='98698' x='651' y='1159'>
                <zone h='48829' id='3' name='Trend - Death Rate' w='39465' x='59884' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48853' id='10' name='Death Count Doubling' w='49346' x='651' y='49988'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48853' id='11' name='Case Count Doubling' w='49352' x='49997' y='49988'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48829' id='14' name='total cases cross tab' show-title='false' w='26606' x='33278' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='48829' id='17' name='total cases heat map' w='32627' x='651' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='6377' id='20' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='13019' x='20260' y='1014' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='22' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97682' id='21' param='vert' type='layout-flow' w='98698' x='651' y='1159'>
                <zone h='6377' id='20' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='13019' x='20260' y='1014'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48829' id='17' is-fixed='true' name='total cases heat map' w='32627' x='651' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48829' id='14' is-fixed='true' name='total cases cross tab' show-title='false' w='26606' x='33278' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48829' id='3' is-fixed='true' name='Trend - Death Rate' w='39465' x='59884' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48853' id='10' is-fixed='true' name='Death Count Doubling' w='49346' x='651' y='49988'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48853' id='11' is-fixed='true' name='Case Count Doubling' w='49352' x='49997' y='49988'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5BAFC771-1C62-4E67-982D-64E43ECB9C0B}' />
    </dashboard>
    <dashboard name='Insights World Scenario'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top n countries' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='56'>
          <calculation class='tableau' formula='56' />
          <range max='206' min='1' />
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97682' id='7' param='horz' type='layout-flow' w='98698' x='651' y='1159'>
            <zone h='97682' id='5' type='layout-basic' w='98698' x='651' y='1159'>
              <zone h='48830' id='3' name='total cases heat map' w='49336' x='651' y='1159'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48852' id='10' name='Total tests heat map' w='49349' x='651' y='49989'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48830' id='11' name='Virus density heat map' w='49362' x='49987' y='1159'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48852' id='15' name='Tests per thousand population' w='49349' x='50000' y='49989'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='160' h='7391' id='6' is-fixed='true' param='vert' type='layout-flow' w='14159' x='23186' y='725'>
          <zone h='7391' id='8' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='14159' x='23186' y='725'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1250' minheight='1250' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='41' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='40' param='vert' type='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='7391' id='8' mode='type_in' param='[Parameters].[Parameter 1]' type='paramctrl' w='14159' x='23186' y='725'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48830' id='3' is-fixed='true' name='total cases heat map' w='49336' x='651' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48830' id='11' is-fixed='true' name='Virus density heat map' w='49362' x='49987' y='1159'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48852' id='10' is-fixed='true' name='Total tests heat map' w='49349' x='651' y='49989'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48852' id='15' is-fixed='true' name='Tests per thousand population' w='49349' x='50000' y='49989'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{630C156D-E0FD-47E0-842F-B592CBD50CED}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='total cases heat map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{2FA0EEB8-53C2-4EAD-B761-41C02CC36C9F}' />
    </window>
    <window class='worksheet' name='total cases cross tab'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
      </viewpoint>
      <simple-id uuid='{E2FDE808-3B11-44D7-8508-77786CBA0305}' />
    </window>
    <window class='worksheet' name='Animated total cases and deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-04-23 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{8BCFDC49-14E5-4075-924A-659010DDC69C}' />
    </window>
    <window class='worksheet' name='total cases crosstab'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='type_in' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[usr:Calculation_6217430435213434880:ok:2]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C1F64EB-B6B9-43B5-90E4-BF9746461AD9}' />
    </window>
    <window class='worksheet' name='total deaths heat map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{22244511-CA84-4FD1-844C-F40384F7826A}' />
    </window>
    <window class='worksheet' name='Virus density heat map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:ok]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases_per_million:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{B033E709-E2DA-4C7B-BE56-0FA4CC42F285}' />
    </window>
    <window class='worksheet' name='Tests per thousand population'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]</field>
                  <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>11.406000000000001</value>
                <value>&quot;United States&quot;</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[avg:total_tests_per_thousand:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_deaths:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:date:ok]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:new_cases_per_million:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{3C07C714-01C0-421C-A342-0474618778F0}' />
    </window>
    <window class='worksheet' name='Total tests heat map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_tests:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{0B281312-EED9-4193-9C9B-EF7FBD22D00D}' />
    </window>
    <window class='worksheet' name='Log trend - total cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1E08530-04EA-4D3D-AF58-C454BEE4E9A5}' />
    </window>
    <window class='worksheet' name='Trend - Daily New cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]&#10;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D11F5D7F-E624-43B8-9461-E55D52AD43A1}' />
    </window>
    <window class='worksheet' name='Trend - Daily New tests'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]&#10;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E1EC5D4C-1837-4931-A512-514C2A5651F6}' />
    </window>
    <window class='worksheet' name='Trend - Total Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D1D4DB97-1001-4A1E-8B44-82D2828083FD}' />
    </window>
    <window class='worksheet' name='Trend - Daily Deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A4BBB412-AC97-42F4-90BF-5F77D93B2A1E}' />
    </window>
    <window class='worksheet' name='Card - total cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{5EC9A529-83C5-45BC-B853-C6906A8936AB}' />
    </window>
    <window class='worksheet' name='Card - total deaths'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{BBE73661-6614-40C4-8BA9-B1557B5EB8FA}' />
    </window>
    <window class='worksheet' name='Card - total countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='40'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{836E0013-45EB-437D-8899-73EAFFC15A2C}' />
    </window>
    <window class='dashboard' name='Current World Scenario'>
      <viewpoints>
        <viewpoint name='Card - total cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Card - total countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Card - total deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Log trend - total cases'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='total cases crosstab'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='total cases heat map'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <simple-id uuid='{98FBB429-079B-48BD-B5F3-17F83C39C092}' />
    </window>
    <window class='dashboard' name='Insights World Scenario'>
      <viewpoints>
        <viewpoint name='Tests per thousand population'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Total tests heat map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Virus density heat map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='total cases heat map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{1DACED09-C65A-4587-A0BA-2C7499D75936}' />
    </window>
    <window class='dashboard' name='Country Analysis'>
      <viewpoints>
        <viewpoint name='Trend - Daily Deaths'>
          <zoom type='entire-view' />
          <highlight field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Trend - Daily New cases'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Trend - Daily New tests'>
          <zoom type='entire-view' />
          <highlight field='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]&#10;[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Trend - Total Deaths'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='total cases heat map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{607517E5-83DA-444A-87D0-DC14231ECFF4}' />
    </window>
    <window class='dashboard' maximized='true' name='Infection Rates'>
      <viewpoints>
        <viewpoint name='Case Count Doubling'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death Count Doubling'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trend - Death Rate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='total cases cross tab'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>21393</value>
                  <value>&quot;India&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>187327</value>
                  <value>&quot;Italy&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>208389</value>
                  <value>&quot;Spain&quot;</value>
                </tuple>
              </tuple-reference>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[max:total_cases:qk]</field>
                    <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>842629</value>
                  <value>&quot;United States&quot;</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='total cases heat map'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='20' />
      <simple-id uuid='{0745077F-0962-47E0-957C-99BD76900905}' />
    </window>
    <window class='worksheet' name='Trend - Death Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:location:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{813FC8BA-2E8F-4DFD-A813-DE6127CBD8F1}' />
    </window>
    <window class='worksheet' name='Death Count Doubling'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Deaths:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Pivot Field Names:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:Pivot Field Values:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{513A3FEE-ED5D-4618-9C68-6BD09065C8D4}' />
    </window>
    <window class='worksheet' name='Case Count Doubling'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Cases:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Deaths:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[none:Pivot Field Names:nk]</field>
            <field>[federated.0x8qzcj0uos0i21c7unqd0liuvhl].[sum:Pivot Field Values:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{73C181B7-709E-4E4D-8CC2-A6CFEFB32396}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Animated total cases and deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Card - total cases' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEkUlEQVR4nO3ZS4iVZRzH8d87c+aijONkGVQILiLoRga6cRFB4cKFi6IgMFoI0iKEMkgX
      UlJJBSFRFAQF7gRpEZgEYUZUVlgkQTcpyyGIvNQ4x5k5t/dpMaGlU1DECH2/n9VznvNyeP9w
      vrzn4VSllBIJqu9i34B0MRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjN
      AIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwCh
      GYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYg
      NAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0A
      hGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZ
      gNAMQGgGIDQDEJoBCG3OAEopKaXMrtuds+vf3/zTXul0z61LSWm1kz9ef/7ndnvnXtf1fzKE
      9G815tpsPv9K6onJDK68KdP79qf/siUZ3fZgqr6+nNn9etqHDqcaaGTh+jszufPl9C+9NKOP
      bs7EtmeSUrLooY1pXHVFpvftz/SbB9L9+tuM7dia5qu7U082s3jLA2l//mVa7xzMkpeemu+Z
      pbMueAJ0j46nnmimPnEq03vfyuLHNqf30/GUqZkkyYJ1azKy4Z7Up5uZ2rM3o1s3JVWV1tvv
      JaVk4R1r03/50tlr196WsSceSWP5sjSuXp6xJ7dkaPXKdL8fT2PZlSnd7vxOK53nggAmdjyX
      unkmrUOHM7Lx3rQ//iz1L78myezPl6pK6XSSXi9ptVINNJJGI2VqOn2LR9M58l2mXnsjpdtL
      KSXNF3dlZOP6ZGAgp59+IYM3Xpvh22/J0OpVqRpzPoCkeXPBN/CSndtTWu1MDg+lPn4yMwfe
      z+Cqm9P7YTytDz9NmZ5Jd/zHVAuGs/DudZl4fGf6loxleM2tmXn3o3SPHsuiTRsysf3ZjD58
      f+ozUxlYcUO6Xx1J54tvZs8PdZ32wU/SPXoszV17MnLfXRdjdilVKX9xYs3soTUzrWR4KO0P
      DmXgumtSjY2e3auqKqXdSRr9qfr6Zg+13W56P59MfeJUBldcP5+zSP/Y3wYg/d/5P4DQDEBo
      BiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEI
      zQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMA
      oRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgG
      IDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjN
      AIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaL8BjOsJtRlBG7kAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Card - total countries' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADTUlEQVR4nO3XO4seZRyH4f9uDhtXIukEBT9BGmMREAOCgq3YiZ29HyBgHbGwsLSwVrGK
      VlYWKnjAKEGwsRA8BGOaGN3Nvm7esXdBm00Wcl9X+TDFr5ibeWZjWZZlIGrzqAfAURIAaQIg
      TQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIE
      QJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCk
      CYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoA
      SBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0
      AZAmANIEQJoASBMAaQIgTQCkCYA0AZB2IIBl9/asvvlu9n+5Nst6Paur38/+z9dmZubO9Ruz
      9/mVWe/s3vOhcDcc//fBzvsfzvrWn7P3yRez/eLzs/fpV3Pnt9/nzKWLc/PV12frmafm2CMP
      z+Zjjx7FXjhUB74A2y+9MFsXzs/GQ6dn9eW3c/qVl+fk42dn7+PPZn3z1uz/8OPMMTcn7g8H
      3uTV11fnr7ffmTOvXZyNB7dn2VvNrFYzJ07MyXNnZ+vJJ2bn3ctHsRUO3YEAdi9/NMvtvbn1
      xltz6tkL88elN2f/p1/ngeeenjvXb8zOex/M1vlzR7EVDt3GsizLfz2wrFYzx4/PxubmLOv1
      zOrv2Ti1da/2wV31vwHA/czfLGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDS
      BECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0A
      pAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECa
      AEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIE0ApAmA
      NAGQJgDSBECaAEgTAGkCIE0ApAmANAGQJgDSBECaAEgTAGkCIO0fRWVubtIAwZIAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Card - total deaths' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEn0lEQVR4nO3ZTYhVZQCH8f+5zp07M5piiCRBFFSIJkrYBJZClIsi+1j0BUWrtF0Yfeyk
      KCKiFhKZkIVRUCvbpRu1IisKKqnEvgj60ErRHO/M3Ln33HtajAw2ChHEuHie3+ry3ve8nHfx
      nPPCKaqqqiJB1c71DUjnkgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAM
      QGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCa
      AQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBC
      MwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxA
      aAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoB
      CM0AhGYAQjMAoRmA0P41gKrspur1po2Vqcru2edPm3vGWt3u1LyqU/6Xe5X+d33TB8be2ZnW
      rr3pW3xp6ssWZ3zHzqQsM/+lZ1LU6+kc+C4nN29L32WXZOC6azKy+ZX0XXxR5m5cn5Obt2XW
      ooWZs+G+JMn4u7szvmtvym9/zLynH8/oa28nvV7mbno4zZe3p3fkWAbXrc3gzWtnfONScpYA
      2l9+ncHbb0xj1cpUrYk0Vl2VYxseS9UpU9TrGX1zRwbWrkl9+ZK0P/8qjeErM3TXLUmtSH3Z
      4pQ//Ty11uBN16dx7XD+evSpdH/7PY1VK1PMHkr70y9y3kMPZOL9j9M99MeMblg63RlHoDn3
      35lZF16Q4xufSPfwnxl59sXM27QxxeDA5BGm005t4YKMPL81/cuXprHm6px48oVUnTL15UuT
      okhy6rhTVWlueT1z1t+bgRtWp7bg/HQO/pDUJuekKNJrjs7ohqXTnfEGaO3Zl/b+bzJr0cKp
      J3Rz6xsZuue2dPYfyNAd69J89a0UA410Dn6f1p59SdlN7/iJNLdsT/nLobTe+yit3R9m7iMP
      pjc6lvqKK9I7cjQTH3ySXnM0s+++NSPPbUk1Np7G6uFzsW8pSVJUVVVNH6za7aReT3HqaZ4k
      E/s+S33J5anNnzf5f19filotVacz+fu0ueWvh9M7eiz9K5b+c93WRNJfn7yuLJNuN0V//9Rb
      Q5ppZw1AovA7gNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwCh
      GYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYg
      NAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZgNAMQGgGIDQDEJoBCM0A
      hGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBoBiA0AxCaAQjNAIRmAEIzAKEZ
      gNAMQGgGIDQDEJoBCM0AhGYAQjMAoRmA0AxAaAYgNAMQmgEIzQCEZgBCMwChGYDQDEBofwMh
      x/IgaZWZXAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Case Count Doubling' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Country Analysis' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='Current World Scenario' width='192'>
      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
      +f+5YAyvmR7vuAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Death Count Doubling' width='192'>
      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
      4P8De9wCAqLm1SkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Infection Rates' width='192'>
      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
      /AWGrIQLNRaJGgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Insights World Scenario' width='192'>
      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
      viXqtV0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Log trend - total cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Tests per thousand population' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total tests heat map' width='192'>
      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
      8dMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trend - Daily Deaths' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAWo0lEQVR4nO3d2XIb173v8W93YyQ4gxQAjiIpioNEibZsl8u7kspxKvviVC7zCHmCPEEe
      I5e5SlWGi9SOXcfl5By7PCROSoojjuAEUuAgEhwAEAAx9LDOBQVsyY64SyAFQer/pwpVJEgQ
      i0D/enUv/NdqTSmlEMKl9FfdACFepYYEQDoZ0awaEgDbthvxNEK8MDkEEq4mARCuJgEQruap
      50GJRIJiscjY2BjxeJyBgQEymQyO4xCLxdjY2GB0dJT29varbq8QV0qr53OAv/71r4yMjJBO
      pxkdHWV5eRkAv99PuVxmYmKC9fV1ZmZmUEph2zaGYVx544W4rBfuAZRS3L59m5WVFSzLQtO0
      7/1c0zSUUt+7CdFs6joE2t/fx+PxcOvWLebn5+nv7yeTyaCUYnR0lMXFRW7cuIGun59iKKWk
      BxBNqa5DoBdlWRYeT11ZE+KlklEg4WoSAOFqEgDhahIA4WoSAOFqEgDhahIA4WoSAOFqEgDh
      ahIA4Wp1B+C7FRRPF7w5jnO5VgnRIHUV6JRKJb744gs++OADHj58yNjYGLu7uyiliMVi7O3t
      0dfXR39//1W3V4grVVc59PLyMp2dnZydnaGUqhW7BQIB9vf3mZ2dZWlpiVgshuM42LYt5dCi
      Kb1wAKqHN6lUiuHhYWZnZ1lcXETXdRzHwefzcXx8jMfjQdf1Wkm0VIOKZlR3OXQ+n8fr9bK9
      vU00Gq31Bt3d3SSTSQYHB/H5fICUQ4vmJfMBhKvJMKhwNQmAcDUJgHA1CYBwNQmAcDUJgHA1
      CYBwNQmAcDUJgHA1CYBwtboCoJQin8+jlOLk5ATTNCkUCuTzeWzb5uTkRC6LJF4LddUCHR8f
      8/XXX/PWW29RLBZrN8MwaG1txTAMHMdhcnISkFog0bzqKodeWlqiu7ubg4MD7t27x9zcHMFg
      kEAgQD6f586dOywtLeE4jswHEE3thXsAx3E4ODhgdXW1NhMsFApxenoKQDQa5ejoiJ6eHkZH
      RwHpAUTzunQ5tGVZGIZR28Prul67r3rxDAmAaFaX3iqrG/bTV4qRjV28LmQYVLiaBEC4mgRA
      uJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLhaXatDb21tUSgUGB8fr60CXSqVcByHaDTK
      +vo6Y2NjhEKhl9FmIa5MXUU7vb297O3t8fjxY3RdJxwOMz8/j9/vZ2VlhZs3b7KxscHMzEzt
      MVIOLZpRXQGwbRvDMGhrayMQCHD//n2CwSC6rqOUwuPx1K4Yo5SSK8aIplXXIdDe3h6apmGa
      Jvv7+8RiMfL5PJZlMTw8XLtqTPXaANVQCNFsZHl04WoyCiRcTQIgXE0CIFxNAiBcTQIgXE0C
      IFxNAiBcTQIgXE0CIFxNAiBcra76hGr1hKZp36vyrN739EpxQjSruorhNjY2ODo6Ynx8nEQi
      QTgcJpvNAhCLxdje3mZwcJBoNHrlDRbiKr1wADRNo62tjZWVFfx+f215dE3TCAaD7O7uMjs7
      y9LSEteuXZPl0UVTq6sH6OjoYHR0lNPTU7LZbG0DL5fLeDwe8vk8uq7XbiAL5ormVNdWube3
      B8C7777L8vIyk5OTtSBEIhHW1ta4efPmlTZUiJdB5gMIV5NhUOFqF+6WDw8PyWaz+Hw+hoaG
      GtUmIRrmwgB88803VCoVWlpaJADijXRhACYnJ9nf36e3t7dR7RGioS48B1hYWKC3t5fu7u5G
      tUeIhnpuAOLxOPl8nng8zuPHjxvZJiEa5rkBuH79OsFgkOnpaQmAeGM9NwBKKYLBIKlUirt3
      7zayTUI0zHNPgoPBIABLS0sUCgVisVjDGiVEo1w4CjQ0NEQwGJTSZvHGunAUqFQqUSgUaG9v
      f+b+6qK3z7tPKj/F6+LCHiCTybC5uUkgEKjdp5RibW2N4+NjJicnicfjjIyMcHBwgFKKWCxG
      MplkaGiISCTy0v8BIS7juQFYXV2lWCzS29v7zPG/pmmMjY1xeHhILpfDNM3asuiBQICdnZ3a
      fIDe3l6ZDyCa2nMDMDY2RiKRoL29nd3dXW7fvg2c9wB//vOfCYfDtLe309PTQzKZxDRNyuUy
      nZ2drKysEAgEZD6AaHoXlkPbts3R0RGWZREOhwkEAs8c62uaVit1rl4EQ9f12n3Vk2cphxbN
      6sKTYMMwiEQiZLNZTNMEzjf66p5d0zS8Xi+apmEYBoZhPHOfEM3uwgBUKhWUUrS0tGAYRqPa
      JETDXHhcsr6+zr/+9S9GRkYYHh5uVJuEaJgLe4C9vT1s26a/v18OacQb6cIA9Pf3A/89CV6I
      N82FATBNk/7+fnp6ehrVHiEa6sJzgJ2dHXK5HJVKhRs3bjSqTUI0zIU9wPT0NI7jMDEx0aj2
      CNFQFwbg/v37TE1N4ff7G9UeIRrqwgAMDAyws7NDJpNpVHuEaChZGU642guvDKeUYnd3l/n5
      eSzLYn5+ntPTU7a3t3n06BGlUon5+XmKxeLLaK8QV+qFewClFIVCgUQigWmaTExMsLq6CoDP
      58OyLMbGxtjc3GRmZgY4L6qTUgrRjOq6PsDe3h4tLS0Ui8Va2TOclzyXy2X8fn+talTmA4hm
      Vtf1AdLpNKFQiIGBAe7fv08sFiOTyVAqlRgaGuLbb79lZGRE5gOIpnfpk+DnXSOs+jXISbBo
      XpfeKv9dkZwUzonXhVwfQLiaBEC4mgRAuJoEQLiaBEC4mgRAuJoEQLiaBEC4mgRAuFpdAZDl
      0cWboq5SiM3NTSzLYnBwsLZwViqVQilFX18fW1tbXL9+XS6vKppeXQEYHBxkbW2NbDb7zOK4
      gUCAZDJZWx49HA7jOA6O49TWFhWimdQVgGqxW0dHBx988AH/+Mc/8Pl8mKaJYRgUi0U0Tast
      mgvIhBjRlOqaD7C9vY1pmhQKBVZXV5mYmCCfz+M4DtFolNXVVcbHx5+pCpUKUdGMZFK8cDUZ
      BhWuJgEQriYBEK4mARCuJgEQriYBEK4mARCuJgEQriYBEK4mARCudun5AJZl1RbBdRyndp8Q
      r4O6CnQ2NjY4PT2lr6+PnZ0dfD4fp6en6LpOb28v2WyWjo4OxsfHr7q9QlypuorhLMtidXUV
      0zS5c+cOc3NzAAQCAfL5PHfv3mVxcZGZmZna8ujVVaKFaCZ1XSBjZ2eHtbU1RkZGOD09BSCf
      z6PrOt3d3ZTLZQKBADdv3gSkGlQ0r7oCUKlUsG0bv9/P2dkZLS0ttRlfPp+PQqFAKBSq7fUl
      AKJZyXwA4WpyYC5cTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBcTQIgXE0CIFxNAiBc7VL1CbZt
      s7KyQk9PD7Zt4zgOvb29JBIJRkZG8Pv9V9VOIV6KS/UAh4eHKKUIh8Ps7e1xcnLC8vIykUiE
      1dXVq2qjEC/NpXqArq4uzs7OuH//Pn6/H6/XS6FQoLW1tTZDrDofQK4aI5rRpQJQKBTI5XJ0
      dnZSKBQoFAr09fXxz3/+k6GhIXRdr5VESzVo81NKYdv2994rx3He2AlNly6H/u7DNU3DcZza
      BTJAyqFfB0opvvzyS+LxODdv3uTg4ID33nsPj8fD73//e37xi1+86ia+FJeOdXVDf3qD13Vd
      LojxmtE0jTt37mAYRu0QNpPJ8OWXX9LX11db8OBNUF3UwbZtGQYV55RS/Pa3v+Xdd98lHA7z
      9ttvs7y8TGdnJxsbG5ydnb3qJl6JbDbLr371K46Pj/nDH/4gM8LEueqlr8rlMj09PTx+/JiR
      kRGCwSC5XI62tjYODw+Jx+P84Ac/IJFIcHZ2RqlU4vHjx/z4xz+mpaXlwudIpVKsrq4yOzvL
      Z599xsjISG2O+U9+8pOGbCNKKb766ivGx8f505/+JD2Am9i2zcnJCUopdnd3OTs7I5vNsr29
      DcDQ0BDj4+N0dXUxNTVFIBAAoK2tDTg/tD08PKRSqfD1119zeHjI9evXSafTZLNZvvrqKzKZ
      DHt7ezx48IBCocBHH33Et99+C5xfKPHw8JBUKkWpVKK/v5/19XVGRkYaNmxeqVQ4OjqiVCrx
      4YcfXm4USLxeNjc3+eKLL/jwww9ZWFigUqlwdnZGIBDAsixGRkaAJ3vJzVNa/QazfaHa+Vw4
      HMbn8zE3N0c2myWdTjMzM0NnZyfZbJZSqUQ6nSYQCLC7u8v09DTvv/8+f/nLX3jrrbcIh8N4
      vV76+vrQdZ0//vGPdHZ2out6wxZTM02T0dFRlFKUSiUJgJvcuHGDeDxONpvl9u3bzM3NoZQi
      lUrV9vYAjoJkpkR3ixdFiOpwxvLyMicnJ8zOzvLzn/+c7e1tFhcXKZfLRCKR2kYci8XQdR2l
      FB9//DE/+9nPAFhaWuLk5ISVlRW2tra4ffs2SikWFxf56U9/2pDXoLW1lbt379a+lwC4SDwe
      Z35+nmg0yueff053dzeaptHb20sulyMWiwGQypsoBRVLoRRUEzA1NcXU1FTt742Pj9dW/yuV
      SsTjcUKhEOl0muPjY5aWlgiFQsTjce7du8f09DTT09MAz2yEr5KcBLuUaZq198SyLLxeL3B+
      +PP/1jNca/WxeFDgp1NhWv0GZcshU7ToCXnRtctd91kpRTJTxrQVY+HAKx0yl63SpaobPJx/
      Sp8pWnQEDE5LNkcFkx+OdpAuWuyelpnobeH+To71oxKtfoOgR2e8N8hodwBD187H1BXEU2ec
      lmzGwgEqtqKv3YdSYHxnqCVbsvnm0SmOgli7j5DPaNj/bZZNdh9uEpnoJ9DWIj2Am9iOomw5
      WI6ibCkKFZtCxWY/V2EnW6Gv3YejFD0hL/cG2lg7LJLMlPhfNzr582qakM9gKtJCseIwv1+g
      Yjn0tvoIeDS20mW6gh46gx7Wj4qcmQ76kx27oWm0+g06AgZBr8F2psz1Lj/pooXfo/MfI+3o
      DegFlKN4+F/fcLx1QKVQpqOvWwLwOlNKUTQdcmWbM9OhbDk4SuE4ULIcSpaDo8BRitOSTa5s
      4zM0DF3DZ2i0eA2CPp12v8HxmUVX0EPZdrgdCRHw6pxVbP5P/ITZvlYWDs7435NdeJ/szh2l
      OMiZZIoWZ6ZNtM1HX7sPgMOCyV62wlSkBa+hUbEU+YpNpmiRK9v0tfu41urFchSfrmZo9enc
      6AnS2+rF993u4grtzm8R/78P+Y+f/yeOabMf3776AJimydbWFsPDw/h85y+IBOD5TNuhaDrY
      T1UaKM437HTR4qxiUzQdyrbCds5vVWcVB02DFp9O0GsQ8OjoGugaBLz6k+81NKDVb9AZ9ODR
      z79HOz+3rR5/K6X+7bH4R0vH5Cs27w22MRoOXvn/XzIdllJnPM6WOS3bDHX6ibT5ODmzyJYs
      ypaDraDFq9MZ9KBrcGY6GJpGyHf+P5q2wnIUPo9GwKNjFStkdo4oHmUpZvLoukZ7pIuTtV0m
      IwbX9CJ+bLwe4+oDEI/H6enpYX9/n9u3bwMvHgDHUfxz7THFknmVTTv/20/2iFWapmF85323
      1bNFfkZ1o3lCwTMbYvXvWI7CtB0KFYeS6RD06rQHDBzF+V66YlOyzg9DFOfPUd1Lf/ddUErh
      9ei0PTnm9hoaXl1D18FyHDQg6NUJeHX8hqd2uHEVzEq59vWjrMVx0eZen792LK9pxrMN1nTQ
      nhzH2zY4NtgOPP2ePxkiNZ3zjVcHsM/vc2wH23Io2TY7JZuUFaDTOqUbG7+moWuQL5TI6AGU
      phEySzg+nbyvhZLhx+dUMCybMl4c7byRStdxjPPn91CpvqjoKFAedMvEY1tXfxJs2zYdHR3s
      7u7W5gOUy2WKxeJzH/PdPY9pO9yP75LOlZ/ziDfPd7dfDbCBzJPbq/ZNtnHPZVAhB+R46uRY
      f1JmoaDgCYIDlGzgrLp5w1NfaVB79NP7FvvJ79mAyUsYBt3f3+fRo0cMDg7S19cHyCGQaF4v
      5SRY5gOI18VL2Srf1NlD4s0jW6pwNQmAcDUJgHA1CYBwtYYNzbzKq8dXB7peZdVhs7ThVS9W
      0GxtaEgt0KtWXdHgVY5ONUMbmmE4utna4IrB+Ve9x2mWNjTD8HSztcEVPYAQz2P88pe//OWr
      bsRVWFhYYG9vj2vXrqFpGslkko6Oju/9nm3bxONxtra28Pv9LC0t4ff7/8clPS5i2zZzc3Mc
      HBwQiUT4+9//TiQSwTAMDg4O8Hg8/7bb39zcZH19HY/HQzweRylFe3t73e0oFos8fPiQfD5P
      d3c3CwsLpNNpurq60HWdo6MjKpUKgUAA27ZZXl4mmUziOA6rq6t0dHTUKnjrff6FhQUymQz5
      fJ6NjQ26u7tJpVIkEgmCwWBt7nH1ZwA7Ozusra2h6zrz8/N0dXXV3Q7HcVhYWGB/f59oNEo8
      HkfTNPL5PLu7u4TD4Wd+/405BDo+PkbTNMrlMsFgkHQ6TTAYZGlpiWg0SiqVoqOjg5mZGUZH
      R3nw4AE7OzvMzs6yvLz8vRfmRei6zo0bN1hYWGB7e5tKpYJt23i9XnK5HLZtk0gk6OvrI5lM
      4vP5+OCDDxgaGiKTybC2tsb777/P4uIi/f39dbejuppbdcAhn89z/fp1VlZWauFMpVJ0dnZy
      9+5dxsbGePDgAUdHR8zMzJBIJJ6Z8/uiAoEAw8PDbG1tEYvFWFtbQylFLpcjFArVAhoOh9nd
      3SWZTPLDH/6QWCzG6ekpjx49YmxsjEePHnHr1q262mDbNtlstvYeWJbF9vY2Xq+XcrnM6uoq
      +/v7BINBvF7vmzMMOjMzg+M4GMZ5DaBpmqRSKQzDoFAoMDExgaadT9+bm5vj7bffRtM0TPPy
      JdfVv/nOO+9wcHBAPp/n+PgYOF+HJp1O4/F4OD09pa+vr7bOTjweZ2BggJ6eHkql0qWXHzw5
      OWFqaqrW2xiGgc/n4/DwkI6ODhzH4datW7WlAauvg1KKSqVSe+3qValUWFtbY3Z2thaGbDaL
      pmn4fD5yuRyapuHxeIjFYkQiEUzTJJFI0NHRweDgILlc7lLt8Hg8TE1NoZSqLdGp6zq2bdfW
      JTJNE8MwuHv37pvTA6TTaYaGhvB6vSQSCaLRKD6fD8dxiEQitLa2YhgGjuMQCATY3NxkbGyM
      eDzO5OTkpZ7btm38fj+JRIJ33nmHTCZDW1sbqVQKXdeJRCLs7OwQiUTwer21Dd3j8XBwcMDg
      4CDr6+uMjo5eqh3RaJTl5WWi0SgAo6OjhMNhZmZm2NnZIRqNsre3x/Dw8DOvw/DwMIlEorZi
      Q70qlQo+n49kMolt2xSLRUZHRwkEAoRCIeB89YiOjg7S6TR+vx+/349hGJycnDAwMMDJyQkT
      ExOXasfJyQljY2NomkY0Gj2f82EYmKbJyckJjuMQDofPCzblJFi42RtzCCREPSQAwtUkAMLV
      JADipUokEnz88cfs7u7+j797//59lpeXAUgmk+zv79d+trOz81La98Z8ECaa09/+9jcmJyf5
      9NNPUUrx6aefkk6n0TSNjY0NQqEQv/71r8lkMnzyySfcunWL1dVVPvnkE9ra2vj888/JZDL8
      5je/obe3l48++gjbti/1ecnTpAcQL11LSwuGYXB8fFz7TOR3v/sdXV1dJBIJ7t27x/b2NtPT
      09y6dYu1tTV+9KMfcXp6SktLC8lkkpmZGUzTpFKpPNMzXJYEQLxUAwMDfPbZZ7z33nsEAgGi
      0SgTExMYhsHw8DA3btxgeXmZ6elpRkdH0TSNsbExVlZWamP11c8zgsEg3d3dDA0NXVn75HMA
      0XB7e3tUKhWuX7/+qpsiARDu9v8BcDXrpaIerFwAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trend - Daily New cases' width='192'>
      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
      ak8zMTFh3bp1y17u4uKide7cOWtyctKeZmRkxBofH7enmZyctM6dO2ctLi5almVZiUTCOnfu
      nDU2NmbPMzc3Zw0ODtrzrK2tWX//+9+te/fu7dhmXdetoaEh69KlS/Zystms/bcLFy5Yly5d
      srchEolYn3/+uaVp2o7lpNNp67PPPrOuXbtm74+vvvrKOnfunLW5uWlZlmVpmmadP3/e2tjY
      sOd7+PChNTo6arczmUzuaMP2snRdt3RdtwqFgpXL5ezpn/9bsVi08vm8ZZqmdfPmzR37Y3l5
      2bpw4YKlaZqlaZr1+eefW9evX7dM07RM07QymYy9jdvL/qn2VBBjWRYzMzM0NTVhGAYulwtJ
      kn7Sr0TeunWLcDjM73//e1FML+yJYZooskwyU8CrulDdO/tTrlBkejlGfaWf87enaa4N7u0y
      6OzsLFVVVUxNTQGl0/rp06d/9PymabKxsUF/fz9zc3OMPsuzGk9TG/IzubDBu8ebufMkzKmu
      Br6ainDiaC3RWIYyb+kL4Vo8w4mOOh5MRzl9rIEb44u8/1orD2ZX6WioZDWWBglqQ37C60m6
      mqq493SFd0+0MPokzOtdR3iyuEFdyE/RMCkWDeqr/DyaX+et3kZGJ8O80dPIg5kova01LK0l
      CPhUfB43kc0Ux5qruft0hTP9TYw8DvPLEy3cmQzT3hAiV9DRDZPyMg8Lq1u81lnPvacrvNXb
      yMjjMAOd9cyvxKmvDJAtFEllCxxrrmZsbpVT3Q3cerTEL0+08HB2ld7WambCcSr8HvxeN2tb
      WVrqyhmfWyvto8kwb/c28dVUhK7mKuKpPJIE5WUenkW3ONlZz73pKG/3ldZ9srOe2Uicuko/
      BU0nldNoratganGD08cauPpwgV+dbGN0KsKJo3XMR+KEAl5Ut8JGMkdbXQUPZqL84kQLd56E
      OX2sgXtPV+huqmIrU0CRJco8bp5Ft+hqquL2xDLvn2zj/vQKb/c2Mb28SW2ln3gqTyavcfRI
      iLxmoOkG8VSOrqYqJhfWeb3rCLcnlnmrr4knCxu01JezuJrApcgMdNR/0/ENk0xeY+j+An3t
      Ndx/GiVYphIKeDHMb97fk5kCK7EUAZ9KOqvRXFe+twDkcjmOHj3K0tISW1tbqKqKy+Wyi+I1
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Trend - Daily New tests' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trend - Death Rate' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2d6XNc15mfn7v0vmEjQADEQoAgQFIkQVK0NkriSJQcmXLZnom3TGacxE5N
      8mVSqVQyH1KVcv6AVM2HpDKTmpmyJ7ZrxvaMY22JLYuUDFqULEFcQFDYN2JpNhpoNHq/fe89
      +dBAmyAJiiCWBonzVKGAvri3z3u7z++ec97znvcoQgiBRLJDUUttgERSSjZdALKBkWxnNl0A
      lmVtdhESyQMju0CSB0YIUWzhbdu+42FnWdaKc7YjeqkNkDxcfO9736O5uZmnnnqKv/iLv+Cr
      X/0q1dXV/PSnP8UwDJ5++ml6e3tJJpPEYjGOHz+ObducOnWq1KbfFdkCSNaEoihEo1Hef/99
      amtryeVyZDIZqqurqa2tpa6uDqfTyec//3ls26a7u5urV68yOztbatPvihSA5L4xTZPPfe5z
      mKZJNpslFosxPT3N4uIi0WiUmzdv4nA4SCaTVFZW8uUvf5mWlhZ8Ph8zMzOlNv+uKJs9D2Ca
      Jroue1qPAkIIRkZG0HWdpqYmMpkMiqKQyWTIZDJYlkVdXR2pVIpgMEg8Hsfv9zM4OEhraysO
      h6PUt3AHUgCSjWG5GilKae1YI7ILJFk/QsDgAJz7FRhGqa1ZE1IAko0hPANTk5DNltqSNSEF
      IFk/igInHgdVhUCg1NasCSkAycbgdIHDAdlMqS1ZE1IAko1B08DjgcVEqS1ZE1IAko1BUcAf
      gKQUgGQnoiiF/n9CCkCyUwmGYDFeaivWhBSAZOMIBCC+UGor1oQUgGTjCAQgkSy1FWtCCkCy
      cXi8IGzI5UptyX2zLgEIIejt7WVsbAwhBPPz81y9epVYLLZR9kkeJlQVvF5ILJbakvtmXVFq
      6XQah8NBPB5HCEEkEsHlcuH1eosrgYQQ2La9UfZKtjNCoPgDiHgcKipLbc19se4wzVsreVNT
      E4uLi/T29tLZ2bniHMnOQPEXXKEPy3e+LgF4vV5yuRyBQIC5uTkAZmZmaGxsRFULvSvbttE0
      bf2WSh4OyspQ5qKF7tBDEBq9LgEoisKRI0dWHKupqVmXQZKHnEAAxkZKbcV9I71Ako0lGILF
      h2cQLAUg2Vj8fkin4SHJByUFINl4AsGHxhUqBSDZWJaD4h6SbpAUgGRjUZRCCyAFINmxBAOy
      CyTZwYTKCi3AQzAZJgUg2XgCAUglpQAkO5RAEJJSAJKdiqaB2/NQLI+UApBsDsHgQ7FAXgpA
      sjkEgw/F8kgpAMnm4H84MkRIAUg2h1DooXCFSgFINge/H9IpKQDJDiUYglQKtvlyWCkAyebg
      dBZWhWXSpbbknkgBSDaPYHDb5wmSApBsHoHt7wqVApBsHqGybR8VKgUg2TyCQYjHt7UnSApA
      snn4fIVBsBSAZEfi9xdcodt4gfy6BWDb9oosYMuZ4iSSQrJcsa23Tl2XACzL4oMPPuDy5cvF
      iv/uu+/K5LiSAg/BtknrygyXTCapra0lmUwihODGjRt4PB5M08S2bWzbxrIs2SLsYLRAADE/
      j71Nk+WuSwAej4e5uTmEECSTSWzbxjAM5ufnqa6uLuYH1fV15+CVPKyUlUMqieZwlNqSu7Ku
      mulwOGhsbMTtdqOqKs3NzdTX1xcrvkRCIAA3JkptxaqsOzludXX1imNOp3NdBkkeMQJLYwDb
      LsQGbTO2n0WSRwuvF7K5besKlQKQbC4+P+QNyOdLbcldkQKQbC6qCl7fto0JkgKQbD7B7Zsr
      VApAsvkEt2+6dCkAyeaznCluGyIFINl8tnGGCCkAyebj9YKRA9MstSV3IAUg2Xy8PsgZBXfo
      NkMKQLL56Dq4nIXN87YZUgCSrSGwtDxymyEFINkaQmXbcl2AFIBkawgEZAsg2cEEg4Vs0dvM
      FSoFINkafP5t6QqVApBsDR5PofKb2ysqVApAsjW4XKCokM6U2pIV3FMAQggsy8Le5imuJQ8J
      23DfsHsuiTx//jyRSITdu3dz+vTpLTJJ8sgSCm07T9A9WwCPx8Ps7Cwej2er7JE8yvgD2y5b
      9KoCWM7r861vfQtjG2f2kjxEBLdfWPSqXaBEIkFfXx/JZJKDBw9upU2SRxWfH7KZgjdom+SK
      WtWKUChEU1MTfX19qKpKQ0PDVtoleRTxeMCyCwvkt4kA7jkG8Pl87Nu3D2uVlBZCCG7evEl8
      aWCTSqUYHx8nm81uvKWShx+3u/A7s31coasKIJFIkEwm2bdvH1VVVXc9xzAMpqenGRoaWpH/
      c3h4eOMtlTz8KEohZfo2coWu2g719vZSVVXFz372M7797W/f9ZxcLkcoFCKVSiGEwOl0Mj09
      TU1NjUyOK7krWiCAiMWwa+tKbQpwDwFUV1fT09NDc3Mz4XCYioqKO87x+/309PTg8Xi4efMm
      lmXh9XoxDANVVWVyXMmdBEOQTGybZLmKuMfj2TRNDMNA1/VVc37ato2iKCiKghAC27ZRVRVF
      UYrvIQUgKTI+Bn2fwudfKbUlwGfMBL/11lu4XC6am5tpb2+/6zm3ZoJWFAVN0zbWQsmjRSAA
      qSTYFqilryurDoL7+vqYmJggk8mQ36Z5HSUPIW432KKwSH4bsGoLsH//fjKZDAcPHqS3t3cr
      bZI8yrjcIGzI5QrzAiXmnjPBXV1dTE1N0draupU2SR5lNK0wI5xKQllZqa1ZvQsUCoU4ceIE
      MzMzRKPRrbRJ8qizjTJE3HMQ7PV6eeKJJ+QYQLKxhELbJlnuPUMhcrkcw8PDmNtsHafkIaei
      AubnS20F8BkCyGQyRU+QRLJh+APbZgf5VQWQz+cxTZM9e/Zw/PjxrbRJ8qizPKmay5XWDu4h
      gJ6eHvbs2cNzzz3H+++/v5U2SR51XC5QlcLagBKz6iDY4XBw6dIlHA7HXeOAJJIHRtPA5ysk
      yirxDvL3jAXaCGQskOSuvH+h4A06dLikZnxmXqBcLkdPT89W2CLZSQS3R4aIez6aL126xNTU
      FEIIGhsbCYVCW2WX5FEnEISpyVJbce8WYGpqira2NrLZLP39/Vtlk2QnsJwkq8RJ1+7ZArS2
      tjI2Nsbp06dxuVxbZZNkJ7Bcn4wcuEsXFHfPFiAQCBCPx/nkk08IBoNbZZNkJ+ByFXaRL/Ek
      6z0FEI1Gqamp4cSJE1tlj2SnoGmF0OhUqqRmrCqAubk5pqamuHLlCpFIZCttkuwU/IHC/sEl
      ZFUBRKNR0uk0uVxOJsWSbA5lZSWPCl11ENze3k57ezuxWIxoNEogENhKuyQ7gWAQZqZLasJn
      TtGWl5dTXl6+FbZIdhr+QMmT5codYiSlw+stzAOUMCp03QK4PfObzAQnuW8cDtC1kkaFrksA
      lmXxwQcf0N3djRCCSCRCT08Pn3766UbZJ3mU0XVwukraDVpXmGYymaSuro5kMokQgqqqKqam
      pqiqqpK5QSX3hebzIeJx7OqakpS/LgF4vV76+vpQFIV4PE44HEbXdbxer8wNKrk/QmWQTJYs
      V+i6aqau67S1teFyuVBVlcbGRtLp9Ip0iRLJPQkGYWy0ZMWvSwCKotyxWszn863LIMkOIxCE
      xdKtC5CPaklp8fsKbtAS5Z6SApCUFt1RyBJRIleoFICktDgcJXWFSgFISktx3zApAMlOpYQL
      5KUAJKUnEChZWLQUgKT0BIIlWxgjBSApPcFgYcMMsfUZIqQAJKVH1wuu0OTWrw+WQTqSDcGy
      LN544w2eeeYZ+vr6WFxc5MUXX0TXdV5//XVqamoIBoP09fVx/PhxPvroI06dOkUmk6F1796C
      AFKpwnhgC5EtgGRDUBSF2tpaEokEY2Nj+P1+HA4Hw8PDtLW1MTs7S39/P0888QRdXV3E43He
      eOMNRkZGsC2rsFfA1I0tt1sKQLIhqKqK1+sF4Atf+ALpdJqxsTE0TSOTyWAtbYaRy+U4cOAA
      jz32GE6nk1gsRnh6GjS9JDmCpAAkG0I2m2V4eJihoSEGBgbI5/OUlZXhdruJRqO0tLTQ2dlJ
      b28vjz32GJWVlbz66qu43W521dXBS58vDIS3eNcYmR5dsn24fAl8Xmhr37IiZQsg2T7U7IYr
      l2ELN2WUApBsH2pqCptoDw5sWZFSAJLtg6rCkaPQc3XLWgEpAMn2oq6+MDM8NABbkExBCkCy
      vVAUOHoMrl7Zks0zpAAk24/duwsBcoOb3wpIAUi2H4oCnccLrcAmjwWkACTbk927C3FBm+wR
      kgKQbE8UBTqPwbUeMIxNK2ZdAhBCMDk5yfz8fPF1OByWqRAfcSzLKsb2QOF7X/6xbRshRDEl
      5rrqwu7awmbaQ4MbYPXdWVeMQi6XY35+nkgkQllZGYlEgpGREaqrq1EUZaNslGwjLMvi+9//
      Poqi8I1vfAO3280//uM/UllZSWtrKz/60Y84evQokUiExsZGTp48+eDJ0hQFjh2H985D677f
      7Sy5gaxLAIZh4Pf7SS6t6A+FQsXdJGVy3EcT27aJx+OYpokQgqGhISzLIplMcu7cORoaGnA4
      HCSTSS5dusTCwgJnz5598ALLK9BDZdh9n2IfPLRxN7LEugTg9/vp7e3F6/Vy8+ZNnE4nkUiE
      qqoqdu/eLZPjPoKkUilqampwOp2MjY2hKAput5upqSmampr45JNP+OIXv0gmk8EwDLLZLJqm
      rS9fbOcxtF+/i9ZxYMNbgXVHg9q2jaIoq3Z5ZDToo0c4HMayLEKhEG63G0VRMAwDj8dDKpXC
      5/ORSCQQQpDL5di1a9f6C/3VLwtjgscOr/+9bkGGQ0s2BGEbYOdR9E1KjhyJQNe78OqXNrQV
      kG5QyYaQm/k5yb7/ijH7DmZqBNuIFUSxUVRXF/YS2GCPkHw0S9aNMFOY8asomhczOYQ9dwFh
      plA0L6qjDNVTh+pe+nFWoWhuFNW59oI6j/3OI+R2b4jtsgskWRdCWGRv/BBhZfA0fwdF0QrH
      zRR2fgE7F8bOhrEyk9i5MMJMoGh+VGcZqrt+SRi1iPwiqrMCzdt47wLPvQ2Vu+Bo56qn2LbN
      22+/TXl5OSdPniQcDvPxxx9z4sQJPv30U9xuN36/H03TZAsgeXCEEOTnLmClRvC1/cdi5QdQ
      dB+a7kPz1K+8xkpjG7GiMMzFHuzI29jZKRwVT+Np+pf3LvRwJ7z7DrS3g9tz11NM02RkZIQ/
      /MM/BKCnpwe3283Vq1d58sknee211/D5fGSzWTkGkDw4VnqE3M238DR+674Hv4rmRfPU4yg7
      gWv3Wbx7/w2+jv+Cp/lPsLIzmMnP6OPv2gW7qqG/f9VTdF3npZde4gc/+EFxDsrn86EoCm+8
      8QYvvfQSR48exbZtKQDJg2GbSbIT/xvX7i+h+fbe8X8hBKZpFifMll/btk02myWfz2NZ1tL/
      QS87gbv+n5IZ+19Ymal7F36kE/r7Vk2jks1m6enpobW1lf7+fqqrq4lEIvj9foQQDA4OUldX
      x9GjR+UYQLJ2hDDJjP0ViubF3fDPUZQ7n6PZbJZf//rXfPTRR/zZn/0Zly5dYmxsjGPHjnHj
      xg36+vqorKzENE3Kysp4+eWX0XWdfOy3ZCf/Dm/bf0Jz717diPfOF7xCncfWdS+yBZCsGSPy
      DsKYw13/tbtWfgC3283Ro0d56qmn0HWdUChENptlfn4eRVHI5/NUVlaysLDA0NAQ77zzDgB6
      2UmcNa+QHv5z7PzC6kYcPgoDq7cC94sUgGRNmIk+jNl3cDd+C0W7tyvywoULnDp1iuHhYQDq
      6+sZGxtDVVWcTidPPvkkzc3NVFVVkUgkgEKKReeuMzirnic99OfY+VXSppeXQ00tXO994Hux
      8qbsAknuH9uYJz3033DVfgVH+eOfeX4+n0fXdcylVV3JZJJAIEAymcThcODxeFaEVrtv8e0L
      YZOd/Dus9Ai+1n9/90H2/Dy8/Qv44pdgKS3j/WAaeW5cGmH0gz4pAMn9IWyDzOj/RHXX46r7
      gy0JdxfCIjvxtwgzgaf5T1A01+0nQNd7hT3Gjt+HILMGNy6NMPbbAbzlPvY999jOFoBlWSiK
      ckek4vJHIoRY8UVv5Je+vHhE07QVZSqKctfyS7m+Qgib3Mz/wUpP4N37b++siJtZtm2SGf9r
      wMbT+K/uLDs2j/XWW1zKVRJormN3RwOB6hCq/rs5CSOdZeKTYSY+HiJQU8a+UwcJ1VWiaurO
      FUAmk+EXv/gFiUSCP/qjP+Ldd98llUrR2dnJP/zDP/DNb36T9957D4/Hg9vt5vTp08XKCjA+
      Pk53dzednZ3s3buXrq4uYrEYR48e5dKlS3R0dHDt2jVOnz5NNBrlwIEDxWuFEJw7d47R0VG+
      9rWvEQgEOHfuHIZhEAqFmJ+fp6ysjOHhYfbv3097ezsVFRVrvseenh76+vp46aWX8Pl8nD9/
      HiEElZWVzMzMcPz4cS5evMgLL7zA4uIizc3Nd32ffPwKuakf4239d6iu6jXbsV6ElSU98j9Q
      nRW4G/+4OOFmmxYD7/Xg77uCv8LPjYyLuZkFNJ+X8n31VHc0ELsRZfLyCKHaCvY9e4hQbTnK
      LQ887bvf/e53N9N427bXFwu+Sei6XvRFt7W1MTU1xc2bN6mrq6O8vJyysjLGx8e5ceMG8/Pz
      6LpOXV1d8XrXUkRiNBqlsbERTdO4ePEizz77LJqmcfXqVZLJJAMDA9i2XTwHCk/zYDDIyMgI
      x44dIxaLMTg4iG3bnDlzhsHBQXw+Hzdu3GBqaop4PM7+/fvX3AoEAgGmp6cJBAKUlZVRVVXF
      J598QiQSob6+ng8//JBsNsvg4CBOp5OGhoY73sPK3iQz/ld4Gv7ZXf39W4Gi6uihI+Tnfo2d
      nUELdGDlLS6/9iHzk/M0nj2F20hRZifZHRBUuEyc6Tjp8Rtk5mJUtNZQcaSVrMfLfE4QTZnM
      pvLcTBg7NxRicXGRrq4uvvKVrxAOh2loaKCqqoqrV6+iKAper5dXX32V8+fPE4/HmZyc5MSJ
      E8XrJyYmmJ6e5uWXX8ayLFwuF6FQiIGBAW7evMlXv/pVuru7uXz5MvPz84yNjbF//36g0AL8
      5Cc/4cUXXyQWizE/P4/L5WJgYIBwOEwkEuHll18mkUiwuLhIOp3Gsqw1t6Td3d3U1NTQ0NCA
      bdu89dZbnD17lsXFRS5cuMDRo0eJxWL09fUxMjJCZ2dnMcc/FJ682Rt/i6PiSbTAxq/GEkJg
      2oK8JciaNoYpMCybvPW744YtMC1B3rIx7G+SC48h4rPk8irJylpcTS28u6gjqg+T9xtY2RyK
      puIKeFFUBU1RUFUFeyFHamgKp5HFp1q4VRu3toOjQd1uN88//zzZbJZgMIjT6WRhYYEzZ84w
      MTGBy+VCURSeffZZYrEYfr9/xfWxWAzLsoouvpGREfx+P5lMBtM0GR8fp7Kyki9/+ct0dXWx
      e/fKSZ0zZ85gWRaqqtLS0kJ7ezunTp1ifn6eJ554AiEEJ0+eRFVVFhYWHqgbmclkiuu0NU3D
      4XDQ09NDWVkZlZWVHDlyhIGBAQ4ePMjFixdv88IIsjM/Q9F8uGq+8EBjECEEtoC8JchZNinD
      IpmzSeRMUoZNMmeRt2wsAQrg0lWcmoJDU9BVBYem4tAUPA6VgEvDEagkB9iRH+P07CF44EXy
      6RxmKsPcyAyRvhtUt9ay75mDhGpCqLfYLIQgNeflZv8UNz+dIB2J4S7z7NwxwGrkLRtNVVZ8
      eDuRfOy35GZew7vvP6A6y1f8TwiBAGwBtl2o5JGkQSSZp9yrk8xZJA2LZM4iZxae5rYQeB0a
      fpdG0KXhc2n4nRpeh4pLV3HpCsKysUwLK2+Rz+TIxNMYqSyZeJpsMkNmIcX8jVl0NcaRZ64z
      OdzI/Gwz7qCXUG0FjSf2Ear97LFSQQwJZodnpACWEUIQz1qcG1qgzKNT4dXR1cKTSFMUNBX0
      JWHomoKmLL2+5Zy8LbixkKWp3I2uKggAAQKBtZTm0l56KgrAssWKY9FUnkTWor3ag0MrPA0V
      CskRFEVBVVh6vTHiXK7IQoBpC6biOWoCTkQ+Tnzov0PNV8k795I17cJP3iZnFrorpm1j2YXr
      rKXuiiUE9SEXIbeG16ERcBcquFtXcTvUuz5UhC1YjCwwerGPhel5zFwe08ijOTTcAQ/ugBd3
      0Mv8eITUfJLHvnCCUG0FLleE/PRf467/+n3NSazGjheALQSRRJ6BaIZwwkBTFCp9OgGXtvTl
      FiqqtdRftW45Zt5yfDmPa94WhYqrFCqWEIUKrC19+apKsSLo6tIxpXAsZVjkLBufQyO/VJa2
      LLAlATpUFV1VcOmFroJLL3QTXEvdBShUyhU/lsBa6ooUbBUYSxXWFgXbDcsmadg4VRvsDC5X
      ELeu4tQLXRC3ruLSVDxLT2ynpuC8pcti2pDMmVT5HEWB3rNqCUE8HGPownXmRsLs6Wyh/nAT
      Tp8Hl8+N5lhyD9s2A+9dY/LKKJ1fforK5t95oczkAJnxv8bT+C/QAwdWK+keJoidKQAhBHlb
      MDqfZWQuS8qwOFDtpaXSg8fxYB4rIQTpvM14LEtzuRunrhYr9v1iLD1pAy4NRVGKIjMsG9OG
      vGkXB4U50yZvF37fOnhkqWW6/UdVFZxLfWtVAaemot0iLMuGqXiW2tSPCTgtPE3/GsuyyGQy
      xSjKfD4PFFqgXC5XjKn3eDzYts358+eJRCJ8/etfx7IsfvrTn1JbW4tt28zNzdHW1sb169dp
      29NK5PIErrxO08k2mh5vw+W7M6zCNi2uvv5b4jPzPP6N5/BV3LmFqrnYQ2b8e7gb/xjVWYmw
      Mgg7B7aBMFMg8gg7i7ByCCsLdm5p/XIGYed3lgCEEMynTQaiGW4s5Kjw6LRXe6kLOtHUndvn
      L1SBwuIWI/JLfO3/GUXz8PHHH3P9+nWefvppamtr+eijj3j//fd55ZVX6O/vR9d1ZmZmOHz4
      MLW1tQwNDdHc3IzL5SKVShEKhejp6cE0TZqbmrn4zgWGrvRjpg06nz7BH//pt9Gdd9YNIQRm
      Ns/HP+5CURWO/8EzOL2rT77lYx+Tm/k5IArxSaoLRXWiaD5QHSiqG4SOWDAhYQIOFLcftbxi
      Z3iBTFswHc9x/WaaZM6ipdLDKx0VBFzaZ1/8iCKEwM7dxEoNYSUHsdIjCNvA2/KnKFphpVVL
      SwtXrlxhz549uN1uWlpacDgc1NTU8Nprr/GlL32JcDhMT08Pvb297Nq1i2g0yr59+9A0jUgk
      UogAnZhl5oMRdpdVs+u5p8m6TUJlZVjCQr9LFUzHknz0o/co21PJkS9+DlW79/fkKH/8jnGA
      EAIyBvbcImI2gUhnUXxuqHSiOHSwbEQs/WgLIJEzGYpmGZ7L4Hdq7Kvy0FzhRlNKG1pQCoSd
      x85MYmXGMRP9WOlREDaaby+arwVn1fOonj0rFqv/4Ac/oL29ncnJSUKhEN3d3bzyyitcvnyZ
      AwcOoCgKjz32GOl0mpGREQ4ePMj8/DyaplEWCHH+7/4fStRkV30FvlMtnPnCS0xNTeF2uxka
      GsLpvHNh/PzELN0/7qL55H72PXdoTd+TsG1EPI2YW8SeS0DGAIcGDh3F7cSOpzBvxjBsi5xq
      k1Xt9XWBlpPjer1eKisrMQyD8fFxmpubcTgcQMFffu7cOVpaWjh27Bg9PT309/fzzDPP0NXV
      RWtrK5FIhN27dyOE4NixYw9cOU1bcDNhsJi1CCcMZpN5GspdtO/yUObR1+zafPPNN3E4HLz0
      0ktEo1HOnz/PkSNHGB0dRVVVysvLicfj1NTU0NHRcdcvtFQIK4eVHsNKj2Am+rAz4yh6AM27
      F823D82/H9VZBYq26udtGAa2baPrOqqqFv/O5XLkcjkCgUBxLiObzeL1ejEyOUY/6Gf0w37K
      6ipoe/4wFQ1VK8IPVmNu7CbdP7nAwZePU3+keYVdouB5gLxZ+NswC0/xvFk4lsphLaRIGRak
      M5DLYWJjWxaWbWGrCgKB4tZRHCqaLVBtsf7kuLFYjNnZWcrLyxkaGqKmpob+/n4ee+wxAIaH
      hzlx4gRXrlzh2LFjDA8P8+KLL/I3f/M3fO1rX6O7u5t4PM7w8HAhiaq/iigB9oScRffcsifD
      sApei1t/W8v/swWqUvB0qAocq/fzZFMAt64+kKAWFxfxeApdgUQiwfXr1zlz5gyvvfYaLS0t
      JJNJRkZGSKVSjI+Po2ka1e4KwpfP0fJk4z37rKsxNLnI5GQFLxxvYa0WW7bJube+T6jcS1lw
      ESszAXausAbXvx/N909Q9ABKTocYwPjST4G8kWPok9+w9/BJ3L47B5t3I3rL3wuz00RGh8lG
      nFh5i71PtBOq9RGPjRKPjd7zfQSCqf4e5kei7N6zl3RkgIH/ex07m0cYJiKXR5gm2ALbshCW
      QNg22DbCFmTIEM/FcCshbDsPDgVTNVGFIG/nyedz5E0D0zQwbQNVFWiaQNPXKYDbk+Patk0o
      FGJycrKYHFcIQTQaJZPJMD8/TyaTIRqN4nA4CIfDZDIZXnjhBS5evEg6nebt935D/YkXcGsq
      LsfvvBhuXUVXCyt4dBUUBLoCqiLQFNAUgQKkLQVLKFS6BVYuQyp3//dza2OYy+VYWCisSEok
      EhiGwc2bN7Esi1gsRjab5fnnn+fdd9/FMAx6enp4ouUYqj2MlYiSzznW/HnqKZNd5hOI2Thr
      bZYNI0P0xiipeBmpqt3ALW7BeYChe15vmgbRyaXFKu61Z3dLLkRJzEWobT0IqMSiI8SiI/d1
      rUAQnRzF6fKQElFSM9GVJyjAPT7O5EKcRGaWxo4KvG4nug5OF+g6OBwKugOcTnA4CscK8yoF
      l/S6ukC2bfPhhx/i9Xqprq7Gtm0mJydpbGyktrYWgHQ6zfnz5zlw4EAxZuby5cu88MILvPvu
      u3R0dFBdXU0qleLTTz+ldd8+du2ux+P47Cf37SHFt4Y3b0RI8YULF4qDvlAoRFdXF48//jij
      o6NomsbJkycZGxsjnU6Tz+fpPNpJLpnBHfDcV5N/O1nDJJPLU+Z3r9lWIQTZ5LVka8EAAArI
      SURBVCK604XDtfakUcK2SSfiePzBzxx03g0zb5DPZvAEQmu+FiCbSqLp+gPZbuXz5LJpPP7g
      mj+3DU+Oe/vrzXKDCiH4+c9/zsLCAt/85jcxTZNf/epXJJNJzp49y1/+5V9y+vRprl27xpEj
      R9izZ09RlFvJjRs3UFWV+vp6TNNkcHCQpqam4tpYr9dLOp0mEAjg9XpXfFaWZdHf309zczNe
      r5eFhQUikQgtLS0MDg7S0NDA7Ows1dXVGIZBeXn5PSz5Hel0uhicp+s609PTWJZFVVUVw8PD
      HDhwgP7+fjo6OojH43e87/T0NKZp0tjYiGVZDA4OUl9fTzKZJJ/PEwqFiMfjVFRU4HQ67xgb
      LZfX0NCAZVkMDAzQ0NDA4uIifr+fWCxGeXk5lmVRVla2olInk0kmJydpa2tD0zRu3LiBpmkE
      g0EmJiZoa2tjaGiIjo4OFhYW7rD93Llz6LrOs88+SzweX78X6PZQ560KfbYsC6fTyRNPPFG8
      8ebmZsLhML/61a9oampCCEEmk+HDDz9kfHyc3//939/S0GzDMLh48SKapnH27Fl6e3vJ5XL0
      9vaiqiq5XA6Xy0U+n8fr9XLmzJkVAvjkk08AeOedd/jiF7/IO++8Q3l5edHl2NPTU2xVvV4v
      n//85+/rCXj+/Hmqqqq4fPkyhw8f5v3338cwDHw+Hy0tLfzoRz8qJpdqaGhYUQnz+TwXLlxA
      13UqKysZHx8nGo1y7dq14mSZ1+vFMAy8Xi/PPffcCgHcfv3IyAixWIze3t7iYiDLstA0DZfL
      xdmzZ1fc0/JnYFkWTU1NfPzxx8XPsb6+np/85CfkcjmGh4dpbW1dYXsymcSyLGzbJplM0tPT
      8/AuildVlUQiQV9fH06nk9nZWbq6ujhy5Ahut5vR0VGam5s5dOgQNTU15PP54kzmVpFOp6mp
      qaGqqopsNksikeDQoUMkk0mqq6upqKhgz549xONxRkdHefPNN1eMQ5LJJO3t7cVjDoeDlpYW
      pqamOHToEE6nE7/fTyQSYXx8nA8//PC+7LIsi46ODlKpFIZhUFlZWbTx0KFDeDwehBCMjIzw
      61//urgFFhTGRpWVldTV1ZFMJonFYhw8eLD4tN61axcNDQ3E43FGRkZ46623sG/Z7zebzRb3
      j0ilUiwsLHDw4MFiy+FwOIqLgqampujq6lphu6IotLe3k0gkSKfT7N69m7KyMkzTpKOjg2Aw
      iG3bDA0N8fbbb5PNZldcuzw2XbbpoZ0HUFWVF154odhcCiE4ffo02WyWs2fP8uyzzxbDnB0O
      B5FIpLiIZasIBoOMj4+j6zq7d++mpqaGn//85zQ3NzM+Pl5cALO4uFjcUOJWGhsbeeONN6iv
      r6e3txdd1+nq6uKpp57i9ddfp6mpifb2dmpqarh69ep9t24VFRW8/vrrHD16lHA4zMzMDPl8
      npaWFv7+7/+eEydOEI/HURSFDz74YMUT2OfzFZ0BFRUV1NbW8uabb1JXV0c0GiWbzXLmzBnm
      5+exLIt4PL6ibJ/Px8zMDEKIohCW73F5JdznPvc5ysvLuXbt2h335Pf7+cUvfsHjjz9OMplk
      eHgYRVGora3l9ddf59SpU1RUVKDrOh988MEdZWuahq7rzM3N0d7evrNCIUrB7euOlzMlLGdL
      u/ULvv01FD4/TdNWdA+WV7Pd+rne6gz4LG59n+Vrl8tePr5cLe72vsvnLx9ftnH5npb/Xu2e
      br9++V5uXz24/HrFfMBtti9/voqi3JfttyMFINnRbEnNXM4Lc7/cno1hq64t9fUPs+3rvb5U
      ZW96C/AgrOfDWJ6aL9UXsZ4W79bUKFtd9nL56/nc1tIN28iyb+9SrYVt2TdZTwVcr5tzvUFy
      6ym/lGWXuvz1lH2vTRo/89rt2AJIJFvFpucF2gzGxsaYnJzE5/PhdDqZmJggGLz7NPjo6ChD
      Q0O43W4+/fRT8vk8ZWVlD1RuOBxmfHwcp9PJ9evXsW276HeempoqbhJ+K/Pz8/T19WEYBlNT
      U4TDYaqrqx/oiWUYBr29vUQiEWpqarhy5QqxWIyqqioURWFmZqaY/UEIQU9PD9PT0wD09fUR
      CAQeyBVs2zbd3d34/X4WFxcZHBwkEAiQyWTo6enB6XQWd4MfHh4uJvGKRCL09/djmibDw8Mk
      EgkqKysfqPyPPvqIUCiE0+nk448/pqKigsHBQVRVXZHKBX63P0AsFiORSDA8PEx1dfVdW6ht
      2QX6LGKxGA6HY0XI9a5du7h27RqBQICJiQkCgQBPPvkkjY2NxGIxwuEwTU1NTE5O0tTU9EDl
      7tq1i0gkQiQSIRAIMDY2Rn19PUIIFhYWiMfjxONxNE0jm81y8uRJysrKSKfTLCwsoKoqPp+v
      mCR2rTgcDpqbm+lf2h0llUpRXV1Nb28vs7Oz7Nq1i+HhYYLBIIcPH2bfvn1cvXqVcDjMkSNH
      GBoa4tChtef3URSF6upq8vk8/f39xSWShmGgaRqapvHee+8V721kZITnn3+eqqoqUqkU09PT
      NDQ0EI1GHyhRmqIo7Nq1q+hMSaVSRCIRwuEwXq+XyclJTNNkcXGRpqYm9u7dS3NzM6OjoxiG
      QWNjI5FIZEVis2Ueypng5cmf5Zw8+Xy+GGGaSCSora0lGAwihKCvr4+GhgYqKiowDOPeC7U/
      g+VBVktLCy6XqzjFb9s2pmkWJ4I8Hg9NTU1YlkU0GmVxcZH29nby+TyGYTzwQNUwDPr7++ns
      LGwQt5xmPBKJUF5eTj6f5+jRo8WKshyCrqoqmUzmgctVFKV4716vl6amJqamCru4OJ1OLMsi
      lUrhcrmorKykubmZbDbLzMwMlmWxf/9+stls0We/nvIBysvLmZiYoLy8nGw2SzqdJp1OU1FR
      QUtLS1GonZ2dxR1plh+Wt/NQtgALCwtEo1H2799PJBLB5/OtWJyyXDEVRUHXdcLhcHH2dc+e
      PQ9c7tTUVLGix2IxOjo6sCyLa9eu0dbWxsTEBA6Hg/LycpxOZ3FtrGmazM3NEQqFME1zRQKq
      tWBZFg6Hg/Hxcfbt28e+ffuKCa6mp6epra1ldHSU1tZWbNvG5XIxNjZGU1MT4+PjdHR0PFC5
      +XyeWCyGruu0tLQUy1dVFY/Hg9frZe/evfh8PvL5PKZpEggEijPcpmliGMa6un7xeJxMJkMw
      GKSuro6qqir8fn8xvbrX6y22qoZh4HK5GB8fp76+nmg0uur3LgfBkh3NQ9kFkkg2CikAyY5G
      CkCyo5ECkGwK165dIxqNcv369eJcwK0sLi4W3bnLCCF4++23CYfDQMHZMTAwUPz/9PT0irUF
      G8FD6QWSbH8uX75MTU0Ns7OzQKHyjo2NcfLkSX7zm9/Q2dlJOBwmGo3y+OOP88Mf/pBgMMhH
      H33EoUOH6Onpoauri71799Ld3U19fT3nz5/n937v9xgdHWXPnj28+OKL67ZTtgCSTaGxsZGB
      gQF8Ph9CCLq7uxFCcOHCBZxOJ+FwmF/+8pfU1NQQi8Worq6moaGB48ePU1dXR3d3N6+++iqZ
      TAZVVbl+/Xpxdd/s7GxRWOtFCkCyKRw+fJiGhgaampo4fPgwzz77LKFQiNOnTxfnDb7zne8Q
      DoepqKggmUySy+VoaWkBoLOzkwsXLlBXV4eiKLS1tdHa2src3BxNTU00NjZuiJ1yHkCyo5Et
      gGRH8/8B+NrTDMMkPQkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Trend - Total Deaths' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Virus density heat map' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='total cases cross tab' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='total cases crosstab' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='total cases heat map' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='total deaths heat map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
